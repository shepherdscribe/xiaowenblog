-- MySQL dump 10.13  Distrib 5.5.56, for Linux (x86_64)
--
-- Host: localhost    Database: xiaowen
-- ------------------------------------------------------
-- Server version	5.5.56-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `wen_admin_users`
--

DROP TABLE IF EXISTS `wen_admin_users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wen_admin_users` (
  `id` tinyint(4) NOT NULL AUTO_INCREMENT COMMENT '//主键ID',
  `name` varchar(50) NOT NULL,
  `nickname` varchar(50) NOT NULL DEFAULT '' COMMENT '//别名',
  `pwd` varchar(350) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='//后台管理员表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wen_admin_users`
--

LOCK TABLES `wen_admin_users` WRITE;
/*!40000 ALTER TABLE `wen_admin_users` DISABLE KEYS */;
INSERT INTO `wen_admin_users` VALUES (1,'18530872542','小文','eyJpdiI6IlJBNTd4ck01Vmc1V2xqall4V2pERnc9PSIsInZhbHVlIjoiMW1aa3M4eTB5Um9jMXJzVGMwOERBZz09IiwibWFjIjoiNjI3ZTdmNGQ2NjkzMDZhNmM4YzM4ODljYTRhYWQ4OTY1ZTg1ZTVhOWE4MDViNjZiM2MwYzhlN2Q3NWE2MGYyNiJ9');
/*!40000 ALTER TABLE `wen_admin_users` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wen_article`
--

DROP TABLE IF EXISTS `wen_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wen_article` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT '//文章ID',
  `cid` int(11) NOT NULL COMMENT '//分类ID',
  `uid` tinyint(4) NOT NULL COMMENT '//作者',
  `name` varchar(100) NOT NULL COMMENT '//文章名称',
  `tags` varchar(100) NOT NULL DEFAULT '' COMMENT '//标签，关键词',
  `description` varchar(255) NOT NULL DEFAULT '' COMMENT '//描述',
  `cover` varchar(255) NOT NULL COMMENT '//封面图',
  `is_recom` tinyint(4) NOT NULL DEFAULT '0' COMMENT '//是否推荐',
  `like_num` int(11) NOT NULL DEFAULT '0' COMMENT '//点赞量',
  `sort` smallint(6) NOT NULL DEFAULT '255',
  `hits` int(11) NOT NULL DEFAULT '0' COMMENT '//浏览量',
  `content` text NOT NULL COMMENT '//文章内容',
  `created_at` int(11) NOT NULL COMMENT '创建日期',
  `updated_at` int(11) NOT NULL COMMENT '//修改日期',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=87 DEFAULT CHARSET=utf8 COMMENT='//文章表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wen_article`
--

LOCK TABLES `wen_article` WRITE;
/*!40000 ALTER TABLE `wen_article` DISABLE KEYS */;
INSERT INTO `wen_article` VALUES (13,11,1,'什么是php中的序列化和反序列化？','php,序列化','php序列化是将变量转换为可保存或传输的字符串的过程；php反序列化就是在适当的时候把这个字符串再转化成原来的变量使用。这两个过程结合起来，可以轻松地存储和传输数据，使程序更具维护性。','http://7xviiw.com1.z0.glb.clouddn.com/20160624204300163.php',0,10,255,866,'<p>序列化是将变量转换为可保存或传输的字符串的过程；反序列化就是在适当的时候把这个字符串再转化成原来的变量使用。这两个过程结合起来，可以轻松地存储和传输数据，使程序更具维护性。</p><h2>serialize和unserialize</h2><p>这两个是序列化和反序列化PHP中数据的常用函数。</p><pre class=\"brush:php;toolbar:false\">&lt;?php\r\n$a&nbsp;=&nbsp;array(&#39;a&#39;&nbsp;=&gt;&nbsp;&#39;Apple&#39;&nbsp;,&#39;b&#39;&nbsp;=&gt;&nbsp;&#39;banana&#39;&nbsp;,&nbsp;&#39;c&#39;&nbsp;=&gt;&nbsp;&#39;Coconut&#39;);\r\n//序列化数组\r\n$s&nbsp;=&nbsp;serialize($a);\r\necho&nbsp;$s;//输出结果：a:3:{s:1:&quot;a&quot;;s:5:&quot;Apple&quot;;s:1:&quot;b&quot;;s:6:&quot;banana&quot;;s:1:&quot;c&quot;;s:7:&quot;Coconut&quot;;}\r\n//反序列化\r\n$o&nbsp;=&nbsp;unserialize($s);\r\nprint_r($o);//输出结果&nbsp;Array&nbsp;(&nbsp;[a]&nbsp;=&gt;&nbsp;Apple&nbsp;[b]&nbsp;=&gt;&nbsp;banana&nbsp;[c]&nbsp;=&gt;&nbsp;Coconut&nbsp;)\r\n?&gt;</pre><p>当数组值包含如双引号、单引号或冒号等字符时，它们被反序列化后，可能会出现问题。为了克服这个问题，一个巧妙的技巧是使用base64_encode和base64_decode。</p><pre class=\"brush:php;toolbar:false\">$obj&nbsp;=&nbsp;array();\r\n//序列化\r\n$s&nbsp;=&nbsp;base64_encode(serialize($obj));\r\n//反序列化\r\n$original&nbsp;=&nbsp;unserialize(base64_decode($s));</pre><p>但是base64编码将增加字符串的长度。为了克服这个问题，可以和gzcompress一起使用。</p><pre class=\"brush:php;toolbar:false\">//定义一个用来序列化对象的函数\r\nfunction&nbsp;my_serialize(&nbsp;$obj&nbsp;)\r\n{\r\n&nbsp;&nbsp;&nbsp;return&nbsp;base64_encode(gzcompress(serialize($obj)));\r\n}\r\n//反序列化\r\nfunction&nbsp;my_unserialize($txt)\r\n{\r\n&nbsp;&nbsp;&nbsp;return&nbsp;unserialize(gzuncompress(base64_decode($txt)));\r\n}</pre><h2>json_encode 和 json_decode</h2><p>使用JSON格式序列化和反序列化是一个不错的选择：&nbsp;</p><p>使用json_encode和json_decode格式输出要serialize和unserialize格式快得多。</p><p>JSON格式是可读的。</p><p>JSON格式比serialize返回数据结果小。</p><p>JSON格式是开放的、可移植的。其他语言也可以使用它。</p><pre class=\"brush:php;toolbar:false\">$a&nbsp;=&nbsp;array(&#39;a&#39;&nbsp;=&gt;&nbsp;&#39;Apple&#39;&nbsp;,&#39;b&#39;&nbsp;=&gt;&nbsp;&#39;banana&#39;&nbsp;,&nbsp;&#39;c&#39;&nbsp;=&gt;&nbsp;&#39;Coconut&#39;);\r\n//序列化数组\r\n$s&nbsp;=&nbsp;json_encode($a);\r\necho&nbsp;$s;\r\n//输出结果：{&quot;a&quot;:&quot;Apple&quot;,&quot;b&quot;:&quot;banana&quot;,&quot;c&quot;:&quot;Coconut&quot;}\r\necho&nbsp;&#39;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&#39;;\r\n//反序列化\r\n$o&nbsp;=&nbsp;json_decode($s);</pre><p>在上面的例子中，json_encode输出长度比上个例子中serialize输出长度显然要短。</p><h2>var_export 和 eval</h2><p>var_export 函数把变量作为一个字符串输出；eval把字符串当成PHP代码来执行，反序列化得到最初变量的内容。</p><pre class=\"brush:php;toolbar:false\">$a&nbsp;=&nbsp;array(&#39;a&#39;&nbsp;=&gt;&nbsp;&#39;Apple&#39;&nbsp;,&#39;b&#39;&nbsp;=&gt;&nbsp;&#39;banana&#39;&nbsp;,&nbsp;&#39;c&#39;&nbsp;=&gt;&nbsp;&#39;Coconut&#39;);\r\n//序列化数组\r\n$s&nbsp;=&nbsp;var_export($a&nbsp;,&nbsp;true);\r\necho&nbsp;$s;//输出结果：&nbsp;array&nbsp;(&nbsp;&#39;a&#39;&nbsp;=&gt;&nbsp;&#39;Apple&#39;,&nbsp;&#39;b&#39;&nbsp;=&gt;&nbsp;&#39;banana&#39;,&nbsp;&#39;c&#39;&nbsp;=&gt;&nbsp;&#39;Coconut&#39;,&nbsp;)\r\n//反序列化\r\neval(&#39;$my_var=&#39;&nbsp;.&nbsp;$s&nbsp;.&nbsp;&#39;;&#39;);\r\nprint_r($my_var);</pre><h2>wddx_serialize_value 和 wddx deserialize</h2><pre class=\"brush:php;toolbar:false\">wddx_serialize_value函数可以序列化数组变量，并以XML字符串形式输出。\r\n$a&nbsp;=&nbsp;array(&#39;a&#39;&nbsp;=&gt;&nbsp;&#39;Apple&#39;&nbsp;,&#39;b&#39;&nbsp;=&gt;&nbsp;&#39;banana&#39;&nbsp;,&nbsp;&#39;c&#39;&nbsp;=&gt;&nbsp;&#39;Coconut&#39;);\r\n//序列化数组\r\n$s&nbsp;=&nbsp;wddx_serialize_value($a);\r\necho&nbsp;$s;\r\n//输出结果（查看输出字符串的源码）：&lt;wddxPacket&nbsp;version=&#39;1.0&#39;&gt;&lt;header/&gt;&lt;data&gt;&lt;struct&gt;&lt;var&nbsp;name=&#39;a&#39;&gt;&lt;string&gt;Apple&lt;/string&gt;&lt;/var&gt;&lt;var&nbsp;name=&#39;b&#39;&gt;&lt;string&gt;banana&lt;/string&gt;&lt;/var&gt;&lt;var&nbsp;name=&#39;c&#39;&gt;&lt;string&gt;Coconut&lt;/string&gt;&lt;/var&gt;&lt;/struct&gt;&lt;/data&gt;&lt;/wddxPacket&gt;\r\necho&nbsp;&#39;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&#39;;\r\n//反序列化\r\n$o&nbsp;=&nbsp;wddx_deserialize($s);\r\nprint_r($o);//输出结果：Array&nbsp;(&nbsp;[a]&nbsp;=&gt;&nbsp;Apple&nbsp;[b]&nbsp;=&gt;&nbsp;banana&nbsp;1&nbsp;=&gt;&nbsp;Coconut&nbsp;)</pre><p>可以看出，XML标签字符较多，导致这种格式的序列化还是占了很多空间。</p><h2>php序列化小结</h2><p>上述所有的函数在序列化数组变量时都能正常执行，但运用到对象就不同了。例如json_encode序列化对象就会失败。反序列化对象时，unserialize和eval将有不同的效果。</p>',1466772606,1536700010),(14,11,1,'laravel利用七牛存储网站图片等静态资源','php,laravel','众所周知，一个成功的网站离不开大量的图片，对于有实力的公司，通常会有自己的静态资源服务器用于存放，那么今天小文教大家利用第三方来存储图片，来提高网站加载速度，减少网站流量的浪费!','http://7xviiw.com1.z0.glb.clouddn.com/20160624205457478.jpg',0,14,255,3227,'<p>众所周知，一个成功的网站离不开大量的图片，对于有实力的公司，通常会有自己的静态资源服务器用于存放，那么今天小文教大家利用第三方来存储图片，来提高网站加载速度，减少网站流量的浪费!这次我将用laravel做演示。</p><h2>前台说明</h2><p>前台小文用的是一款jquery的插件，uploadfy,来进行上传，代码如下:<br/></p><pre class=\"brush:js;toolbar:false\">$(function()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;$(&#39;#file_upload&#39;).uploadify({\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;buttonText&#39;&nbsp;:&nbsp;&#39;上传图片&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;formData&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;timestamp&#39;&nbsp;:&nbsp;&#39;{{time()}}&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;_token&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&quot;{{csrf_token()}}&quot;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;swf&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&quot;{{asset(&#39;resources/org/uploadify/uploadify.swf&#39;)}}&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;uploader&#39;&nbsp;:&nbsp;&quot;{{url(&#39;admin/upload&#39;)}}&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;onUploadSuccess&#39;&nbsp;:&nbsp;function(file,&nbsp;data,&nbsp;response)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data&nbsp;=&nbsp;$.parseJSON(data);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(data.status){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(&#39;input[name=cover]&#39;).val(data.info);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(&#39;#artical_cover&#39;).attr(&#39;src&#39;,data.info);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});\r\n&nbsp;});</pre><p>熟悉这款插件的朋友们，会明白它将文件信息异步发送给域名/amdmin/upload这个地址。<br/></p><h2>后台说明</h2><p>在后台，我们接口文件信息，开始进行存储七牛的步骤。</p><p>首页百度七牛，注册为用户，并下载其php-sdk并引入项目</p><p><img src=\"/ueditor/php/upload/image/20160624/1466773565514225.png\" title=\"1466773565514225.png\" alt=\"blob.png\"/></p><pre class=\"brush:php;toolbar:false\">require_once(&#39;resources/org/qiniu/autoload.php&#39;);//引入根目录的自动加载文件\r\nuse&nbsp;Qiniu\\Auth;\r\nuse&nbsp;Qiniu\\Storage\\UploadManager;//本次用到的这两个类，一个是验证秘钥，一个是上传类</pre><p>获取我们的accessKey和secretKey</p><p><img src=\"/ueditor/php/upload/image/20160624/1466773804343333.png\" title=\"1466773804343333.png\" alt=\"blob.png\"/></p><p style=\"text-align: left;\">开始我们的laravel上传</p><pre class=\"brush:php;toolbar:false\">protected&nbsp;$url_access&nbsp;=&nbsp;&#39;http://7xviiw.com1.z0.glb.clouddn.com/&#39;;//空间地址，可以在七牛个人中心创建\r\npublic&nbsp;function&nbsp;upload()\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;$file&nbsp;=&nbsp;Input::file(&#39;Filedata&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;if($file-&gt;isValid()){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$accessKey&nbsp;=&nbsp;&#39;****************************************&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$secretKey&nbsp;=&nbsp;&#39;****************************************&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$auth&nbsp;=&nbsp;new&nbsp;Auth($accessKey,&nbsp;$secretKey);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;要转码的文件所在的空间\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$bucket&nbsp;=&nbsp;&#39;xiaowenblog&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;生成上传&nbsp;Token\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$token&nbsp;=&nbsp;$auth-&gt;uploadToken($bucket);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;要上传文件的本地路径\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$filePath&nbsp;=&nbsp;$file-&gt;getRealPath();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;上传到七牛后保存的文件名\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$entension&nbsp;=&nbsp;$file&nbsp;-&gt;&nbsp;getClientOriginalExtension();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$key&nbsp;=&nbsp;date(&#39;YmdHis&#39;).mt_rand(100,999).&#39;.&#39;.$entension;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;初始化&nbsp;UploadManager&nbsp;对象并进行文件的上传\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$uploadMgr&nbsp;=&nbsp;new&nbsp;UploadManager();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;调用&nbsp;UploadManager&nbsp;的&nbsp;putFile&nbsp;方法进行文件的上传\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list($ret,&nbsp;$err)&nbsp;=&nbsp;$uploadMgr-&gt;putFile($token,&nbsp;$key,&nbsp;$filePath);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($err&nbsp;!==&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;[&#39;status&#39;=&gt;0,&#39;info&#39;=&gt;$err];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;[&#39;status&#39;=&gt;1,&#39;info&#39;=&gt;$this-&gt;url_access.$ret[&#39;key&#39;]];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//失败返回Err信息，成功返回图片的地址。\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p>此时，我们将图片地址存入数据库即可。<br/></p><h2>写在最后</h2><p>由于篇幅较短，讲的不是太清楚哈...如果有不懂的，欢迎加群交流！这样用了七牛来存储图片，网站加载速度会快一些，还有七牛的一些API可以研究下，如缩略等~</p>',1466774303,1536716448),(15,23,1,'centos6.5下LNMP环境搭建','linux,lnmp','小文将给大家演示如何在linux环境下搭建LNMP环境~','http://7xviiw.com1.z0.glb.clouddn.com/20160624212251103.png',1,11,5,1736,'<p>小文将给大家演示如何在linux环境下搭建LNMP环境~本次环境是Centos6.5。</p><h2>安装依赖包</h2><p>在正式搭建环境前安装好所需的依赖包直接在liunx命令行界面执行下列命令行</p><pre class=\"brush:bash;toolbar:false\">yum&nbsp;-y&nbsp;install&nbsp;cmake&nbsp;lrzsz&nbsp;gcc&nbsp;automake&nbsp;autoconf&nbsp;libtool&nbsp;gcc-c++&nbsp;libevent&nbsp;libevent-devel&nbsp;zlib&nbsp;zlib-devel&nbsp;openssl&nbsp;openssl-devel&nbsp;libxml2&nbsp;libxml2-devel&nbsp;libjpeg&nbsp;libjpeg-devel&nbsp;libpng&nbsp;libpng-devel&nbsp;libcurl&nbsp;libcurl-devel&nbsp;ncurses-devel&nbsp;libcurl&nbsp;libcurl-devel</pre><p><span style=\"font-family:宋体\">切换到安装包存放位置（可自行指定）这里指定为</span>/usr/local/src<span style=\"font-family:宋体\">并下载（或拖入已经下载好的服务安装包）</span></p><pre class=\"brush:bash;toolbar:false\">cd&nbsp;/usr/local/src</pre><h2>pcre的安装</h2><p>在安装nginx前要先安装pcre(nginx要依赖于pcre)</p><p>首先切换至/usr/local/src目录并新建文件夹pcre-source并切换至新建文件夹pcre-source.</p><pre class=\"brush:bash;toolbar:false\">cd&nbsp;/usr/local/src\r\nmkdir&nbsp;pcre-source\r\ncd&nbsp;pcre-source</pre><pre class=\"brush:bash;toolbar:false\">wget&nbsp;&nbsp;ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.38.tar.gz</pre><p>解压pcre安装包</p><pre class=\"brush:bash;toolbar:false\">tar&nbsp;-zxvf&nbsp;pcre-8.38.tar.gz</pre><p>切换至解压后的文件包并指定安装路径</p><pre class=\"brush:bash;toolbar:false\">cd&nbsp;pcre-8.38\r\n./configure&nbsp;--prefix=/usr/local/pcre</pre><p>编译安装pcre服务</p><pre class=\"brush:bash;toolbar:false\">make&nbsp;&amp;&amp;&nbsp;make&nbsp;install</pre><h2>nginx的安装</h2><p>首先切换至/usr/local/src目录</p><pre class=\"brush:bash;toolbar:false\">cd&nbsp;/usr/local/src</pre><p>下载方式链接地址：</p><pre class=\"brush:bash;toolbar:false\">wget&nbsp;http://nginx.org/download/nginx-1.11.1.tar.gz</pre><p>解压安装包</p><pre class=\"brush:bash;toolbar:false\">tar&nbsp;-zxvf&nbsp;nginx-1.11.1.tar.gz</pre><p>切换至解压后的包内并指定安装路径</p><pre class=\"brush:bash;toolbar:false\">cd&nbsp;nginx-1.11.1\r\n./configure&nbsp;--prefix=/usr/local/nginx&nbsp;--with-pcre=/usr/local/src/pcre-source/pcre-8.38</pre><p>编译并安装nginx服务</p><pre class=\"brush:bash;toolbar:false\">make&nbsp;&amp;&amp;&nbsp;make&nbsp;install</pre><p>关闭防火墙并启动nginx</p><pre class=\"brush:bash;toolbar:false\">service&nbsp;iptables&nbsp;stop&nbsp;&nbsp;&nbsp;\r\n/usr/local/nginx/sbin/nginx</pre><p>打开浏览器输入ECS主机IP地址或域名地址出现如下则nginx安装成功</p><p><img src=\"/ueditor/php/upload/image/20160624/1466775384923694.png\" title=\"1466775384923694.png\" alt=\"blob.png\"/></p><h2>PHP的安装</h2><p>首先切换至/usr/local/src目录</p><pre class=\"brush:bash;toolbar:false\">cd&nbsp;/usr/local/src</pre><p>下载方式链接地址：</p><pre class=\"brush:bash;toolbar:false\">wget&nbsp;http://cn2.php.net/get/php-5.6.22.tar.gz/from/this/mirror</pre><p>输入ls在目录下会多个文件mirror(是php的源码包只是在链路的网站上名为mirror)</p><p>解压php源码包&nbsp;</p><pre class=\"brush:bash;toolbar:false\">tar&nbsp;-zxvf&nbsp;mirror</pre><p>切换至php解压包并指定安装路径和对其他服务扩展的支持路径</p><pre class=\"brush:bash;toolbar:false\">./configure&nbsp;--prefix=/usr/local/php&nbsp;\\\r\n--with-gd&nbsp;\\\r\n--enable-gd-native-ttf&nbsp;\\\r\n--enable-gd-jis-conv&nbsp;\\\r\n--with-mysql=mysqlnd&nbsp;\\\r\n--enable-mysqlnd&nbsp;\\\r\n--with-openssl&nbsp;\\\r\n--enable-mbstring&nbsp;\\\r\n--with-pdo-mysql=mysqlnd&nbsp;\\\r\n--enable-fpm</pre><p>编译并安装php服务 make &amp;&amp; make install（此过程时间较长）</p><p>切换至启动文件目录并拷贝一份启动文件命名可以被php识别的启动文件名为php-fpm.conf</p><pre class=\"brush:bash;toolbar:false\">cd&nbsp;/usr.local/php/etc/</pre><p>启动</p><pre class=\"brush:bash;toolbar:false\">php&nbsp;/usr/local/php/sbin/php-fpm</pre><p>切换至Php解压包内复制一份php配置文件更名为php.ini并复制到php服务指定的位置</p><pre class=\"brush:bash;toolbar:false\">cd&nbsp;/usr/local/src/php-5.6.22/\r\ncp&nbsp;php.ini-development&nbsp;/usr/local/php/lib/php.ini</pre><h2>整合php和nginx</h2><p>编辑nginx配置文件&nbsp;</p><pre class=\"brush:bash;toolbar:false\">vim&nbsp;/usr/local/nginx/conf/nginx.conf</pre><p>下面2张截图部分红色部分修改为你自己想要指定的网站根目录蓝色部分为加入的部分用于支持扩展服务</p><p><img src=\"/ueditor/php/upload/image/20160624/1466775718403462.png\" title=\"1466775718403462.png\" alt=\"blob.png\"/></p><p><img src=\"/ueditor/php/upload/image/20160624/1466775730965102.png\" title=\"1466775730965102.png\" alt=\"blob.png\"/></p><p>给nginx配置文件分配权限</p><pre class=\"brush:bash;toolbar:false\">chmod&nbsp;777&nbsp;/usr/local/nginx/conf/nginx.conf</pre><p>并重启nginx服务使配置生效&nbsp;</p><pre class=\"brush:bash;toolbar:false\">/usr/local/nginx/sbin/nginx&nbsp;-s&nbsp;reload</pre><p>在指定的网站根目创建Php文件测试nginx与php整合是否成功</p><pre class=\"brush:bash;toolbar:false\">cd&nbsp;/usr/local/nginx/html/\r\nvim&nbsp;test.php</pre><p>在test.php 写上</p><pre class=\"brush:php;toolbar:false\">&lt;?php&nbsp;phpinfo();&nbsp;?&gt;</pre><p>保存退出</p><p>在浏览器输入ip/test.php查看结果。如下则说明成功</p><p><img src=\"/ueditor/php/upload/image/20160624/1466775862824471.png\" title=\"1466775862824471.png\" alt=\"blob.png\"/></p><h2>mysql的安装</h2><p>以yum方式安装mysql</p><pre class=\"brush:php;toolbar:false\">yum&nbsp;–y&nbsp;install&nbsp;mysql&nbsp;mysql-server&nbsp;mysql-devel</pre><p>以下图结尾说明成功</p><p><img src=\"/ueditor/php/upload/image/20160624/1466775943469124.png\" title=\"1466775943469124.png\" alt=\"blob.png\"/></p><p>启动mysql&nbsp;&nbsp;&nbsp;&nbsp;</p><pre class=\"brush:bash;toolbar:false\">service&nbsp;mysqld&nbsp;start</pre><p>登录mysql 直接输入mysql 就登录因为刚开始没密码（至此服务搭建完毕）</p>',1466775993,1536700050),(16,23,1,'LNMP一键环境包搭建linux下php开发环境教程','linux,lnmp','史上最简单的linux服务器搭建lnmp环境的方法~lnmp一键安装包搭建环境教程。','http://7xviiw.com1.z0.glb.clouddn.com/20160624214750515.png',0,14,1,5807,'<p>史上最简单的linux服务器搭建lnmp环境的方法~lnmp一键安装包搭建环境教程。</p><h2>方法一</h2><p>登陆后运行：</p><pre class=\"brush:bash;toolbar:false\">screen&nbsp;-S&nbsp;lnmp</pre><p>如果提示screen: command not found 命令不存在可以执行：yum install screen 或 apt-get install screen安装，详细的screen教程。</p><pre class=\"brush:bash;toolbar:false\">wget&nbsp;-c&nbsp;https://api.sinas3.com/v1/SAE_lnmp/soft/lnmp1.2-full.tar.gz</pre><pre class=\"brush:bash;toolbar:false\">tar&nbsp;zxf&nbsp;lnmp1.2-full.tar.gz</pre><pre class=\"brush:bash;toolbar:false\">cd&nbsp;lnmp1.2-full</pre><pre class=\"brush:bash;toolbar:false\">./install.sh&nbsp;lnmp</pre><h2>方法二<br/></h2><p>如果嫌以上还麻烦，那么请输入一下一条命令，便可一键安装！</p><p>1、登陆后运行：</p><pre class=\"brush:bash;toolbar:false\">screen&nbsp;-S&nbsp;lnmp</pre><p>如果提示screen: command not found 命令不存在可以执行：</p><pre class=\"brush:bash;toolbar:false\">yum&nbsp;install&nbsp;screen</pre><p>或&nbsp;</p><pre class=\"brush:bash;toolbar:false\">apt-get&nbsp;install&nbsp;screen</pre><p>安装好后执行以下命令</p><pre class=\"brush:bash;toolbar:false\">wget&nbsp;-c&nbsp;https://api.sinas3.com/v1/SAE_lnmp/soft/lnmp1.2-full.tar.gz&nbsp;&amp;&amp;&nbsp;&nbsp;tar&nbsp;zxf&nbsp;lnmp1.2-full.tar.gz&nbsp;&nbsp;&amp;&amp;&nbsp;&nbsp;cd&nbsp;lnmp1.2-full&nbsp;&nbsp;&amp;&amp;&nbsp;&nbsp;./install.sh&nbsp;lnmp</pre><p>安装过程中会让你选取下安装的版本和密码等，接下来便是一键安装了，是不是非常的简单呢？<br/></p>',1466776446,1536693268),(17,16,1,'如何将Pjax整合进网站，实现全站无刷新加载？','pjax,ajax','pjax 是 HTML5 pushState 以及 Ajax 两项技术的简称，综合这两个技术可以实现在不刷新页面的情况下载入 HTML 到当前网页，带给你超快速的浏览器体验，而且有固定链接、标题以及后退按钮都是有效的。','http://7xviiw.com1.z0.glb.clouddn.com/20160629195140985.png',1,22,1,7920,'<p>pjax 是 HTML5 pushState 以及 Ajax 两项技术的简称，综合这两个技术可以实现在不刷新页面的情况下载入HTML网页，带给你超快速的浏览器体验，而且有固定链接、标题以及后退按钮都是有效的。</p><h2>pjax工作原理</h2><p>用大白话来说，就是ajax的升级版--可以动态记录历史记录的ajax技术。我们之前用ajax来做无刷新分页，一个最大的不足之处就是无法通过uri来标识这个资源以及历史记录倒退问题，通过利用html5 pushState的api，我们可以轻松达到发送ajax请求的同时，动态的记录状态，这就是pjax!</p><h2>准备工作</h2><p>pjax是嘛玩意我们懂了之后，就要开始用它了！但是我们要写一套复杂的js去pushState么？答案是不需要的，已经有人封装好了JqueryPjax插件，我们只需用人家写好的插件即可。<br/></p><p>由于这款插件依赖于jquery,又依赖jq去操作pushState,所以必须下载1.7版本以上的JQ哦！</p><pre class=\"brush:js;toolbar:false\">&lt;script&nbsp;type=&#39;text/javascript&#39;&nbsp;src=&#39;jquery-2.1.4.min.js&#39;&gt;&lt;/script&gt;\r\n&lt;script&nbsp;type=&#39;text/javascript&#39;&nbsp;src=&#39;pjax.js&#39;&gt;&lt;/script&gt;</pre><h2>开始使用</h2><p>模板中:<br/></p><pre class=\"brush:js;toolbar:false\">$(document).pjax(&#39;a&#39;,&nbsp;&#39;#pjax-container&#39;);\r\n$(document).on(&quot;pjax:timeout&quot;,&nbsp;function(event)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;阻止超时导致链接跳转事件发生\r\n&nbsp;&nbsp;&nbsp;&nbsp;event.preventDefault();\r\n});</pre><p>本页面所有a链接默认用pjax请求数据，请求的数据放入id为pjax-container中。ps:如果前台模板有模板继承，直接写入父类即可。</p><p>后台程序、这里用php程序示范:</p><p>首先判断是pjax请求还是正常的请求，可以封装成一个方法(方法很多~我只做个示范):</p><pre class=\"brush:php;toolbar:false\">protected&nbsp;function&nbsp;is_pjax(){\r\n&nbsp;&nbsp;$input&nbsp;=&nbsp;$_POST;\r\n&nbsp;&nbsp;if(isset($input[&#39;_pjax&#39;])&nbsp;&amp;&amp;&nbsp;!empty($input[&#39;_pjax&#39;])){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;//是pjax请求\r\n&nbsp;&nbsp;}else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;//不是pjax请求\r\n&nbsp;&nbsp;}\r\n}</pre><p>然后控制器根据是否pjax返回不同的数据:<br/></p><pre class=\"brush:php;toolbar:false\">if($this-&gt;is_pjax()){\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;view(&#39;index_pjax&#39;);//返回pjax的模板\r\n}\r\nreturn&nbsp;view(&#39;index&#39;);//返回正常的模板</pre><p>这里用laravel的方法展示了下，TP中是$this-&gt;display()这里不再赘述。<br/></p><p>好了，此时大功告成！<br/></p><h2>解决问题<br/></h2><p>问题:原先容器绑定的事件被新容器替换掉了，新容器的div没有绑定事件，所以JQ等绑定的事件无效。如多说评论框无法正常使用。</p><p>解决:用pjax的加载完成后的回调函数再次绑定即可！</p><pre class=\"brush:js;toolbar:false\">&lt;script&gt;\r\n$(document).on(&#39;pjax:complete&#39;,&nbsp;function()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;pajx_loadDuodsuo();//pjax加载完成之后调用重载多说函数\r\n});\r\nfunction&nbsp;pajx_loadDuodsuo(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;dus=$(&quot;.ds-thread&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;if($(dus).length==1){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;el&nbsp;=&nbsp;document.createElement(&#39;div&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;el.setAttribute(&#39;data-thread-key&#39;,$(dus).attr(&quot;data-thread-key&quot;));//必选参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;el.setAttribute(&#39;data-url&#39;,$(dus).attr(&quot;data-url&quot;));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DUOSHUO.EmbedThread(el);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(dus).html(el);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n&lt;/script&gt;</pre><h2>进一步优化</h2><p>过渡动画效果:</p><p>pjax.js提供了两个api：</p><pre class=\"brush:js;toolbar:false\">&lt;div&nbsp;class=&quot;loading&quot;&gt;&lt;/div&gt;//用css+js写你的过渡动画效果\r\n&lt;script&gt;\r\n$(document).on(&#39;pjax:send&#39;,&nbsp;function()&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$(&quot;.loading&quot;).css(&quot;display&quot;,&nbsp;&quot;block&quot;);//pjax链接点击后显示加载动画；\r\n});\r\n$(document).on(&#39;pjax:complete&#39;,&nbsp;function()&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$(&quot;.loading&quot;).css(&quot;display&quot;,&nbsp;&quot;none&quot;);//pjax链接加载完成后隐藏加载动画；\r\n});\r\n&lt;/script&gt;</pre><h2>pjax与百度编辑器代码高亮</h2><p>使用pjax后，百度编辑器的代码高亮是没效果的，在回调中使用SyntaxHighlighter.all()是没任何效果的，我们只需在回调函数里调用下SyntaxHighlighter.highlight()即可！</p><p>好了，关于pjax的教程就告一段落了~有不懂的可以私下问我~</p>',1467201896,1536719587),(18,24,1,'企业博客网站最新SEO优化技术,站内优化八大要素','seo优化','如果有人问你百度自然优化的精髓是什么？希望答案不再是“狂发外链”了。如今百度不再是5年前的百度，大量的算法更新对搜索引擎优化者的思维和手法有了更高的要求。','http://7xviiw.com1.z0.glb.clouddn.com/20160629210539253.jpg',0,14,255,930,'<p>如果有人问你百度自然优化的精髓是什么？希望答案不再是“狂发外链”了。如今百度不再是5年前的百度，大量的算法更新对搜索引擎优化者的思维和手法有了更高的要求。然而百度更喜欢系统化用户体验偏向性的优化，站内优化部分也不仅仅是靠关键词和TITLE走天下的时代了。这里总结了8个核心要素和思维走向，希望对SEO新手及要转变思维的SEO人有所帮助。</p><h2>登陆页内容为解决问题而不只是描述问题</h2><p>举个例子，有人搜“结婚穿什么衣服”时，最好的页面内容要有几个方面的引向：【20个让男宾客帅爆的婚礼搭配推荐】以及【精选搭配的购买信息】。因为这个搜索词背后的用户猜到他将要参加一场婚礼，所以终极要解决他的问题是哪里能买到衣服，而不是让他学习怎么搭配衣服。因此，优化这个关键词时，我们的内容应该要解决他的最终需求，这样的引流和转化的效果才会更好。</p><h2>重要事情说三遍“加载速度、速度、速度”</h2><p>信息碎片时代没人愿意给你机会去等待，所以网站打开加载速度比任何优化点更加重要。打开时间越短，用户满意度越高。对于搜索引擎是一样的道理。所以优化一上来先考虑提速有哪些点可以做，如CDN，无用代码移除，服务器宽带升级，缓存，页面瘦身，纯静态页面等优化动作。</p><h2>为信赖感，参与感去提升UI，UX及品牌</h2><p>很多用户打开网站后会产生一个第一印象，好山寨，好土鳖，好不专业不是我们想要的结果。页面设计需要有UI &amp; UX的投入以及品牌自有的口碑来背书，否则用户较难产生对网站的信赖感及参与度。最实际落地的做法就是参考行业里较好的站点进行模仿、购买付费版本的网站模板或让用户参与到每个设计环节里。</p><h2>避免驱使用户离开页面的各类元素</h2><p>很多一些弹窗、固定飘窗、广告位会让用户反感，从而放弃整个浏览进程。这是优化过程中要去避免和移除的部分，考虑更加原生的方式植入这些元素或是奖励用户完成进程。同时，在代码使用上避免蜘蛛被禁抓或是被难抓的可能性从而被搜索引擎降权。</p><h2>关键词植入</h2><p>常规的关键词植入也要继续做，比如Title，H1，文章内关键词，外链锚文字，内链锚文字，图片ALT，URL，图片命名等。这个不做多赘述，大家都明白的。</p><h2>主题模型的灌入</h2><p>光有关键词是不够的，因为那个太机械化会丧失文本用户体验。所以我们要做主题模型，比如关键词【婚礼服装搭配】我们可以扩展到燕尾服、结婚礼服、婚礼马甲、婚礼套装、婚博会等等一些相关词上。形成一个大主题，这样的页面内容会让关键词排名更全面而且对更多用户有帮助。同时，搜索引擎可以解读到你要推的主题内容是婚礼服装相关的内容。</p><h2>展现文字的深度优化</h2><p>排名所展示出来的信息对点击率很重要，所以我们竟可能要去影响这些展示信息（主要是title，desc，url）。这些元素需要在内容上进行优化：title的创意、desc的飘红、url的规范、文章日期、使用结构数据、在线对话等。下面的效果如何？</p><p>20个让男宾客秒杀女士的婚礼搭配:www.az1314.cn</p><p>2016年5月31日 – 提供最新20个男士参加婚礼的搭配建议，再低的预算也能搭配出瞬间秒杀周边的女宾客们，全配图+视频。</p><h2>独有价值内容的创造</h2><p>说到底，营销是逃不出内容质量的。好内容包含：</p><pre class=\"brush:php;toolbar:false\">1）提供唯一性特别强的视觉体验，前端界面，适宜的字体与功能按钮&nbsp;\r\n2）内容必须有用高价值，高可信度，很有趣，值得收藏的点在里面\r\n3）与其他内容相比没有重复性，在深度上更加强劲&nbsp;\r\n4）打开速度快（无广告），并且可以在不同终端阅读&nbsp;\r\n5）能产生情绪化的思绪如赞许，惊讶，快乐，思考等\r\n6）可以达到一定的转发和传播力量&nbsp;\r\n7）能用完整，准确独有的信息解决问题或是回答问题</pre>',1467205814,1536721863),(19,11,1,'5个Laravel Eloquent 小技巧,你学会了么？','laravel','在大型的项目中使用 Laravel Eloquent ORM，某些工作可能会变得重复和繁琐，所以本文为大家总结了 5 个很少人知道的小技巧，在开发过程中帮我节省了很多时间。下面就让我们开始吧。','http://7xviiw.com1.z0.glb.clouddn.com/20160702000617999.jpg',0,7,255,950,'<p><span style=\"color: rgb(46, 46, 46); font-family: &#39;Microsoft YaHei&#39;, 宋体, &#39;Myriad Pro&#39;, Lato, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 24px; text-align: justify; background-color: rgb(255, 255, 255);\">在大型的项目中使用 Laravel Eloquent ORM，某些工作可能会变得重复和繁琐，所以本文为大家总结了 5 个很少人知道的小技巧，在开发过程中帮我节省了很多时间。下面就让我们开始吧。</span></p><h2>快速生成 Model &amp; Migration</h2><p>这并不是一个很多人知道的小技巧，在 Laravel 文档中也没有提到。下面我们以一个博客为简单的例子，为文章生成 Model 和 Migration。 &nbsp;&nbsp;</p><pre class=\"brush:php;toolbar:false\">$&nbsp;php&nbsp;artisan&nbsp;make:migration&nbsp;create_posts_table\r\n$&nbsp;php&nbsp;artisan&nbsp;make:model&nbsp;Post</pre><p>大部分人可能会按上面这样做，其实这两条命令可以合并为下面这一条： &nbsp;</p><pre class=\"brush:php;toolbar:false\">$&nbsp;php&nbsp;artisan&nbsp;make:model&nbsp;Post&nbsp;-m</pre><h2>Eloquent 查询 Scopes</h2><p>还是以前面的博客应用为例，假设我们的文章表有一个&nbsp;is_published&nbsp;字段，其值为 0 或 1 (表示 False 或 True )。在博客列表，我们希望用户只能看到已经发布(published)的文章，使用 Eloquent 我们如何过滤掉未发布的文章呢？答案很明显，需要在查询语句中使用where&nbsp;条件： &nbsp;</p><pre class=\"brush:php;toolbar:false\">Post::where(&#39;is_published&#39;,&nbsp;true)-&gt;get();</pre><p>这当然可以，但如果我们想在其他地方重复使用这个代码段呢？这么重复复制当然也可以实现，但为了符合&nbsp;DRY 原则( Don’t repeat yourself )，我们可以使用 Eloquent 的查询 Scope。在 Post 模型中创建&nbsp;ascopePublished&nbsp;方法：</p><pre class=\"brush:php;toolbar:false\">class&nbsp;Post&nbsp;extends&nbsp;Model\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;scopePublished($query)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$this-&gt;where(&#39;is_published&#39;,&nbsp;true);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p>要获取已发布文章，我们只需简单的调用如下命令：&nbsp;</p><pre class=\"brush:php;toolbar:false\">Post::published()-&gt;get();</pre><p>Eloquent 可以自己把它翻译为&nbsp;scopePublished&nbsp;方法。Eloquent 模型中任何以&nbsp;scope&nbsp;开始是方法都被当做 Eloquent scope。</p><p>值得注意的是，Eloquent scope 的返回值必须是一个查询生成器的实例，所以在 scope 中你不能调用&nbsp;-&gt;get()&nbsp;或&nbsp;-&gt;paginate()&nbsp;。</p><h2>Accessors（访问器）</h2><p>在很多情况下，你可能需要访问 Eloquent 模型在数据中并不存在，需要经过一定计算的属性，但很抱歉。我们来看一个例子。假设现在有一个&nbsp;User&nbsp;表，它包含这样两个字段：forenames&nbsp;和&nbsp;surname&nbsp;。如果你想在视图中显示用户全名的话，你不得不这么做： &nbsp;</p><pre class=\"brush:php;toolbar:false\">{{&nbsp;$user-&gt;forenames&nbsp;.&nbsp;&#39;&nbsp;&#39;&nbsp;.&nbsp;$user-&gt;surname&nbsp;}}</pre><p>首先，我们的应用中可能有很多地方需要使用这段代码，一遍又一遍的输入显然很不实际。其次，呃，语法非常的丑陋且显得格格不入。下面我们来看看如何通过访问器（又称属性）使其变得更加整洁一些。我们在 User 模型中创建一个新的方法： &nbsp;</p><pre class=\"brush:php;toolbar:false\">class&nbsp;User&nbsp;extends&nbsp;Model\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;getNameAttribute()\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$this-&gt;forenames&nbsp;.&nbsp;&#39;&nbsp;&#39;&nbsp;.&nbsp;$this-&gt;surname;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p>同 Eloquent 识别&nbsp;scope&nbsp;一样，任何以&nbsp;get&nbsp;和&nbsp;Attribute&nbsp;包裹起来的方法都会当做 Eloquent&nbsp;accesor（访问器）。现在我们可以试着执行下面的代码段，它得到的结果和前面是相同的： &nbsp;</p><pre class=\"brush:php;toolbar:false\">{{&nbsp;$user-&gt;name&nbsp;}}</pre><p>这不仅可以重复使用，而且更容易输入，并且更具有可读性。</p><h2>动态方法名称</h2><p>……缺乏一个很好的术语。Eloquent 对于一些方法特别的聪明，如&nbsp;where()&nbsp;。看看下面的例子： &nbsp;</p><pre class=\"brush:php;toolbar:false\">//&nbsp;Post::where(&#39;published&#39;,&nbsp;1)-&gt;get();\r\nPost::wherePublished(1)-&gt;get();\r\n&nbsp;\r\n//&nbsp;Post::where(&#39;category&#39;,&nbsp;null)-&gt;get();\r\nPost::whereNull(&#39;category&#39;)-&gt;get();\r\n&nbsp;\r\n//&nbsp;Post::where(&#39;category&#39;,&nbsp;&#39;!=&#39;,&nbsp;null)-&gt;get();\r\nPost::whereNotNull(&#39;category&#39;)-&gt;get();</pre><p>是不是更加的整洁？</p><h2>扩展访问器</h2><p>我们来扩展一下。有时候，特别是使用 API 时，当我们使用 Eloquent 从数据库获取记录时，需要对返回的结果集中添加一些访问器（或者说属性）。如果没看明白的话，看看下面这个例子。当调用&nbsp;User::find(1)&nbsp;的时候，返回的结果看起来可能是下面这样的： &nbsp;</p><pre class=\"brush:php;toolbar:false\">{\r\n&nbsp;&nbsp;&nbsp;&nbsp;id:&nbsp;1,\r\n&nbsp;&nbsp;&nbsp;&nbsp;forenames:&nbsp;&quot;Terry&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;surname:&nbsp;&quot;Harvey&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;email:&nbsp;&quot;contact@terryharvey.co.uk&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;created_at:&nbsp;&quot;2016-05-02&nbsp;21:27:58&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;updated_at:&nbsp;&quot;2016-05-03&nbsp;18:09:37&quot;,\r\n}</pre><p>这并没有什么问题，但如果我们想在其中显示前面创建的&nbsp;name&nbsp;属性呢？让我们回到模型中添加&nbsp;$appends&nbsp;属性：&nbsp;</p><pre class=\"brush:php;toolbar:false\">class&nbsp;User&nbsp;extends&nbsp;Model\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;protected&nbsp;$appends&nbsp;=&nbsp;[&#39;name&#39;];\r\n}</pre><p>如果再次执行前面的代码，name&nbsp;属性被直接添加到了结果中。 &nbsp;&nbsp;</p><pre class=\"brush:php;toolbar:false\">{\r\n&nbsp;&nbsp;&nbsp;&nbsp;id:&nbsp;1,\r\n&nbsp;&nbsp;&nbsp;&nbsp;forenames:&nbsp;&quot;Terry&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;surname:&nbsp;&quot;Harvey&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;&quot;Terry&nbsp;Harvey&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;email:&nbsp;&quot;contact@terryharvey.co.uk&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;created_at:&nbsp;&quot;2016-05-02&nbsp;21:27:58&quot;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;updated_at:&nbsp;&quot;2016-05-03&nbsp;18:09:37&quot;,\r\n}</pre>',1467389479,1536714686),(20,12,1,'php编程中要留意的那些坑~','php','php编程中要留意的那些坑~','http://7xviiw.com1.z0.glb.clouddn.com/20160702001956945.jpg',0,7,255,1008,'<h2>另类的写法有惊喜</h2><p>我们在阅读某些源代码的时候会发现有一种另类的写法，比如&nbsp;</p><pre class=\"brush:php;toolbar:false\">//异常写法\r\nif(false&nbsp;==&nbsp;$result)\r\n&nbsp;\r\n//正常写法\r\nif($result&nbsp;==&nbsp;false)</pre><p>其实这是一种很聪明的写法，它可以很大程度上杜绝手误造成的严重bug。 假如我们在正常方法中把&nbsp;==&nbsp;误写成&nbsp;=&nbsp;，那么if($result = false)&nbsp;就会恒定返回true，导致在实际运行中产生未知的Bug，如果使用异常的写法出现手误变成时if(false = $false)&nbsp;,编辑器会抛出一个error，我们就可以及时发现并修复问题。</p><h2>&#39;&lt;?php&#39;开始前不要有空行，php脚本结尾的&#39;?&gt;&#39;尽量省略</h2><p>假如有一个文件在&nbsp;?&gt;&nbsp;后有一个空白行，那么你在使用&nbsp;session_start()&nbsp;等方法时，会返回一个警告headers already sent by xxx&nbsp;，这是因为&nbsp;session_start()&nbsp;要求使用前不能有任何输出。 同理&nbsp;&lt;?php&nbsp;前的空行也会存在同样的问题。</p><h2>字符串和数字在一起时，要留神<span style=\"font-size: 16px;\">&nbsp;&nbsp;</span></h2><pre class=\"brush:php;toolbar:false\">var_dump(&#39;a&#39;.0);&nbsp;//返回error，语法错误</pre><p>解决的方案比较简单，只要在.连接左右加上空格就可以防止语法错误。 &nbsp;</p><pre class=\"brush:php;toolbar:false\">var_dump&nbsp;(&#39;abc&#39;&nbsp;==&nbsp;0);&nbsp;//输出true\r\nvar_dump&nbsp;(&#39;1abc&#39;&nbsp;==&nbsp;0);&nbsp;//输出false</pre><p>这个例子中输出true是不是让你大吃一惊，其实php中将字符串和数字做比较时，会把字符串强制转换为int性，转换规则为:如果字符串是数字开头，那么取开头数字作为转换结果，如果开头不是数字那么就为0</p><h2>字符串的运算，你惹不起<span style=\"font-size: 16px;\">&nbsp;&nbsp;</span></h2><pre class=\"brush:php;toolbar:false\">for&nbsp;($i&nbsp;=&nbsp;&#39;a&#39;;&nbsp;$i&nbsp;&lt;=&nbsp;&#39;z&#39;;&nbsp;++$i)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;$i&nbsp;&quot;;\r\n}</pre><p>你以为会输出从a到z？那你就错了，亮瞎你的输出结果如下：</p><pre class=\"brush:php;toolbar:false\">a&nbsp;b&nbsp;c&nbsp;d&nbsp;e&nbsp;f&nbsp;g&nbsp;h&nbsp;i&nbsp;j&nbsp;k&nbsp;l&nbsp;m&nbsp;n&nbsp;o&nbsp;p&nbsp;q&nbsp;r&nbsp;s&nbsp;t&nbsp;u&nbsp;v&nbsp;w&nbsp;x&nbsp;y&nbsp;z&nbsp;aa&nbsp;ab&nbsp;ac&nbsp;ad&nbsp;ae&nbsp;af\r\ng&nbsp;ah&nbsp;ai&nbsp;aj&nbsp;ak&nbsp;al&nbsp;am&nbsp;an&nbsp;ao&nbsp;ap&nbsp;aq&nbsp;ar&nbsp;as&nbsp;at&nbsp;au&nbsp;av&nbsp;aw&nbsp;ax&nbsp;ay&nbsp;az&nbsp;ba&nbsp;bb&nbsp;bc&nbsp;bd&nbsp;be&nbsp;bf\r\nbg&nbsp;bh&nbsp;bi&nbsp;bj&nbsp;bk&nbsp;bl&nbsp;bm&nbsp;bn&nbsp;bo&nbsp;bp&nbsp;bq&nbsp;br&nbsp;bs&nbsp;bt&nbsp;bu&nbsp;bv&nbsp;bw&nbsp;bx&nbsp;by&nbsp;bz&nbsp;ca&nbsp;cb&nbsp;cc&nbsp;cd&nbsp;ce&nbsp;cf\r\ncg&nbsp;ch&nbsp;ci&nbsp;cj&nbsp;ck&nbsp;cl&nbsp;cm&nbsp;cn&nbsp;co&nbsp;cp&nbsp;cq&nbsp;cr&nbsp;cs&nbsp;ct&nbsp;cu&nbsp;cv&nbsp;cw&nbsp;cx&nbsp;cy&nbsp;cz&nbsp;da&nbsp;db&nbsp;dc&nbsp;dd&nbsp;de&nbsp;df\r\ndg&nbsp;dh&nbsp;di&nbsp;dj&nbsp;dk&nbsp;dl&nbsp;dm&nbsp;dn&nbsp;do&nbsp;dp&nbsp;dq&nbsp;dr&nbsp;ds&nbsp;dt&nbsp;du&nbsp;dv&nbsp;dw&nbsp;dx&nbsp;dy&nbsp;dz&nbsp;ea&nbsp;eb&nbsp;ec&nbsp;ed&nbsp;ee&nbsp;ef\r\neg&nbsp;eh&nbsp;ei&nbsp;ej&nbsp;ek&nbsp;el&nbsp;em&nbsp;en&nbsp;eo&nbsp;ep&nbsp;eq&nbsp;er&nbsp;es&nbsp;et&nbsp;eu&nbsp;ev&nbsp;ew&nbsp;ex&nbsp;ey&nbsp;ez&nbsp;fa&nbsp;fb&nbsp;fc&nbsp;fd&nbsp;fe&nbsp;ff\r\nfg&nbsp;fh&nbsp;fi&nbsp;fj&nbsp;fk&nbsp;fl&nbsp;fm&nbsp;fn&nbsp;fo&nbsp;fp&nbsp;fq&nbsp;fr&nbsp;fs&nbsp;ft&nbsp;fu&nbsp;fv&nbsp;fw&nbsp;fx&nbsp;fy&nbsp;fz&nbsp;ga&nbsp;gb&nbsp;gc&nbsp;gd&nbsp;ge&nbsp;gf\r\ngg&nbsp;gh&nbsp;gi&nbsp;gj&nbsp;gk&nbsp;gl&nbsp;gm&nbsp;gn&nbsp;go&nbsp;gp&nbsp;gq&nbsp;gr&nbsp;gs&nbsp;gt&nbsp;gu&nbsp;gv&nbsp;gw&nbsp;gx&nbsp;gy&nbsp;gz&nbsp;ha&nbsp;hb&nbsp;hc&nbsp;hd&nbsp;he&nbsp;hf\r\nhg&nbsp;hh&nbsp;hi&nbsp;hj&nbsp;hk&nbsp;hl&nbsp;hm&nbsp;hn&nbsp;ho&nbsp;hp&nbsp;hq&nbsp;hr&nbsp;hs&nbsp;ht&nbsp;hu&nbsp;hv&nbsp;hw&nbsp;hx&nbsp;hy&nbsp;hz&nbsp;ia&nbsp;ib&nbsp;ic&nbsp;id&nbsp;ie&nbsp;if\r\nig&nbsp;ih&nbsp;ii&nbsp;ij&nbsp;ik&nbsp;il&nbsp;im&nbsp;in&nbsp;io&nbsp;ip&nbsp;iq&nbsp;ir&nbsp;is&nbsp;it&nbsp;iu&nbsp;iv&nbsp;iw&nbsp;ix&nbsp;iy&nbsp;iz&nbsp;ja&nbsp;jb&nbsp;jc&nbsp;jd&nbsp;je&nbsp;jf\r\njg&nbsp;jh&nbsp;ji&nbsp;jj&nbsp;jk&nbsp;jl&nbsp;jm&nbsp;jn&nbsp;jo&nbsp;jp&nbsp;jq&nbsp;jr&nbsp;js&nbsp;jt&nbsp;ju&nbsp;jv&nbsp;jw&nbsp;jx&nbsp;jy&nbsp;jz&nbsp;ka&nbsp;kb&nbsp;kc&nbsp;kd&nbsp;ke&nbsp;kf\r\nkg&nbsp;kh&nbsp;ki&nbsp;kj&nbsp;kk&nbsp;kl&nbsp;km&nbsp;kn&nbsp;ko&nbsp;kp&nbsp;kq&nbsp;kr&nbsp;ks&nbsp;kt&nbsp;ku&nbsp;kv&nbsp;kw&nbsp;kx&nbsp;ky&nbsp;kz&nbsp;la&nbsp;lb&nbsp;lc&nbsp;ld&nbsp;le&nbsp;lf\r\nlg&nbsp;lh&nbsp;li&nbsp;lj&nbsp;lk&nbsp;ll&nbsp;lm&nbsp;ln&nbsp;lo&nbsp;lp&nbsp;lq&nbsp;lr&nbsp;ls&nbsp;lt&nbsp;lu&nbsp;lv&nbsp;lw&nbsp;lx&nbsp;ly&nbsp;lz&nbsp;ma&nbsp;mb&nbsp;mc&nbsp;md&nbsp;me&nbsp;mf\r\nmg&nbsp;mh&nbsp;mi&nbsp;mj&nbsp;mk&nbsp;ml&nbsp;mm&nbsp;mn&nbsp;mo&nbsp;mp&nbsp;mq&nbsp;mr&nbsp;ms&nbsp;mt&nbsp;mu&nbsp;mv&nbsp;mw&nbsp;mx&nbsp;my&nbsp;mz&nbsp;na&nbsp;nb&nbsp;nc&nbsp;nd&nbsp;ne&nbsp;nf\r\nng&nbsp;nh&nbsp;ni&nbsp;nj&nbsp;nk&nbsp;nl&nbsp;nm&nbsp;nn&nbsp;no&nbsp;np&nbsp;nq&nbsp;nr&nbsp;ns&nbsp;nt&nbsp;nu&nbsp;nv&nbsp;nw&nbsp;nx&nbsp;ny&nbsp;nz&nbsp;oa&nbsp;ob&nbsp;oc&nbsp;od&nbsp;oe&nbsp;of\r\nog&nbsp;oh&nbsp;oi&nbsp;oj&nbsp;ok&nbsp;ol&nbsp;om&nbsp;on&nbsp;oo&nbsp;op&nbsp;oq&nbsp;or&nbsp;os&nbsp;ot&nbsp;ou&nbsp;ov&nbsp;ow&nbsp;ox&nbsp;oy&nbsp;oz&nbsp;pa&nbsp;pb&nbsp;pc&nbsp;pd&nbsp;pe&nbsp;pf\r\nqg&nbsp;qh&nbsp;qi&nbsp;qj&nbsp;qk&nbsp;ql&nbsp;qm&nbsp;qn&nbsp;qo&nbsp;qp&nbsp;qq&nbsp;qr&nbsp;qs&nbsp;qt&nbsp;qu&nbsp;qv&nbsp;qw&nbsp;qx&nbsp;qy&nbsp;qz&nbsp;ra&nbsp;rb&nbsp;rc&nbsp;rd&nbsp;re&nbsp;rf\r\nrg&nbsp;rh&nbsp;ri&nbsp;rj&nbsp;rk&nbsp;rl&nbsp;rm&nbsp;rn&nbsp;ro&nbsp;rp&nbsp;rq&nbsp;rr&nbsp;rs&nbsp;rt&nbsp;ru&nbsp;rv&nbsp;rw&nbsp;rx&nbsp;ry&nbsp;rz&nbsp;sa&nbsp;sb&nbsp;sc&nbsp;sd&nbsp;se&nbsp;sf\r\nsg&nbsp;sh&nbsp;si&nbsp;sj&nbsp;sk&nbsp;sl&nbsp;sm&nbsp;sn&nbsp;so&nbsp;sp&nbsp;sq&nbsp;sr&nbsp;ss&nbsp;st&nbsp;su&nbsp;sv&nbsp;sw&nbsp;sx&nbsp;sy&nbsp;sz&nbsp;ta&nbsp;tb&nbsp;tc&nbsp;td&nbsp;te&nbsp;tf\r\ntg&nbsp;th&nbsp;ti&nbsp;tj&nbsp;tk&nbsp;tl&nbsp;tm&nbsp;tn&nbsp;to&nbsp;tp&nbsp;tq&nbsp;tr&nbsp;ts&nbsp;tt&nbsp;tu&nbsp;tv&nbsp;tw&nbsp;tx&nbsp;ty&nbsp;tz&nbsp;ua&nbsp;ub&nbsp;uc&nbsp;ud&nbsp;ue&nbsp;uf\r\nug&nbsp;uh&nbsp;ui&nbsp;uj&nbsp;uk&nbsp;ul&nbsp;um&nbsp;un&nbsp;uo&nbsp;up&nbsp;uq&nbsp;ur&nbsp;us&nbsp;ut&nbsp;uu&nbsp;uv&nbsp;uw&nbsp;ux&nbsp;uy&nbsp;uz&nbsp;va&nbsp;vb&nbsp;vc&nbsp;vd&nbsp;ve&nbsp;vf\r\nvg&nbsp;vh&nbsp;vi&nbsp;vj&nbsp;vk&nbsp;vl&nbsp;vm&nbsp;vn&nbsp;vo&nbsp;vp&nbsp;vq&nbsp;vr&nbsp;vs&nbsp;vt&nbsp;vu&nbsp;vv&nbsp;vw&nbsp;vx&nbsp;vy&nbsp;vz&nbsp;wa&nbsp;wb&nbsp;wc&nbsp;wd&nbsp;we&nbsp;wf\r\nwg&nbsp;wh&nbsp;wi&nbsp;wj&nbsp;wk&nbsp;wl&nbsp;wm&nbsp;wn&nbsp;wo&nbsp;wp&nbsp;wq&nbsp;wr&nbsp;ws&nbsp;wt&nbsp;wu&nbsp;wv&nbsp;ww&nbsp;wx&nbsp;wy&nbsp;wz&nbsp;xa&nbsp;xb&nbsp;xc&nbsp;xd&nbsp;xe&nbsp;xf\r\nxg&nbsp;xh&nbsp;xi&nbsp;xj&nbsp;xk&nbsp;xl&nbsp;xm&nbsp;xn&nbsp;xo&nbsp;xp&nbsp;xq&nbsp;xr&nbsp;xs&nbsp;xt&nbsp;xu&nbsp;xv&nbsp;xw&nbsp;xx&nbsp;xy&nbsp;xz&nbsp;ya&nbsp;yb&nbsp;yc&nbsp;yd&nbsp;ye&nbsp;yf\r\nyg&nbsp;yh&nbsp;yi&nbsp;yj&nbsp;yk&nbsp;yl&nbsp;ym&nbsp;yn&nbsp;yo&nbsp;yp&nbsp;yq&nbsp;yr&nbsp;ys&nbsp;yt&nbsp;yu&nbsp;yv&nbsp;yw&nbsp;yx&nbsp;yy&nbsp;yz</pre><h2>时刻小心精度丢失的情况<span style=\"font-size: 16px;\">&nbsp;&nbsp;</span></h2><pre class=\"brush:php;toolbar:false\">$f&nbsp;=&nbsp;0.58;\r\necho&nbsp;intval($f&nbsp;*&nbsp;100);&nbsp;//&nbsp;输出57\r\nsprintf(&quot;%.2f&quot;,$f&nbsp;*&nbsp;100);&nbsp;//输出58.00</pre><p>精度丢失的问题在其他语言中有会有，但是在PHP这种弱类型的语言中更加需要注意。</p><p>其实上述说到的问题在PHP手册中都已经提及到了，手册翻百遍打码如有神，一定的细心加一定的经验，你就能够在开发的路上一路填坑一路前行。</p>',1467390209,1536651971),(21,12,1,'php如何产生不重复随机数？','php','在php项目中，不同的项目中，随机数都有其用武之地。在最近做的几个模块中，也经常需要产出不重复随机数，所以，对于PHP如何产生不重复随机数常用的5种方法进行小结一下。','http://7xviiw.com1.z0.glb.clouddn.com/20160707105018329.jpg',0,16,255,963,'<p>在php项目中，不同的项目中，随机数都有其用武之地。在最近做的几个模块中，也经常需要产出不重复随机数，所以，对于PHP如何产生不重复随机数常用的5种方法进行小结一下。</p><h2>方法一</h2><pre class=\"brush:php;toolbar:false\">$numbers&nbsp;=&nbsp;range&nbsp;(1,50);&nbsp;//shuffle&nbsp;将数组顺序随即打乱&nbsp;\r\nshuffle&nbsp;($numbers);&nbsp;//array_slice&nbsp;取该数组中的某一段&nbsp;\r\n$num=6;&nbsp;\r\n$result&nbsp;=&nbsp;array_slice($numbers,0,$num);&nbsp;//截取数组\r\nvar_dump($result);</pre><h2>方法二</h2><pre class=\"brush:php;toolbar:false\">$numbers&nbsp;=&nbsp;range&nbsp;(1,20);&nbsp;\r\nsrand&nbsp;((float)microtime()*1000000);&nbsp;//本函数传入参数后，配置随机数的种子。本例加入时间的因素，以执行时的百万分之一秒当随机数种子\r\nshuffle&nbsp;($numbers);&nbsp;\r\nwhile&nbsp;(list($key,&nbsp;$number)&nbsp;=&nbsp;each&nbsp;($numbers))&nbsp;{&nbsp;\r\necho&nbsp;&quot;$number&nbsp;&quot;;&nbsp;}</pre><h2>方法三</h2><pre class=\"brush:php;toolbar:false\">/*$bengin-$end间随机产生5个不重复的值*/\r\nfunction&nbsp;getRand($begin=0,$end=20,$limit=5){&nbsp;\r\n$rand_array=range($begin,$end);&nbsp;\r\nshuffle($rand_array);\r\nreturn&nbsp;array_slice($rand_array,0,$limit);\r\n}&nbsp;\r\nprint_r(getRand());</pre><h2>方法四</h2><pre class=\"brush:php;toolbar:false\">$tmp=array();&nbsp;\r\nwhile(count($tmp)&lt;5){&nbsp;\r\n$tmp[]=mt_rand(1,20);&nbsp;\r\n$tmp=array_unique($tmp);&nbsp;//去重\r\n}&nbsp;\r\nvar_dump($tmp);</pre><h2>方法五</h2><pre class=\"brush:php;toolbar:false\">$tmp&nbsp;=&nbsp;range(1,30);\r\nprint_r(array_rand($tmp,10));</pre><h2>总结</h2><p>灵活掌握range，shuffle和php的数组操作函数。</p>',1467859958,1536616155),(8,22,1,'Git版本管理工具简单介绍及安装设置步骤','版本管理,git','Git是什么？\r\n\r\nGit是目前世界上最先进的分布式版本控制系统（没有之一）。\r\n\r\nGit有什么特点？简单来说就是：高端大气上档次！','http://7xviiw.com1.z0.glb.clouddn.com/20160624222058190.png',1,16,3,1860,'<h2>git是用来做什么的？</h2><p>1、备份文件是项目实践的基本任务<br/> 2、记录历史<br/> 3、回到过去 例如恢复删除的文件<br/> 4、多端共享 云备份<br/> 5、团队协作</p><h2>版本工具发展历史</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<img src=\"/ueditor/php/upload/image/20160619/1466343457220421.png\" title=\"1466343457220421.png\" alt=\"git发展历史\"/></p><h2>如何安装</h2><p>1、Winsows下：在Windows上安装git，一般为msysgit，官方下载地址为</p><p><a href=\"http://code.google.com/p/msysgit/downloads/list\">http://code.google.com/p/msysgit/downloads/list</a>，安装步骤基本一路下一步。</p><p>2、Linux下：centos6.*版本</p><p>在CentOS5的时代，由于yum源中没有git，所以需要预先安装一系列的依赖包。但在CentOS6的yum源中已经有git的版本了，可以直接使用yum源进行安装。</p><pre class=\"brush:php;toolbar:false\">$&nbsp;sudo&nbsp;yum&nbsp;install&nbsp;git</pre><p>但是yum源中安装的git版本是1.7.1，太老了，Github等需要的Git版本最低都不能低于1.7.2 。所以我们一般不用上面的方法。而是下载git源码，编译安装。</p><p>（1）首先先更新系统</p><pre class=\"brush:php;toolbar:false\">sudo&nbsp;yum&nbsp;update</pre><p>（2）安装依赖的包</p><pre class=\"brush:php;toolbar:false\">sudo&nbsp;yum&nbsp;install&nbsp;curl-devel&nbsp;expat-devel&nbsp;gettext-devel&nbsp;openssl-devel&nbsp;zlib-devel&nbsp;gcc&nbsp;perl-ExtUtils-MakeMaker</pre><p>（3）下载git源码并解压缩</p><pre class=\"brush:php;toolbar:false\">$&nbsp;wget&nbsp;https://github.com/git/git/archive/v2.3.0.zip\r\n$&nbsp;unzip&nbsp;v2.3.0.zip\r\n$&nbsp;cd&nbsp;git-2.3.0</pre><p>（4）编译安装</p><p>将其安装在“/usr/local/git”目录下。</p><pre class=\"brush:php;toolbar:false\">make&nbsp;prefix=/usr/local/git&nbsp;all\r\nsudo&nbsp;make&nbsp;prefix=/usr/local/git&nbsp;install</pre><p>（5）此时你如果使用git --version 查看git版本的话，发现git仍然是1.7.1版本。这是因为它默认使用了&quot;/usr/bin&quot;下的git。</p><p>你可以用下面的命令查看git所在的路径：</p><pre class=\"brush:php;toolbar:false;\">$&nbsp;whereis&nbsp;git</pre><pre class=\"brush:php;toolbar:false\">git:&nbsp;/usr/bin/git&nbsp;/usr/local/git&nbsp;/usr/share/man/man1/git.1.gz</pre><p>（6）我们要把编译安装的git路径放到环境变量里，让它替换&quot;/usr/bin&quot;下的git。为此我们可以修改“/etc/profile”文件（或者/etc/bashrc文件）。</p><pre class=\"brush:php;toolbar:false\">sudo&nbsp;vim&nbsp;/etc/profile</pre><p>然后在文件的最后一行，添加下面的内容，然后保存退出。</p><pre class=\"brush:php;toolbar:false\">export&nbsp;PATH=/usr/local/git/bin:$PATH</pre><p>（7）使用source命令应用修改。</p><pre class=\"brush:php;toolbar:false\">source&nbsp;/etc/profile</pre><p>（8）然后再次使用git --version 查看git版本，发现输出2.3.0，表明安装成功。</p><h2>基本设置-设置用户名和email</h2><pre class=\"brush:php;toolbar:false;\">git&nbsp;config&nbsp;--global&nbsp;user.name&nbsp;&quot;Your&nbsp;Name&quot;</pre><pre class=\"brush:php;toolbar:false;\">git&nbsp;config&nbsp;--global&nbsp;user.email&nbsp;&quot;youremail@domain.com&quot;</pre><h2>公钥秘钥生成过程</h2><p>(1)查看是否已经有了ssh密钥</p><pre class=\"brush:php;toolbar:false\">cd&nbsp;~/.ssh</pre><p>如果没有密钥则不会有此文件夹，有则备份删除</p><p>(2)生存密钥：</p><pre class=\"brush:php;toolbar:false\">$&nbsp;ssh-keygen&nbsp;-t&nbsp;rsa&nbsp;-C&nbsp;&quot;youremail@domain.com&quot;</pre><p>按3个回车，密码为空。</p><pre class=\"brush:php;toolbar:false\">Your&nbsp;identification&nbsp;has&nbsp;been&nbsp;saved&nbsp;in&nbsp;/home/tekkub/.ssh/id_rsa.\r\nYour&nbsp;public&nbsp;key&nbsp;has&nbsp;been&nbsp;saved&nbsp;in&nbsp;/home/tekkub/.ssh/id_rsa.pub.\r\nThe&nbsp;key&nbsp;fingerprint&nbsp;is:\r\n………………</pre><p>最后得到了两个文件：id_rsa和id_rsa.pub</p><p>(3)添加密钥到ssh：ssh-add 文件名</p><p>需要之前输入密码。</p><p>(4)在github上添加ssh密钥，这要添加的是“id_rsa.pub”里面的公钥。</p><p>打开https://github.com/ ，登陆，然后添加ssh。</p><p><br/></p><p><br/></p>',1466343984,1536693274),(9,10,1,'php如何的进行代码注释？怎么样才优雅？','php基础,代码规范','代码注释在多人开发的时候非常重要，想象一下，一段代码没有任何主要你去结合运行的效果去看实现的逻辑，那是非常费劲的事。如果让别人看懂你写的代码，代码注释启动非常重要的作用。一个不会写代码注释的不是一个好的程序员。那么如何进行注释呢？','http://7xviiw.com1.z0.glb.clouddn.com/20160620192309231.php',0,13,2,915,'<p>代码注释在多人开发的时候非常重要，想象一下，一段代码没有任何主要你去结合运行的效果去看实现的逻辑，那是非常费劲的事。如果让别人看懂你写的代码，代码注释启动非常重要的作用。一个不会写代码注释的不是一个好的程序员。那么如何进行注释呢？</p><h2>文件头部注释</h2><ol class=\"linenums list-paddingleft-2\" style=\"list-style-type: none;\"><li><pre class=\"brush:php;toolbar:false\">/**\r\n*这是一个什么文件\r\n*\r\n*此文件程序用来做什么的（详细说明，可选。）。\r\n*&nbsp;@author&nbsp;小文\r\n*&nbsp;@version&nbsp;1.0\r\n*&nbsp;@date&nbsp;2xxx:xx:xx\r\n*/</pre></li></ol><h2>函数头部注释</h2><ol class=\"linenums list-paddingleft-2\" style=\"list-style-type: none;\"><li><pre class=\"brush:php;toolbar:false\">/**\r\n*&nbsp;函数的含义说明\r\n*&nbsp;@author&nbsp;小文\r\n*&nbsp;@param&nbsp;int&nbsp;$arg1&nbsp;参数一的说明\r\n*&nbsp;@param&nbsp;string&nbsp;$arg2&nbsp;参数二的说明\r\n*&nbsp;@param&nbsp;mixed&nbsp;$mixed&nbsp;这是一个混合类型\r\n*&nbsp;@return&nbsp;array\r\n*/\r\npublic&nbsp;function&nbsp;test($arg1,&nbsp;arg2,&nbsp;$mixed)&nbsp;{return&nbsp;array();}</pre></li></ol><h2>类的注释</h2><ol class=\"linenums list-paddingleft-2\" style=\"list-style-type: none;\"><li><pre class=\"brush:php;toolbar:false\">/**\r\n*&nbsp;类的介绍\r\n*\r\n*&nbsp;类的详细介绍（可选。）。\r\n*&nbsp;@author&nbsp;小文\r\n*/\r\nclass&nbsp;Test\r\n{\r\n}</pre></li></ol><h2>单独行注释<br/></h2><ol class=\"linenums list-paddingleft-2\" style=\"list-style-type: none;\"><li><pre class=\"brush:php;toolbar:false\">$this-&gt;test();&nbsp;//&nbsp;测试方法调用</pre></li></ol><h2>代码片段注释</h2><ol class=\"linenums list-paddingleft-2\" style=\"list-style-type: none;\"><li><pre class=\"brush:php;toolbar:false\">/*下面载入配置*/\r\n$this-&gt;setConfig();\r\n$this-&gt;createConfigFile()</pre></li></ol><p>当然，大家也可以根据个人习惯来注释~</p><p><br/></p>',1466422465,1536666876),(10,18,1,'MySQL如何按指定字段排序？自定义排序？','mysql排序','MySQL如何按自定义的规则进行排序呢，比如我们想要按 id 以 5, 3, 7, 1 的顺序排列, 该如何实现？ ','http://7xviiw.com1.z0.glb.clouddn.com/20160621135237298.php',0,13,3,817,'<h2 style=\"white-space: normal;\">问题描述</h2><p>大家都知道, MySQL 中按某字段升序排列的 SQL 为 (以 id 为例, 下同):</p><pre class=\"brush:php;toolbar:false\">SELECT&nbsp;*&nbsp;FROM&nbsp;`MyTable`&nbsp;WHERE&nbsp;`id`&nbsp;IN&nbsp;(1,&nbsp;7,&nbsp;3,&nbsp;5)&nbsp;ORDER&nbsp;BY&nbsp;`id`&nbsp;ASC;</pre><p>降序排列的 SQL 为:</p><pre class=\"brush:php;toolbar:false\">SELECT&nbsp;*&nbsp;FROM&nbsp;`MyTable`&nbsp;WHERE&nbsp;`id`&nbsp;IN&nbsp;(1,&nbsp;7,&nbsp;3,&nbsp;5)&nbsp;ORDER&nbsp;BY&nbsp;`id`&nbsp;DESC;</pre><p>有时以上排序并不能满足我们的需求. 例如, 我们想要按 id 以 5, 3, 7, 1 的顺序排列, 该如何实现. 这也是很多国内外同行经常遇到的问题之一.</p><p>下面我们给出按表中某字段, 以我们想要的列表方式排序的解决方案.</p><h2>解决方案</h2><p>用&quot;按字段排序&quot; (ORDER BY FIELD).</p><p>语法</p><pre class=\"brush:php;toolbar:false\">ORDER&nbsp;BY&nbsp;FIELD(`id`,&nbsp;5,&nbsp;3,&nbsp;7,&nbsp;1)</pre><p>要注意的是,&nbsp;FIELD 后面是没有空格的.</p><p>因此, 完整的 SQL 为:</p><pre class=\"brush:php;toolbar:false\">SELECT&nbsp;*&nbsp;FROM&nbsp;`MyTable`&nbsp;WHERE&nbsp;`id`&nbsp;IN&nbsp;(1,&nbsp;7,&nbsp;3,&nbsp;5)&nbsp;ORDER&nbsp;BY&nbsp;FIELD(`id`,&nbsp;5,&nbsp;3,&nbsp;7,&nbsp;1);</pre><h2>常见应用<br/></h2><pre class=\"brush:php;toolbar:false\">SELECT&nbsp;*&nbsp;FROM&nbsp;`MyTable`&nbsp;WHERE&nbsp;`name`&nbsp;IN&nbsp;(&#39;张三&#39;,&nbsp;&#39;李四&#39;,&nbsp;&#39;王五&#39;,&nbsp;&#39;孙六&#39;)&nbsp;ORDER&nbsp;BY&nbsp;FIELD(`name`,&nbsp;&#39;李四&#39;,&nbsp;&#39;孙六&#39;,&nbsp;&#39;张三&#39;,&nbsp;&#39;王五&#39;);</pre><p><br/></p>',1466488662,1536629837),(11,18,1,'MySQL常用命令操作，常用数据库操作记录','mysql,mysql命令,mysql操作','MySQL常用命令操作，常用数据库操作记录，以便日后忘记命令又找不到。','http://7xviiw.com1.z0.glb.clouddn.com/20160621141845848.php',0,11,1,1039,'<h2>数据库级操作</h2><p>1、登陆mysql</p><p>常用的格式是</p><pre class=\"brush:php;toolbar:false\">&nbsp;mysql&nbsp;-u&nbsp;user_name&nbsp;-p</pre><p>按下回车后输入密码再次回车即可进入。<br/></p><p>2、查看当前已经存在的所有数据库</p><pre class=\"brush:php;toolbar:false\">show&nbsp;databases;</pre><p>(注意，分号不可省略。少数命令可以忽略分号，但大部分的mysql命令都必须以分号结尾)<br/></p><p>3、选择数据库</p><p>知道所有数据库名称后，需要选择某个具体的数据库进行操作，其命令为：</p><pre class=\"brush:php;toolbar:false\">use&nbsp;database_name;</pre><p>(注意，这个命令是少数可以忽略分号的命令之一)</p><p>4、创建数据库</p><pre class=\"brush:php;toolbar:false\">create&nbsp;database&nbsp;database_name;</pre><p>（这里可能需要root权限）</p><p>5、删除数据库</p><pre class=\"brush:php;toolbar:false\">drop&nbsp;database&nbsp;database_name;</pre><h2>表级操作</h2><p>1、查看当前数据库的所有表名</p><pre class=\"brush:php;toolbar:false\">show&nbsp;tables;</pre><p>2、查看某个表中的所有列名（属性信息）</p><pre class=\"brush:php;toolbar:false\">describe&nbsp;table_name;</pre><p>（也可以简写为：desc table_name;）<br/></p><pre class=\"brush:php;toolbar:false\">show&nbsp;columns&nbsp;from&nbsp;table_name;\r\nshow&nbsp;create&nbsp;table&nbsp;table_name;</pre><p>3、查看表中的某一列</p><pre class=\"brush:php;toolbar:false\">select&nbsp;column_1&nbsp;from&nbsp;table_name;</pre><p>若想查看某几列则需要用逗号隔开列名，如：select column_1, column_2 from table_name;</p><p>也可以使用通配符* 查看所有列，如：</p><pre class=\"brush:php;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;table_name;</pre><p>4、创建表</p><pre class=\"brush:php;toolbar:false\">create&nbsp;table&nbsp;table_name&nbsp;(column_name1&nbsp;type&nbsp;constraint,&nbsp;column_name2&nbsp;type&nbsp;constraint,&nbsp;...,&nbsp;column_nameX&nbsp;type&nbsp;constraint,&nbsp;primary&nbsp;key&nbsp;(column_name));</pre><p>这里的constraint包括not null（非空）、unique（不能重复）等，是选填的，即可以没有；</p><p>type包括char(n) varchar(n) int numeric float real double precision；（注意，mysql的字符串要用单引号括起来）</p><p>最后面的主键约束是必须要有的，primary key()括号里面的属性可以是一个，也可以是逗号隔开的几个。</p><p>5、删除表</p><pre class=\"brush:php;toolbar:false\">drop&nbsp;table&nbsp;table_name;</pre><p>（这将彻底删除此表，即show tables;命令不会再显示它）<br/></p><p>（注意与之相近的一个命令：delete from table_name; 这个命令只是清空该表，但是表模式仍然存在，即show tables;命令仍然显示它）</p><p>6、向表中添加/删除列名（属性名）</p><pre class=\"brush:php;toolbar:false\">alter&nbsp;table&nbsp;table_name&nbsp;add&nbsp;column_name&nbsp;type;\r\nalter&nbsp;table&nbsp;table_name&nbsp;drop&nbsp;column_name;</pre><p>7、修改表中的某个列</p><pre class=\"brush:php;toolbar:false\">alter&nbsp;table&nbsp;table_name&nbsp;change&nbsp;old_col&nbsp;new_col&nbsp;type;</pre><p>三、行级操作</p><p>1、向表中添加行（记录，record）</p><pre class=\"brush:php;toolbar:false\">insert&nbsp;into&nbsp;table_name&nbsp;values(....);</pre><p>（注意，括号里面的值必须要对应创建表时列的前后顺序，且用逗号隔开）<br/></p><p>如果忘了列名的顺序且嫌查看顺序麻烦，可以用这种形式：</p><pre class=\"brush:php;toolbar:false\">insert&nbsp;into&nbsp;table&nbsp;table_name(col_1,&nbsp;col_2,&nbsp;...&nbsp;col_n)&nbsp;values&nbsp;(val_1,&nbsp;val_2,&nbsp;...&nbsp;val_n);</pre><p>这时只要val_n对应col_n就行了，而不用去管列名的真正顺序。</p><p>2、删除表中特定的行</p><pre class=\"brush:php;toolbar:false\">delete&nbsp;from&nbsp;table_name&nbsp;where&nbsp;P;</pre><p>P是一个条件，一般格式是：col_name = value，即属性等于某个值的一行。</p><p>3、修改/更新行</p><pre class=\"brush:php;toolbar:false\">update&nbsp;table_name&nbsp;set&nbsp;col_name&nbsp;=&nbsp;new_val&nbsp;where&nbsp;P;</pre><h2>用户权限操作(一般需要root权限)</h2><p>1、查看所有存在用户</p><pre class=\"brush:php;toolbar:false\">select&nbsp;user&nbsp;from&nbsp;mysql.user;</pre><p>2、查看当前用户</p><pre class=\"brush:php;toolbar:false\">select&nbsp;user();</pre><p>3、创建一个用户</p><pre class=\"brush:php;toolbar:false\">create&nbsp;user&nbsp;user_name&nbsp;identified&nbsp;by&nbsp;&#39;passwd&#39;;</pre><p>这就创建了一个名为user_name的用户，其可以使用密码passwd登陆mysql，但是其权限仅限于登陆而已，登陆之后什么也做不了。这就需要在赋予其相关权限之后才能进行某些操作。</p><p>如果没有后面的 identified by &#39;passwd&#39;，将会创建一个无密码的用户，登陆是只需输入 mysql -u user_name回车即可，不必再输入密码。</p><p>上面这条命令的效果和下面这条是一样的（前提是用root登陆）：</p><pre class=\"brush:php;toolbar:false\">insert&nbsp;into&nbsp;mysql.user(Host,User,Password)&nbsp;values(&#39;localhost&#39;,&#39;user_name&#39;,password(&#39;passwd&#39;));</pre><p>他们本质上都是修改了mysql的元数据库mysql中的表user，这个表记录着mysql的所有用户信息。注意到，第二条命令多了一个参数Host，这在第一条命令中是被默认的，但是在第二条中是必不可少的，否则将无法登陆本机的mysql。</p><p>当然Host的值是可以改动的，对于第二条命令，其改动是显然的；对于第一条命令，如果不想选择默认值&#39;localhost&#39;，可以这样：</p><pre class=\"brush:php;toolbar:false\">create&nbsp;user_name@other_host&nbsp;identified&nbsp;by&nbsp;&#39;passwd&#39;;</pre><p>4、赋予用户相关权限</p><p>权限的范围包括经典的“增删改除”，以及代表所有的all等。整体格式如下：</p><pre class=\"brush:php;toolbar:false\">grant&nbsp;privilege_list&nbsp;on&nbsp;database_name.table_name&nbsp;to&nbsp;user_name@&#39;host_name&#39;;</pre><p>privilege_list可以是select/update/delete/insert中的一个或几个（逗号隔开），或者直接用all代替，代表所有权限；</p><p>on则将权限限定在某个数据库的某个表上，这里可以使用通配符*代表所有，如database_one.* 就意味着在database_one的所有表上都有权限，当然database_name也可以用*替代 ；</p><p>to后面跟的是user_name, 后面的@&#39;host_name&#39;可以省略，默认值为localhost，也可以使用通配符%来代表所有主机。需要注意的是，如果user_name本来不存在的话，这个命令将创建一个新的用户，其名称就是user_name, 这就是另一种创建用户的方法，而且同时赋予了相关权限，我本人一般使用这种方法。需要密码的话，可以在后面添上 identified by &#39;passwd&#39;，否则就是无密码用户。</p>',1466489608,1536602258),(12,16,1,'最简单的图片懒加载类库的类库Echo.js教程','图片懒加载','目前，网络上各大论坛，尤其是一些图片类型的网站上，在图片加载时均采用了一种名为懒加载的技术，具体表现为，当页面被请求时，只加载可视区域的图片，其它部分的图片则不加载，只有这些图片出现在可视区域时才会动态加载这些图片，从而节约了网络带宽和提高了初次加载的速度。','http://7xviiw.com1.z0.glb.clouddn.com/20180705184323711.png',1,17,4,2384,'<p>目前，网络上各大论坛，尤其是一些图片类型的网站上，在图片加载时均采用了一种名为懒加载的技术，具体表现为，当页面被请求时，只加载可视区域的图片，其它部分的图片则不加载，只有这些图片出现在可视区域时才会动态加载这些图片，从而节约了网络带宽和提高了初次加载的速度，今天，小文给大家介绍一个原生js懒加载类库Echo.js使用方法。</p><h2>引入</h2><p>引入Echo.js类库<br/></p><pre class=\"brush:js;toolbar:false;\">&lt;script&nbsp;type=&quot;text/javascript&quot;&nbsp;charset=&quot;utf-8&quot;&nbsp;src=&quot;echo.js&quot;&gt;&lt;/script&gt;</pre><h2>HTML</h2><p>img标签引入图片写法</p><pre class=\"brush:html;toolbar:false\">&lt;img&nbsp;src=&quot;default.gif&quot;&nbsp;alt=&quot;pic&quot;&nbsp;data-echo=&quot;pic.jpg&quot;&nbsp;width=&quot;640&quot;&nbsp;height=&quot;480&quot;&gt;</pre><p>这里需要注意，图片的宽高一定要定义。可以在css中定义~<br/></p><h2>JS</h2><p>初始化</p><pre class=\"brush:js;toolbar:false\">echo.init({\r\n&nbsp;&nbsp;&nbsp;offset:0,\r\n&nbsp;&nbsp;&nbsp;throttle:0\r\n});</pre><p>offset:离可视区域多少像素的图片可以被加载</p><p>throttle:图片延迟多少毫秒加载</p><p>注意:这里echo第一个字母要小写，如果百度过这个类库的童鞋可能发现，文档写法是Echo.init，目前最新版的会报错找不到哦~</p><h2>写在最后</h2><p>这里需要注意一点，Echo.js 使用了 HTML5 的 data 属性，并且需要获取该属性的值，所以它并不兼容 IE6、IE7。</p><p>还有需要注意的是，在ajax或者其他情况，懒加载失效，可以用render()方法触发懒记载。</p><pre class=\"brush:js;toolbar:false\">echo.render();</pre><p>简简单单三步，你就已经将图片懒加载技术应用于自己的站点了，是不是很简单呢？运用懒加载技术后你可以发现，你的网站加载速度大大提升哦~</p>',1466497167,1536693266),(6,12,1,'提升PHP运行效率的一些要点总结','提升PHP运行效率的一些要点总结','提升PHP运行效率的一些要点总结','http://7xviiw.com1.z0.glb.clouddn.com/20160620183644270.jpg',0,47,3,650,'<p>1、$row[&#39;id&#39;] 的速度是$row[id]的7倍。这也是我们最遇到的问题之一。还有就是我们注意区分单引号和双引号的区别。</p><p>2、如果能将类的方法定义成static，就尽量定义成static，它的速度会提升将近4倍。　　</p><p>3、echo 比 print 快，并且使用echo的多重参数(译注：指用逗号而不是句点)代替字符串连接，比如echo $str1,$str2。</p><p>4、在执行for循环之前确定最大循环数，不要每循环一次都计算最大值，最好运用foreach代替。</p><p>5、注销那些不用的变量尤其是大数组，以便释放内存。</p><p>6、尽量避免使用__get，__set，__autoload。</p><p>7、require_once()代价昂贵。</p><p>8、include文件时尽量使用绝对路径，因为它避免了PHP去include_path里查找文件的速度，解析操作系统路径所需的时间会更少。</p><p>9、如果你想知道脚本开始执行(译注：即服务器端收到客户端请求)的时刻，使用$_SERVER[‘REQUEST_TIME’]要好于time()。</p><p>10、函数代替正则表达式完成相同功能。</p><p>11、str_replace函数比preg_replace函数快，但strtr函数的效率是str_replace函数的四倍。</p><p>12、如果一个字符串替换函数，可接受数组或字符作为参数，并且参数长度不太长，那么可以考虑额外写一段替换代码，使得每次传递参数是一个字符，而不是只写一行代码接受数组作为查询和替换的参数。</p><p>13、使用选择分支语句(译注：即switch case)好于使用多个if，else if语句。</p><p>14、用@屏蔽错误消息的做法非常低效，极其低效。</p><p>15、打开apache的mod_deflate模块，可以提高网页的浏览速度。</p><p>16、数据库连接当使用完毕时应关掉，不要用长连接。</p><p>17、错误消息代价昂贵。</p>',1466260453,1536480150),(38,12,1,'thinkphp框架如何隐藏index.php入口文件','php,thinkphp','thinkphp框架如何隐藏index.php入口文件','http://7xviiw.com1.z0.glb.clouddn.com/20160906141637342.jpg',0,8,255,2040,'<h2>打开apache配置文件</h2><p>#LoadModule rewrite_module modules/mod_rewrite.so把前面的警号去掉</p><p>AllowOverride None 把None改为 All &nbsp;//在APACHE里面去配置 (注意其他地方的AllowOverride也统统设置为ALL)</p><h2>将以下代码另存为名称为.htaccess的文件保存在index.php入口文件平级目录下</h2><pre class=\"brush:c#;toolbar:false\">RewriteEngine&nbsp;on\r\nRewriteCond&nbsp;%{REQUEST_FILENAME}&nbsp;!-d\r\nRewriteCond&nbsp;%{REQUEST_FILENAME}&nbsp;!-f\r\nRewriteRule&nbsp;^(.*)$&nbsp;index.php/$1&nbsp;[QSA,PT,L]</pre><h2>在tp配置文件中开启URL重写模式</h2><p>&#39;URL_MODEL&#39;=&gt;&#39;2&#39;,</p><h2>重启apache</h2><p>重启apache即可！<br/></p>',1473142706,1536706700),(22,14,1,'css初始化及大网站通用css初始化代码','css初始化,htmlcss','由于不同的浏览器对CSS的初始化不同，会造成不同的效果。因此每次新开发网站或新网页时候我们通过初始化CSS样式的属性，为我们将用到的CSS或html标签更加方便准确，为我们节约网页代码，节约网页下载时间；还会使得我们开发网页内容时更加方便简洁，不用考虑很多。','http://7xviiw.com1.z0.glb.clouddn.com/20160707105302667.png',0,17,255,1116,'<h2>初始化CSS的作用</h2><p>由于不同的浏览器对CSS的初始化不同，会造成不同的效果。因此每次新开发网站或新网页时候我们通过初始化CSS样式的属性，为我们将用到的CSS或html标签更加方便准确，为我们节约网页代码，节约网页下载时间；还会使得我们开发网页内容时更加方便简洁，不用考虑很多。</p><h2>需要初始化地方</h2><p>初始化的项一般包括margin，border，padding，color，font等等，大致需要初始化有h1到h4标签、table、文字大小、文字没有链接颜色、超链接样式、DIV、居中、ol、 ul、li、img等等的样式。</p><h2>一些css初始化例子</h2><p>最耗资源的，最简单的</p><pre class=\"brush:css;toolbar:false\">*&nbsp;{&nbsp;padding:&nbsp;0;&nbsp;margin:&nbsp;0;&nbsp;border:&nbsp;0;&nbsp;}</pre><h2>yahoo的初始化</h2><pre class=\"brush:css;toolbar:false\">html&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;background:&nbsp;none&nbsp;repeat&nbsp;scroll&nbsp;0&nbsp;0&nbsp;#FFFFFF;\r\n&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;#000000;\r\n}\r\nbody,&nbsp;div,&nbsp;dl,&nbsp;dt,&nbsp;dd,&nbsp;ul,&nbsp;ol,&nbsp;li,&nbsp;h1,&nbsp;h2,&nbsp;h3,&nbsp;h4,&nbsp;h5,&nbsp;h6,&nbsp;pre,&nbsp;code,&nbsp;form,&nbsp;fieldset,&nbsp;legend,&nbsp;input,&nbsp;textarea,&nbsp;p,&nbsp;blockquote,&nbsp;th,&nbsp;td&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;margin:&nbsp;0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;padding:&nbsp;0;\r\n}\r\ntable&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;border-collapse:&nbsp;collapse;\r\n&nbsp;&nbsp;&nbsp;&nbsp;border-spacing:&nbsp;0;\r\n}\r\nfieldset,&nbsp;img&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;border:&nbsp;0&nbsp;none;\r\n}\r\naddress,&nbsp;caption,&nbsp;cite,&nbsp;code,&nbsp;dfn,&nbsp;em,&nbsp;strong,&nbsp;th,&nbsp;var&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;font-style:&nbsp;normal;\r\n&nbsp;&nbsp;&nbsp;&nbsp;font-weight:&nbsp;normal;\r\n}\r\nli&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;list-style:&nbsp;none&nbsp;outside&nbsp;none;\r\n}\r\ncaption,&nbsp;th&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;text-align:&nbsp;left;\r\n}\r\nh1,&nbsp;h2,&nbsp;h3,&nbsp;h4,&nbsp;h5,&nbsp;h6&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;font-size:&nbsp;100%;\r\n&nbsp;&nbsp;&nbsp;&nbsp;font-weight:&nbsp;normal;\r\n}\r\nq:before,&nbsp;q:after&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;content:&nbsp;&quot;&quot;;\r\n}\r\nabbr,&nbsp;acronym&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;border:&nbsp;0&nbsp;none;\r\n&nbsp;&nbsp;&nbsp;&nbsp;font-variant:&nbsp;normal;\r\n}\r\nsup&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;vertical-align:&nbsp;text-top;\r\n}\r\nsub&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;vertical-align:&nbsp;text-bottom;\r\n}\r\ninput,&nbsp;textarea,&nbsp;select&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;font-family:&nbsp;inherit;\r\n&nbsp;&nbsp;&nbsp;&nbsp;font-size:&nbsp;inherit;\r\n&nbsp;&nbsp;&nbsp;&nbsp;font-weight:&nbsp;inherit;\r\n}\r\ninput,&nbsp;textarea,&nbsp;select&nbsp;{\r\n}\r\nlegend&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;color:&nbsp;#000000;\r\n}\r\nbody&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;font:&nbsp;13px/1.231&nbsp;arial,helvetica,clean,sans-serif;\r\n}\r\nselect,&nbsp;input,&nbsp;button,&nbsp;textarea&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;font:&nbsp;99%&nbsp;arial,helvetica,clean,sans-serif;\r\n}\r\ntable&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;font-size:&nbsp;inherit;\r\n}\r\npre,&nbsp;code,&nbsp;kbd,&nbsp;samp,&nbsp;tt&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;font-family:&nbsp;monospace;\r\n&nbsp;&nbsp;&nbsp;&nbsp;line-height:&nbsp;100%;\r\n}\r\na&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;text-decoration:&nbsp;none;\r\n}\r\na:hover,&nbsp;a:focus&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;text-decoration:&nbsp;underline;\r\n}\r\nstrong&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;font-weight:&nbsp;bold;\r\n}\r\ninput[type=&quot;submit&quot;]&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;cursor:&nbsp;pointer;\r\n}\r\nbutton&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;cursor:&nbsp;pointer;\r\n}</pre><h2>腾讯QQ官网初始化</h2><pre class=\"brush:css;toolbar:false\">body,ol,ul,h1,h2,h3,h4,h5,h6,p,th,td,dl,dd,form,fieldset,legend,input,textarea,select{margin:0;padding:0}\r\nbody{font:12px&quot;宋体&quot;,&quot;Arial&nbsp;Narrow&quot;,HELVETICA;background:#fff;-webkit-text-size-adjust:100%;}\r\na{color:#2d374b;text-decoration:none}\r\na:hover{color:#cd0200;text-decoration:underline}\r\nem{font-style:normal}\r\nli{list-style:none}\r\nimg{border:0;vertical-align:middle}\r\ntable{border-collapse:collapse;border-spacing:0}\r\np{word-wrap:break-word}</pre><h2>新浪官网初始化</h2><pre class=\"brush:css;toolbar:false\">body,ul,ol,li,p,h1,h2,h3,h4,h5,h6,form,fieldset,table,td,img,div{margin:0;padding:0;border:0;}\r\nbody{background:#fff;color:#333;font-size:12px;&nbsp;margin-top:5px;font-family:&quot;SimSun&quot;,&quot;宋体&quot;,&quot;Arial&nbsp;Narrow&quot;;}\r\n&nbsp;\r\nul,ol{list-style-type:none;}\r\nselect,input,img,select{vertical-align:middle;}\r\n&nbsp;\r\na{text-decoration:none;}\r\na:link{color:#009;}\r\na:visited{color:#800080;}\r\na:hover,a:active,a:focus{color:#c00;text-decoration:underline;}</pre><h2>淘宝官网初始化</h2><pre class=\"brush:css;toolbar:false\">body,&nbsp;h1,&nbsp;h2,&nbsp;h3,&nbsp;h4,&nbsp;h5,&nbsp;h6,&nbsp;hr,&nbsp;p,&nbsp;blockquote,&nbsp;dl,&nbsp;dt,&nbsp;dd,&nbsp;ul,&nbsp;ol,&nbsp;li,&nbsp;pre,&nbsp;form,&nbsp;fieldset,&nbsp;legend,&nbsp;button,&nbsp;input,&nbsp;textarea,&nbsp;th,&nbsp;td&nbsp;{&nbsp;margin:0;&nbsp;padding:0;&nbsp;}\r\nbody,&nbsp;button,&nbsp;input,&nbsp;select,&nbsp;textarea&nbsp;{&nbsp;font:12px/1.5tahoma,&nbsp;arial,&nbsp;\\5b8b\\4f53;&nbsp;}\r\nh1,&nbsp;h2,&nbsp;h3,&nbsp;h4,&nbsp;h5,&nbsp;h6{&nbsp;font-size:100%;&nbsp;}\r\naddress,&nbsp;cite,&nbsp;dfn,&nbsp;em,&nbsp;var&nbsp;{&nbsp;font-style:normal;&nbsp;}\r\ncode,&nbsp;kbd,&nbsp;pre,&nbsp;samp&nbsp;{&nbsp;font-family:couriernew,&nbsp;courier,&nbsp;monospace;&nbsp;}\r\nsmall{&nbsp;font-size:12px;&nbsp;}\r\nul,&nbsp;ol&nbsp;{&nbsp;list-style:none;&nbsp;}\r\na&nbsp;{&nbsp;text-decoration:none;&nbsp;}\r\na:hover&nbsp;{&nbsp;text-decoration:underline;&nbsp;}\r\nsup&nbsp;{&nbsp;vertical-align:text-top;&nbsp;}\r\nsub{&nbsp;vertical-align:text-bottom;&nbsp;}\r\nlegend&nbsp;{&nbsp;color:#000;&nbsp;}\r\nfieldset,&nbsp;img&nbsp;{&nbsp;border:0;&nbsp;}\r\nbutton,&nbsp;input,&nbsp;select,&nbsp;textarea&nbsp;{&nbsp;font-size:100%;&nbsp;}\r\ntable&nbsp;{&nbsp;border-collapse:collapse;&nbsp;border-spacing:0;&nbsp;}</pre><h2>网易官网初始化</h2><pre class=\"brush:css;toolbar:false\">html&nbsp;{overflow-y:scroll;}\r\nbody&nbsp;{margin:0;&nbsp;padding:29px00;&nbsp;font:12px&quot;\\5B8B\\4F53&quot;,sans-serif;background:#ffffff;}\r\ndiv,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,form,fieldset,input,textarea,blockquote,p{padding:0;&nbsp;margin:0;}\r\ntable,td,tr,th{font-size:12px;}\r\nli{list-style-type:none;}\r\nimg{vertical-align:top;border:0;}\r\nol,ul&nbsp;{list-style:none;}\r\nh1,h2,h3,h4,h5,h6{font-size:12px;&nbsp;font-weight:normal;}\r\naddress,cite,code,em,th&nbsp;{font-weight:normal;&nbsp;font-style:normal;}</pre><h2>博客园初始化</h2><pre class=\"brush:css;toolbar:false\">html,body{color:#000;background:#FFF;}\r\nbody,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,legend,input,button,textarea,p,blockquote,th,td{\r\n&nbsp;&nbsp;&nbsp;&nbsp;margin:0;padding:0;\r\n}\r\ntable{border-collapse:collapse;border-spacing:0;}\r\nfieldset,img{border:0;}\r\naddress,caption,cite,code,dfn,em,strong,th,var,optgroup{\r\n&nbsp;&nbsp;&nbsp;&nbsp;font-style:inherit;font-weight:inherit;\r\n}\r\ndel,ins{text-decoration:none;}\r\nli{list-style:none;}\r\ncaption,th{text-align:left;}\r\nh1,h2,h3,h4,h5,h6{&nbsp;&nbsp;&nbsp;&nbsp;font-size:100%;font-weight:normal;}\r\nq:before,q:after{content:&#39;&#39;;}\r\nabbr,acronym{border:0;font-variant:normal;}\r\nsup{vertical-align:baseline;}\r\nsub{vertical-align:baseline;}\r\nlegend{color:#000;}\r\ninput,button,textarea,select,optgroup,option{\r\n&nbsp;&nbsp;&nbsp;&nbsp;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;\r\n}\r\ninput,button,textarea,select{*font-size:100%;}\r\n.clear{clear:both;}\r\ninput::-moz-focus-inner{&nbsp;border:&nbsp;0;padding:&nbsp;0;}\r\n/*added*/\r\ninput[type=button],input[type=submit]&nbsp;{-webkit-appearance:&nbsp;button;}</pre>',1467860242,1536553388),(23,11,1,'php中mysqli预处理防御sql注入攻击','mysqli,sql注入','长期以来，web的安全性存在着巨大的争议与挑战。其中，sql注入就是一种常见的一种攻击方法，开发人员普遍的做法就是不停的过滤，转义参数，可是php天生弱类型的机制，总是让黑客有机可乘。','http://7xviiw.com1.z0.glb.clouddn.com/20160713104522663.jpg',0,5,255,1237,'<h2>闹心的sql注入</h2><p>长期以来，web的安全性存在着巨大的争议与挑战。其中，sql注入就是一种常见的一种攻击方法，开发人员普遍的做法就是不停的过滤，转义参数，可是php天生弱类型的机制，总是让黑客有机可乘。</p><p>记得很久以前看到过一位大牛说过的一句话，在一个程序中，60%的代码都应该是在进行各种防御。</p><p>其实，现在来看，防御sql注入其实并不需要进行各种参数过滤，以下将开启干货模式！</p><p>PHP5.x开始引入了一种新的mysql操作方式--mysqli，在php中也有一项相应的操作方式叫做PHP预处理。采用面向对象的方式来进行参数化绑定操作，由于对数据库操作的模式驱动不同，因此可以非常有效的防御sql注入。</p><h2>代码示例</h2><pre class=\"brush:php;toolbar:false\">&lt;!--?php&nbsp;\r\n$root&nbsp;=&nbsp;&quot;root&quot;;\r\n$pwd&nbsp;=&nbsp;&quot;root&quot;;\r\n$host&nbsp;=&nbsp;&quot;localhost&quot;;\r\n$database&nbsp;=&nbsp;&nbsp;&quot;database&quot;;\r\n$conn&nbsp;=&nbsp;new&nbsp;mysqli($host,$root,$pwd,$database);//面向对象的方式实例化一个对象\r\n$keywords&nbsp;=&nbsp;$_GET[&#39;keywords&#39;];\r\n$search_sql&nbsp;=&nbsp;&quot;select&nbsp;content&nbsp;from&nbsp;mykey&nbsp;where&nbsp;title&nbsp;=&nbsp;?&nbsp;&quot;;//其中的?是一个占位符\r\n$search_action&nbsp;=&nbsp;$conn-&gt;prepare($search_sql);//进行预处理操作\r\n$search_action&nbsp;-&gt;bind_param(&quot;s&quot;,$keywords);//绑定参数，第一个参数表示为上面预处理的的占位符的数量和每一个参数的数据类型，s为字符串，i为整形，d为双精度小数，有几个参数，就写几个s或d或i，比如说iiii,ssss,sidi这样的。然后后面就是有几个参数就写几个要绑定的变量，比如bind_param(&#39;sss&#39;,$username,$password,$code);\r\n$search_action&nbsp;-&gt;bind_result($content);//将结果绑定在相对应的变量上，比如你select了username,password,你就可以写bind_result($usernmae,$password);\r\n$search_action&nbsp;-&gt;execute();//执行sql操作\r\nwhile($search_action&nbsp;-&gt;fetch()){\r\necho&nbsp;$content.&#39;&lt;br&gt;&#39;;\r\n}\r\n$search_action&nbsp;-&gt;free_result();//释放内存\r\n$search_action&nbsp;-&gt;close();//结束这个实例化\r\n?&gt;</pre><h2>写在最后</h2><p>上面是php预处理中一个非常简单的例子，它内置的其他函数能很方便我们的开发速度，那么看到这里，很多人可能还是不明白，有人可能想问，你这个绑定参数是不是还是在拼凑sql语句？如果是拼凑语句，那还不是会产生注入吗</p><p>这就要从他的操作原理来解释了，其实它在prepare操作中，就已经在数据库中，执行了语句，以后的绑定参数和执行，只不过是再传递数据进去而已，所以根本不会和sql语句拼接，也就自然不会将危险代码执行。因此，在这种模式下sql注入就能很有效的被防御了。</p>',1468378005,1536617518),(24,11,1,'php处理Excel的方法','phpExcel,php','平时在工作中，时常会出现将数据库表导出为Excel或者将Excel导入数据库表的需求。这一需求早早就已经实现过了，为了方便导入导出，我将其封装成了两个方法，作为记录。','http://7xviiw.com1.z0.glb.clouddn.com/20160713104705731.jpg',0,8,255,960,'<h2>遇到问题</h2><p>平时在工作中，时常会出现将数据库表导出为Excel或者将Excel导入数据库表的需求。这一需求早早就已经实现过了，为了方便导入导出，我将其封装成了两个方法，作为记录。</p><h2>phpexcel类库的引用</h2><p>phpexcel拥有强大的Excel处理能力，在packagist上已经拥有数百万次的下载量，不过实话实说，excel的处理速度仍然是非常慢，数据量较大时慎重使用。在packagist上下载或者直接用composer require phpoffice/phpexcel之后，便可以使用phpexcel了。</p><h2>导出成为Excel</h2><p>在绝大多数情况下，导出excel其实就是将二位数组转化为表格。</p><pre class=\"brush:php;toolbar:false\">use&nbsp;namespace&nbsp;PHPExcel;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;$name&nbsp;string&nbsp;要保存的Excel的名字\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;$ret_data&nbsp;转换为表格的二维数组\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@throws&nbsp;PHPExcel_Exception\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@throws&nbsp;PHPExcel_Reader_Exception\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;exportExcel($name,&nbsp;$ret_data){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objPHPExcel&nbsp;=&nbsp;new&nbsp;PHPExcel();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//设置表格\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objPHPExcel-&gt;getProperties()-&gt;setCreator($name)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;setLastModifiedBy($name)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;setTitle(&quot;Office&nbsp;2007&nbsp;XLSX&nbsp;Test&nbsp;Document&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;setSubject(&quot;Office&nbsp;2007&nbsp;XLSX&nbsp;Test&nbsp;Document&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;setDescription(&quot;Test&nbsp;document&nbsp;for&nbsp;Office&nbsp;2007&nbsp;XLSX,&nbsp;generated&nbsp;using&nbsp;PHP&nbsp;classes.&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;setKeywords(&quot;office&nbsp;2007&nbsp;openxml&nbsp;php&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&gt;setCategory(&quot;Test&nbsp;result&nbsp;file&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//填充数据\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;($ret_data&nbsp;as&nbsp;$key&nbsp;=&gt;&nbsp;$row)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$num&nbsp;=&nbsp;$key&nbsp;+&nbsp;1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//$row&nbsp;=&nbsp;array_values($row);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$i=0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;($row&nbsp;as&nbsp;$key2&nbsp;=&gt;&nbsp;$value2)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objPHPExcel-&gt;setActiveSheetIndex(0)-&gt;setCellValue(&nbsp;Cell::stringFromColumnIndex($i).&nbsp;($num),&nbsp;$value2);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$i++;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//设置表格并输出\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objPHPExcel-&gt;getActiveSheet()-&gt;setTitle($name);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header(&#39;Content-Type:&nbsp;application/vnd.ms-excel&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header(&quot;Content-Disposition:&nbsp;attachment;filename={$name}.xls&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header(&#39;Cache-Control:&nbsp;max-age=0&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header(&#39;Cache-Control:&nbsp;max-age=1&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header(&#39;Last-Modified:&nbsp;&#39;&nbsp;.&nbsp;gmdate(&#39;D,&nbsp;d&nbsp;M&nbsp;Y&nbsp;H:i:s&#39;)&nbsp;.&nbsp;&#39;&nbsp;GMT&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header(&#39;Cache-Control:&nbsp;cache,&nbsp;must-revalidate&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header(&#39;Pragma:&nbsp;public&#39;);&nbsp;//&nbsp;HTTP/1.0\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objWriter&nbsp;=&nbsp;PHPExcel_IOFactory::createWriter($objPHPExcel,&nbsp;&#39;Excel5&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objWriter-&gt;save(&#39;php://output&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}</pre><h2>导入Excel</h2><p>同理，导入Excel其实就是将Excel的数据转化成为二维数组，这就要求Excel必须符合格式。</p><pre class=\"brush:php;toolbar:false\">function&nbsp;getRows($inputFileName)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!file_exists($inputFileName))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;Exception(&quot;File&nbsp;not&nbsp;existed&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$inputFileType&nbsp;=&nbsp;PHPExcel_IOFactory::identify($inputFileName);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objReader&nbsp;=&nbsp;PHPExcel_IOFactory::createReader($inputFileType);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objPHPExcel&nbsp;=&nbsp;$objReader-&gt;load($inputFileName);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$objWorksheet&nbsp;=&nbsp;$objPHPExcel-&gt;getActiveSheet();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$highestRow&nbsp;=&nbsp;$objWorksheet-&gt;getHighestRow();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$highestColumn&nbsp;=&nbsp;$objWorksheet-&gt;getHighestColumn();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$highestColumnIndex&nbsp;=&nbsp;PHPExcel_Cell::columnIndexFromString($highestColumn);//总列数\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$row&nbsp;=&nbsp;1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$curr&nbsp;=&nbsp;array();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;($row&nbsp;&lt;=&nbsp;$highestRow)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;($col&nbsp;=&nbsp;0;&nbsp;$col&nbsp;&lt;&nbsp;$highestColumnIndex;&nbsp;$col++)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$value&nbsp;=&nbsp;str_replace(array(&quot;\\n&quot;,&nbsp;&quot;\\n\\r&quot;,&nbsp;&quot;\\r&quot;),&nbsp;&quot;&quot;,&nbsp;$objWorksheet-&gt;getCellByColumnAndRow($col,&nbsp;$row)-&gt;getValue());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$curr[$row][]&nbsp;=&nbsp;$value;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$row++;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;array_shift($curr);//第一行一般是字段名（Excel中列的标题），导入时要移除\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$curr;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}</pre><h2>其他</h2><p>导出时保存的格式是xlsx，想要改成其他格式需要传入不同的参数。</p><p>导入时如果有多个sheet时需要在上次打开时在要导入的sheet页（以保证当前sheet为activeSheet）关闭，或者根据sheet名在程序中选择sheet。</p>',1468378164,1536644031),(25,11,1,'理解HTTP之常见的状态码','http状态码,php','状态码的职责是当客户端向服务器端发送请求时，描述返回请求结果。借助状态码，用户可以知道服务器端是正常处理了请求，还是出现了什么错误。\r\n','http://7xviiw.com1.z0.glb.clouddn.com/20160713105015281.jpg',0,8,255,726,'<p>状态码的职责是当客户端向服务器端发送请求时，描述返回请求结果。借助状态码，用户可以知道服务器端是正常处理了请求，还是出现了什么错误。</p><p>RFC2616定义的状态码，由3位数字和原因短信组成。</p><p>数字中的第一位指定了响应类别，后两位无分类。</p><p>RFC2616记录的HTTP状态码有37种，再加上「WebDAV」(RFC4918、5842)和「Additional HTTP Status Codes」(RFC6585)，数量就达到60多种。</p><p>然并卵，这么多种HTTP状态码，其实常用的大概只有14种，本文就讲讲这14种状态码。</p><h2>2XX Success</h2><pre class=\"brush:html;toolbar:false\">This&nbsp;class&nbsp;of&nbsp;status&nbsp;code&nbsp;indicates&nbsp;that&nbsp;the&nbsp;client&#39;s&nbsp;request&nbsp;was&nbsp;successfully&nbsp;received,&nbsp;understood,&nbsp;and&nbsp;accepted.</pre><p>2xx 响应结果表示从客户端发来的请求在服务器端被正常处理了。</p><h3>200 OK</h3><p>请求被成功处理，服务器会根据不同的请求方法返回结果：</p><p>GET：请求的对应资源会作为响应返回。</p><p>HEAD：请求的对应资源的响应头(entity-header)会作为响应返回,不包括响应体(message-body)。</p><p>POST：返回处理对应请求的结果。</p><h3>204 No Content</h3><p>该状态码表示服务器接收到的请求已经处理完毕，但是服务器不需要返回响应体.</p><p>比如，客户端是浏览器的话，发出的请求返回204响应，那么浏览器显示的页面不会发生更新。</p><h3>206 Partial Content</h3><p>该状态码表示客户端进行了范围请求，而服务器成功执行了这部分的GET请求。</p><p>客户端发起的请求，必须在请求头中包含Range字段。服务端响应报文中，必须包含由Content-Range指定范围的实体内容(entity-bodies )</p><h2>3XX Redirection</h2><pre class=\"brush:html;toolbar:false\">This&nbsp;class&nbsp;of&nbsp;status&nbsp;code&nbsp;indicates&nbsp;that&nbsp;further&nbsp;action&nbsp;needs&nbsp;to&nbsp;be&nbsp;taken&nbsp;by&nbsp;the&nbsp;user&nbsp;agent&nbsp;in&nbsp;order&nbsp;to&nbsp;fulfill&nbsp;the&nbsp;request.</pre><p>3XX 响应结果表明浏览器需要执行某些特殊的处理以完成请求。</p><h3>301 Movied Permanently</h3><p>永久性重定向。该状态码表示请求的资源已经被分配了新的URI，并且以后使用资源现在所指的URI。并且根据请求的方法有不同的处理方式：</p><p>HEAD：必须在响应头部Location字段中指明新的永久性的URI。</p><p>GET：除了有Location字段以外，还需要在响应体中附上永久性URI的超链接文本。</p><p>POST：客户端在发送POST请求，受到301响应之后，不应该自动跳转URI，应当让用户确认跳转。</p><p>比如，如果一个URI已经在浏览器中被收藏为书签，这时应该按照Location首部字段提示的URI重新保存。</p><p>例如建立一个收藏的书签：http://www.az1314.cn当访问这个书签的时候，请求会被重定向到http://az1314.cn</p><p>并且对应的书签会被改变，指向http://az1314.cn</p><p>不信？Try yourself.</p><h3>302 Found</h3><p>临时性重定向。该状态码表示请求的资源已被分配了新的URI，希望用户本次能使用新的URI访问。</p><p>和301 Moved Permanently 状态码相似，但302状态码代表的资源不是被永久移动，只是临时性质的。</p><p>如果，用户把一个URI收藏为书签，302响应是不会像301那样去更新书签。</p><h3>303 See Other</h3><p>该状态码表示由于请求对应的资源存在另一个URI，应使用GET方法定向获取请求的资源。303与302不同之处在于，302是不会改变请求的方法，如果请求方法是POST的话，重定向的请求也应该是POST。而对于303，使用POST请求的话，重定向的请求应该是GET请求。</p><p>但是有一点是需要注意的，许多HTTP/1.1版以前的浏览器不能正确理解303状态码，很多现存的浏览器讲302响应视为303响应，并且使用GET方式访问Location中规定的的URI，而无视原先请求的方法。</p><p>在RFC2616中有相关的这样一段原文：</p><pre class=\"brush:html;toolbar:false\">Note:&nbsp;Many&nbsp;pre-HTTP/1.1&nbsp;user&nbsp;agents&nbsp;do&nbsp;not&nbsp;understand&nbsp;the&nbsp;303&nbsp;status.&nbsp;When&nbsp;interoperability&nbsp;with&nbsp;such&nbsp;clients&nbsp;is&nbsp;a&nbsp;concern,&nbsp;the&nbsp;302&nbsp;status&nbsp;code&nbsp;may&nbsp;be&nbsp;used&nbsp;instead,&nbsp;since&nbsp;most&nbsp;user&nbsp;agents&nbsp;react&nbsp;to&nbsp;a&nbsp;302&nbsp;response&nbsp;as&nbsp;described&nbsp;here&nbsp;for&nbsp;303.</pre><h3>304 Not Modified</h3><p>该状态码表示客户端发送附带条件请求时，服务器端允许请求访问资源，但未满足条件的情况。304状态码返回时，不包含任何响应的主题部分。附带条件的请求指的是采用GET方法的请求头中包含：If-Match、If-Modified-Since、If-None-Match、If-Range、If-Unmodified-Since中任一首部。</p><h3>307 Temporary Redirect</h3><p>临时重定向。该状态码与302和303的有着类似的含义，不同之处在于，307状态码并不会指定客户端要用什么样的请求方法请求重定向地址。(302指定使用原有请求方法，303指定使用GET方法)</p><h2>4XX Client Error</h2><pre class=\"brush:html;toolbar:false\">The&nbsp;4xx&nbsp;class&nbsp;of&nbsp;status&nbsp;code&nbsp;is&nbsp;intended&nbsp;for&nbsp;cases&nbsp;in&nbsp;which&nbsp;the&nbsp;client&nbsp;seems&nbsp;to&nbsp;have&nbsp;erred.</pre><p>4XX 的响应结果表明客户端是发生错误的原因所在</p><h3>400 Bad Request</h3><p>表示该请求报文中存在语法错误，导致服务器无法理解该请求。客户端需要修改请求的内容后再次发送请求。</p><h3>401 Unauthorized</h3><p>该状态码表示发送的请求需要有通过HTTP认证(Basic认证，Digest认证)的认证信息。返回含有401的响应，必须在头部包含WWW-Authenticate以指明服务器需要哪种方式的认证。</p><p>当客户端再次请求该资源的时候，需要在请求头中的Authorization包含认证信息。</p><p>更多关于认证授权的信息关注RFC2617</p><h3>403 Forbidden</h3><p>该状态码表明对请求资源的访问被服务器拒绝了。服务器没有必要给出拒绝的详细理由，但如果想做说明的话，可以在实体的主体部分原因进行描述，这样就能让用户看到了。</p><p>未获得文件系统的访问权限，访问权限出现某些问题，从未授权的发送源IP地址试图访问等情况都可能发生403响应。</p><h3>404 Not Found</h3><p>该状态码表明服务器上无法找到指定的资源。通常被用于服务器不想透露拒绝请求的原因，或者没有其他的响应可提供。</p><h2>5XX Server Error</h2><pre class=\"brush:html;toolbar:false\">Response&nbsp;status&nbsp;codes&nbsp;beginning&nbsp;with&nbsp;the&nbsp;digit&nbsp;&quot;5&quot;&nbsp;indicate&nbsp;cases&nbsp;in&nbsp;which&nbsp;the&nbsp;server&nbsp;is&nbsp;aware&nbsp;that&nbsp;it&nbsp;has&nbsp;erred&nbsp;or&nbsp;is&nbsp;incapable&nbsp;of&nbsp;performing&nbsp;the&nbsp;request.</pre><p>5XX 的响应结果表明服务器本身发生错误，或者没有足够的能力来处理请求。</p><h3>500 Internal Server Error</h3><p>该状态码表明服务器端在执行请求时发生了错误。也有可能是Web应用存在的BUG或某些临时的故障。</p><h3>503 Service Unavailable</h3><p>该状态码表明服务器暂时处于超负载或正在进行停机维护，现在无法处理请求。如果事先得知解除以上需要的时间，最好写入Retry-After首部字段再返回给客户端。</p>',1468378363,1536464386),(26,12,1,'php中奖概率算法，可用于刮刮卡，大转盘等抽奖算法','php中奖,php抽奖','php中奖概率算法，可用于刮刮卡，大转盘等抽奖算法经典的概率算法，关键是这个算法已在我们以前的项目中有应用，尤其是大数据量的项目中效率非常棒。','http://7xviiw.com1.z0.glb.clouddn.com/20160714101024677.jpg',0,5,255,918,'<p>php中奖概率算法，可用于刮刮卡，大转盘等抽奖算法经典的概率算法，关键是这个算法已在我们以前的项目中有应用，尤其是大数据量的项目中效率非常棒。</p><pre class=\"brush:php;toolbar:false\">&lt;?php\r\n&nbsp;/*&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;经典的概率算法，&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;$proArr是一个预先设置的数组，&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;假设数组为：array(100,200,300,400)，&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;开始是从1,1000&nbsp;这个概率范围内筛选第一个数是否在他的出现概率范围之内，&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;如果不在，则将概率空间，也就是k的值减去刚刚的那个数字的概率空间，&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;在本例当中就是减去100，也就是说第二个数是在1，900这个范围内筛选的。&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;这样&nbsp;筛选到最终，总会有一个数满足要求。&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;就相当于去一个箱子里摸东西，&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;第一个不是，第二个不是，第三个还不是，那最后一个一定是。&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;这个算法简单，而且效率非常&nbsp;高，&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;关键是这个算法已在我们以前的项目中有应用，尤其是大数据量的项目中效率非常棒。&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;function&nbsp;get_rand($proArr)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result&nbsp;=&nbsp;&#39;&#39;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//概率数组的总概率精度&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$proSum&nbsp;=&nbsp;array_sum($proArr);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//概率数组循环&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;($proArr&nbsp;as&nbsp;$key&nbsp;=&gt;&nbsp;$proCur)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$randNum&nbsp;=&nbsp;mt_rand(1,&nbsp;$proSum);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($randNum&nbsp;&lt;=&nbsp;$proCur)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$result&nbsp;=&nbsp;$key;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$proSum&nbsp;-=&nbsp;$proCur;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unset&nbsp;($proArr);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$result;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$res&nbsp;=&nbsp;get_rand([100,200,300,400]);//相当于抽中这个key的几率分别为100,200,300，400\r\n&nbsp;&nbsp;&nbsp;&nbsp;//print_r($res);\r\n&nbsp;&nbsp;&nbsp;/*&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;奖项数组&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;是一个二维数组，记录了所有本次抽奖的奖项信息，&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;其中id表示中奖等级，prize表示奖品，v表示中奖概率。&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;注意其中的v必须为整数，你可以将对应的&nbsp;奖项的v设置成0，即意味着该奖项抽中的几率是0，&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;数组中v的总和（基数），基数越大越能体现概率的准确性。&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;本例中v的总和为100，那么平板电脑对应的&nbsp;中奖概率就是1%，&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;如果v的总和是10000，那中奖概率就是万分之一了。&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;$prize_arr&nbsp;=&nbsp;array(&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;0&#39;&nbsp;=&gt;&nbsp;array(&#39;id&#39;=&gt;1,&#39;prize&#39;=&gt;&#39;平板电脑&#39;,&#39;v&#39;=&gt;1),&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;1&#39;&nbsp;=&gt;&nbsp;array(&#39;id&#39;=&gt;2,&#39;prize&#39;=&gt;&#39;数码相机&#39;,&#39;v&#39;=&gt;5),&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;2&#39;&nbsp;=&gt;&nbsp;array(&#39;id&#39;=&gt;3,&#39;prize&#39;=&gt;&#39;音箱设备&#39;,&#39;v&#39;=&gt;10),&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;3&#39;&nbsp;=&gt;&nbsp;array(&#39;id&#39;=&gt;4,&#39;prize&#39;=&gt;&#39;4G优盘&#39;,&#39;v&#39;=&gt;12),&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;4&#39;&nbsp;=&gt;&nbsp;array(&#39;id&#39;=&gt;5,&#39;prize&#39;=&gt;&#39;10Q币&#39;,&#39;v&#39;=&gt;22),&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;5&#39;&nbsp;=&gt;&nbsp;array(&#39;id&#39;=&gt;6,&#39;prize&#39;=&gt;&#39;下次没准就能中哦&#39;,&#39;v&#39;=&gt;50),&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;);&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;/*&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;每次&lt;a&nbsp;href=&quot;http://www.az1314.cn/&quot;&gt;前端&lt;/a&gt;页面的请求，PHP循环奖项设置数组，&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;通过概率计算函数get_rand获取抽中的奖项id。&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;最后输出中奖项数据给&lt;a&nbsp;href=&quot;http://www.az1314.cn/&quot;&gt;前端&lt;/a&gt;页面。&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;foreach&nbsp;($prize_arr&nbsp;as&nbsp;$key&nbsp;=&gt;&nbsp;$val)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$arr[$val[&#39;id&#39;]]&nbsp;=&nbsp;$val[&#39;v&#39;];&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;//array(6)&nbsp;{&nbsp;[1]=&gt;&nbsp;int(1)&nbsp;[2]=&gt;&nbsp;int(5)&nbsp;[3]=&gt;&nbsp;int(10)&nbsp;[4]=&gt;&nbsp;int(12)&nbsp;[5]=&gt;&nbsp;int(22)&nbsp;[6]=&gt;&nbsp;int(50)&nbsp;}var_dump($arr);&nbsp;//array(6)&nbsp;{&nbsp;[1]=&gt;&nbsp;int(1)&nbsp;[2]=&gt;&nbsp;int(5)&nbsp;[3]=&gt;&nbsp;int(10)&nbsp;[4]=&gt;&nbsp;int(12)&nbsp;[5]=&gt;&nbsp;int(22)&nbsp;[6]=&gt;&nbsp;int(50)&nbsp;}&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;$rid&nbsp;=&nbsp;get_rand($arr);&nbsp;//根据概率获取奖项id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;$res&nbsp;=&nbsp;$prize_arr[$rid-1][&#39;prize&#39;];&nbsp;//中奖项\r\n&nbsp;&nbsp;&nbsp;echo&nbsp;$res;</pre>',1468462297,1536651555),(27,23,1,'Nginx 开启gzip压缩(图片,文件,css)','nginx压缩,gzip压缩','gzip压缩可以帮助我们节省带宽了,它可以帮助我们把10Ｋ的文件压缩到3k大小了,这个比例是非常的高的了,下面来看Nginx 开启gzip压缩(图片,文件,css)的配置.\r\n','http://7xviiw.com1.z0.glb.clouddn.com/20160714101305595.jpg',0,9,255,1521,'<p>gzip压缩可以帮助我们节省带宽了,它可以帮助我们把10Ｋ的文件压缩到3k大小了,这个比例是非常的高的了,下面来看Nginx 开启gzip压缩(图片,文件,css)的配置.</p><h2>Vim打开Nginx配置文件</h2><pre class=\"brush:bash;toolbar:false\">vim&nbsp;/usr/local/nginx/conf/nginx.conf</pre><h2>找到如下一段,进行修改</h2><pre class=\"brush:bash;toolbar:false\">gzip&nbsp;on;&nbsp;&nbsp;\r\ngzip_min_length&nbsp;1k;&nbsp;\r\ngzip_buffers&nbsp;4&nbsp;16k;&nbsp;&nbsp;\r\n#gzip_http_version&nbsp;1.0;&nbsp;&nbsp;\r\ngzip_comp_level&nbsp;2;&nbsp;&nbsp;\r\ngzip_types&nbsp;text/plain&nbsp;application/x-&lt;a&nbsp;href=&quot;/js_a/js.html&quot;&nbsp;target=&quot;_blank&quot;&gt;javascript&lt;/a&gt;&nbsp;text/css&nbsp;application/xml&nbsp;text/javascript&nbsp;application/x-httpd-php&nbsp;image/jpeg&nbsp;image/gif&nbsp;image/png;&nbsp;&nbsp;\r\ngzip_vary&nbsp;off;&nbsp;&nbsp;\r\ngzip_disable&nbsp;&quot;MSIE&nbsp;[1-6]\\.&quot;;</pre><h2>解释一下</h2><p>第1行：开启Gzip</p><p>第2行：不压缩临界值，大于1K的才压缩，一般不用改</p><p>第3行：buffer，就是，嗯，算了不解释了，不用改</p><p>第4行：用了反向代理的话，末端通信是HTTP/1.0，有需求的应该也不用看我这科普文了；有这句的话注释了就行了，默认是HTTP/1.1</p><p>第5行：压缩级别，1-10，数字越大压缩的越好，时间也越长，看心情随便改吧</p><p>第6行：进行压缩的文件类型，缺啥补啥就行了，JavaScript有两种写法，最好都写上吧，总有人抱怨js文件没有压缩，其实多写一种格式就行了</p><p>第7行：跟Squid等缓存服务有关，on的话会在Header里增加&quot;Vary: Accept-Encoding&quot;，我不需要这玩意，自己对照情况看着办吧</p><p>第8行：IE6对Gzip不怎么友好，不给它Gzip了</p><h2>:wq保存退出，重新加载Nginx</h2><pre class=\"brush:bash;toolbar:false\">/usr/local/nginx/sbin/nginx&nbsp;-s&nbsp;reload</pre><h2>用curl测试Gzip是否成功开启</h2><pre class=\"brush:bash;toolbar:false\">curl&nbsp;-I&nbsp;-H&nbsp;&quot;Accept-Encoding:&nbsp;gzip,&nbsp;deflate&quot;&nbsp;&quot;http://www.111cn.net/&quot;&nbsp;\r\nHTTP/1.1&nbsp;200&nbsp;OK&nbsp;\r\nServer:&nbsp;nginx/1.0.15&nbsp;\r\nDate:&nbsp;Sun,&nbsp;26&nbsp;Aug&nbsp;2012&nbsp;18:13:09&nbsp;GMT&nbsp;\r\nContent-Type:&nbsp;text/html;&nbsp;charset=UTF-8&nbsp;\r\nConnection:&nbsp;keep-alive&nbsp;\r\nX-Powered-By:&nbsp;PHP/5.2.17p1&nbsp;\r\nX-Pingback:&nbsp;http://www.slyar.com/blog/xmlrpc.php&nbsp;\r\nContent-Encoding:&nbsp;gzip</pre><p>页面成功压缩.</p><pre class=\"brush:bash;toolbar:false\">curl&nbsp;-I&nbsp;-H&nbsp;&quot;Accept-Encoding:&nbsp;gzip,&nbsp;deflate&quot;&nbsp;&quot;http://www.ye111cn.nethemes/default/statics/css/lib.css&quot;&nbsp;\r\nHTTP/1.1&nbsp;200&nbsp;OK&nbsp;\r\nServer:&nbsp;nginx/1.0.15&nbsp;\r\nDate:&nbsp;Sun,&nbsp;26&nbsp;Aug&nbsp;2012&nbsp;18:21:25&nbsp;GMT&nbsp;\r\nContent-Type:&nbsp;text/css&nbsp;\r\nLast-Modified:&nbsp;Sun,&nbsp;26&nbsp;Aug&nbsp;2012&nbsp;15:17:07&nbsp;GMT&nbsp;\r\nConnection:&nbsp;keep-alive&nbsp;\r\nExpires:&nbsp;Mon,&nbsp;27&nbsp;Aug&nbsp;2012&nbsp;06:21:25&nbsp;GMT&nbsp;\r\nCache-Control:&nbsp;max-age=43200&nbsp;\r\nContent-Encoding:&nbsp;gzip</pre><p>css文件成功压缩</p><pre class=\"brush:bash;toolbar:false\">curl&nbsp;-I&nbsp;-H&nbsp;&quot;Accept-Encoding:&nbsp;gzip,&nbsp;deflate&quot;&nbsp;http://www.phpfensi.com&nbsp;/Themes/default/statics/js/jquery.min.js&quot;&nbsp;\r\nHTTP/1.1&nbsp;200&nbsp;OK&nbsp;\r\nServer:&nbsp;nginx/1.0.15&nbsp;\r\nDate:&nbsp;Sun,&nbsp;26&nbsp;Aug&nbsp;2012&nbsp;18:21:38&nbsp;GMT&nbsp;\r\nContent-Type:&nbsp;application/x-javascript&nbsp;\r\nLast-Modified:&nbsp;Thu,&nbsp;12&nbsp;Jul&nbsp;2012&nbsp;17:42:45&nbsp;GMT&nbsp;\r\nConnection:&nbsp;keep-alive&nbsp;\r\nExpires:&nbsp;Mon,&nbsp;27&nbsp;Aug&nbsp;2012&nbsp;06:21:38&nbsp;GMT&nbsp;\r\nCache-Control:&nbsp;max-age=43200&nbsp;\r\nContent-Encoding:&nbsp;gzip</pre><p>js文件成功压缩.</p><pre class=\"brush:bash;toolbar:false\">curl&nbsp;-I&nbsp;-H&nbsp;&quot;Accept-Encoding:&nbsp;gzip,&nbsp;deflate&quot;&nbsp;&quot;http://www.slyar.com/blog/wp-content/uploads/2012/08/2012-08-23_203542.png&quot;&nbsp;\r\nHTTP/1.1&nbsp;200&nbsp;OK&nbsp;\r\nServer:&nbsp;nginx/1.0.15&nbsp;\r\nDate:&nbsp;Sun,&nbsp;26&nbsp;Aug&nbsp;2012&nbsp;18:22:45&nbsp;GMT&nbsp;\r\nContent-Type:&nbsp;image/png&nbsp;\r\nLast-Modified:&nbsp;Thu,&nbsp;23&nbsp;Aug&nbsp;2012&nbsp;13:50:53&nbsp;GMT&nbsp;\r\nConnection:&nbsp;keep-alive&nbsp;\r\nExpires:&nbsp;Tue,&nbsp;25&nbsp;Sep&nbsp;2012&nbsp;18:22:45&nbsp;GMT&nbsp;\r\nCache-Control:&nbsp;max-age=2592000&nbsp;\r\nContent-Encoding:&nbsp;gzip</pre><p>图片成功压缩.</p>',1468462590,1536724531),(28,12,1,'PHP生成唯一订单号的6种方法','php生成订单号','PHP生成唯一订单号其实是非常的简单了，我们随便就可以整理多种生成方式了，这里整理了6种方式供各位参考。\r\n','http://7xviiw.com1.z0.glb.clouddn.com/20160714101906479.jpg',0,6,255,2914,'<p>PHP生成唯一订单号其实是非常的简单了我们随便就可以整理多种生成方式了，这里整理了6种方式供各位参考。</p><p>做商城类项目经常需要生成唯一订单号，下面来个汇总！</p><h2>方法一</h2><pre class=\"brush:php;toolbar:false\">return&nbsp;date(&#39;Ymd&#39;)&nbsp;.&nbsp;str_pad(mt_rand(1,&nbsp;99999),&nbsp;5,&nbsp;&#39;0&#39;,&nbsp;STR_PAD_LEFT);</pre><h2>方法二：正在使用</h2><pre class=\"brush:php;toolbar:false\">/**&nbsp;&nbsp;\r\n&nbsp;*&nbsp;&nbsp;\r\n&nbsp;*&nbsp;uniqid&nbsp;-&nbsp;官方是这样说的：&nbsp;&nbsp;\r\n&nbsp;*&nbsp;Gets&nbsp;a&nbsp;prefixed&nbsp;unique&nbsp;identifier&nbsp;based&nbsp;on&nbsp;the&nbsp;current&nbsp;time&nbsp;in&nbsp;microseconds.&nbsp;\r\n&nbsp;*/&nbsp;&nbsp;\r\nfunction&nbsp;build_order_no()&nbsp;&nbsp;\r\n{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;date(&#39;Ymd&#39;).&lt;a&nbsp;href=&quot;/tags.php/substr/&quot;&nbsp;target=&quot;_blank&quot;&gt;substr&lt;/a&gt;(implode(NULL,&nbsp;array_map(&#39;ord&#39;,&nbsp;str_split(substr(uniqid(),&nbsp;7,&nbsp;13),&nbsp;1))),&nbsp;0,&nbsp;8);&nbsp;&nbsp;\r\n}</pre><p>用uniqid获取一个基于当前的微秒数生成的唯一不重复的字符串（但是他的前7位貌似很久才会发生变动，所以不用考虑可删除），取其第8到13位。但是这个字符串里面有英文字母，咋办？</p><p>用ord获取他的ASCII码，所以就有了下一步：用str_split把这个字符串分割为数组，用array_map去操作（速度快点）。</p><p>然后返回的还是一个数组，KO，在用implode弄成字符串，但是字符长度不定，取前固定的几位，然后前面加上当前的年份和日期，这个方法生成的订单号，全世界不会有多少重复的。</p><p>当然，除非你把服务器时间往前调，但是调也不用怕，哥不相信他会在同一微秒内下两次订单，网络数据传输也要点时间的，即便你是在本地。</p><h2>方法三：以前使用</h2><pre class=\"brush:php;toolbar:false\">public&nbsp;function&nbsp;make_order($user_id)&nbsp;\r\n&nbsp;{&nbsp;\r\n&nbsp;&nbsp;return&nbsp;mt_rand(10,99)&nbsp;\r\n&nbsp;&nbsp;sprintf(&#39;%010d&#39;,time()&nbsp;-&nbsp;946656000)&nbsp;\r\n&nbsp;&nbsp;sprintf(&#39;%03d&#39;,&nbsp;(float)&nbsp;microtime()&nbsp;*&nbsp;1000)&nbsp;\r\n&nbsp;&nbsp;sprintf(&#39;%03d&#39;,&nbsp;(int)&nbsp;$user_id&nbsp;%&nbsp;1000);&nbsp;&nbsp;\r\n&nbsp;}</pre><h2>方法四</h2><pre class=\"brush:php;toolbar:false\">$yCode&nbsp;=&nbsp;array(&#39;A&#39;,&nbsp;&#39;B&#39;,&nbsp;&#39;C&#39;,&nbsp;&#39;D&#39;,&nbsp;&#39;E&#39;,&nbsp;&#39;F&#39;,&nbsp;&#39;G&#39;,&nbsp;&#39;H&#39;,&nbsp;&#39;I&#39;,&nbsp;&#39;J&#39;);&nbsp;&nbsp;\r\n$orderSn&nbsp;=&nbsp;$yCode[intval(date(&#39;Y&#39;))&nbsp;-&nbsp;2011]&nbsp;.&nbsp;strtoupper(dechex(date(&#39;m&#39;)))&nbsp;.&nbsp;date(&#39;d&#39;)&nbsp;.&nbsp;substr(time(),&nbsp;-5)&nbsp;.&nbsp;substr(microtime(),&nbsp;2,&nbsp;5)&nbsp;.&nbsp;sprintf(&#39;%02d&#39;,&nbsp;rand(0,&nbsp;99&nbsp;\r\n));</pre><h2>方法五：生成24位唯一订单号码</h2><pre class=\"brush:php;toolbar:false\">//生成24位唯一订单号码，格式：YYYY-MMDD-HHII-SS-NNNN,NNNN-CC，其中：YYYY=年份，MM=月份，DD=日期，HH=24格式小时，II=分，SS=秒，NNNNNNNN=随机数，CC=检查码&nbsp;\r\n&nbsp;&nbsp;@date_default_timezone_set(&quot;PRC&quot;);&nbsp;\r\n&nbsp;&nbsp;while(true){&nbsp;\r\n&nbsp;&nbsp;&nbsp;//订购日期&nbsp;\r\n&nbsp;&nbsp;&nbsp;$order_date&nbsp;=&nbsp;date(&#39;Y-m-d&#39;);&nbsp;\r\n&nbsp;&nbsp;&nbsp;//订单号码主体（YYYYMMDDHHIISSNNNNNNNN）&nbsp;\r\n&nbsp;&nbsp;&nbsp;$order_id_main&nbsp;=&nbsp;date(&#39;YmdHis&#39;)&nbsp;.&nbsp;rand(10000000,99999999);&nbsp;\r\n&nbsp;&nbsp;&nbsp;//订单号码主体长度&nbsp;\r\n&nbsp;&nbsp;&nbsp;$order_id_len&nbsp;=&nbsp;strlen($order_id_main);&nbsp;\r\n&nbsp;&nbsp;&nbsp;$order_id_sum&nbsp;=&nbsp;0;&nbsp;\r\n&nbsp;&nbsp;&nbsp;for($i=0;&nbsp;$i&lt;$order_id_len;&nbsp;$i++){&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$order_id_sum&nbsp;+=&nbsp;(int)(substr($order_id_main,$i,1));&nbsp;\r\n&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;//唯一订单号码（YYYYMMDDHHIISSNNNNNNNNCC）&nbsp;\r\n&nbsp;&nbsp;&nbsp;$order_id&nbsp;=&nbsp;$order_id_main&nbsp;.&nbsp;str_pad((100&nbsp;-&nbsp;$order_id_sum&nbsp;%&nbsp;100)&nbsp;%&nbsp;100,2,&#39;0&#39;,STR_PAD_LEFT);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;if($result&nbsp;=&nbsp;sqlite_query($db,&quot;SELECT&nbsp;*&nbsp;FROM&nbsp;orders&nbsp;WHERE&nbsp;order_id=&#39;$order_id&#39;&quot;)){&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if(sqlite_num_rows($result)&nbsp;==&nbsp;0){&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;}</pre><h2>方法六</h2><pre class=\"brush:php;toolbar:false\">/**&nbsp;&nbsp;&nbsp;\r\n*&nbsp;生成16位纯数字订单号&nbsp;&nbsp;&nbsp;\r\n*&nbsp;最大支持时间到&nbsp;2056-12-31&nbsp;23:59:59&nbsp;&nbsp;&nbsp;\r\n*&nbsp;&nbsp;&nbsp;\r\n*&nbsp;@access&nbsp;public&nbsp;&nbsp;&nbsp;\r\n*&nbsp;@return&nbsp;string&nbsp;&nbsp;\r\n//phpfensi.com&nbsp;\r\n*/&nbsp;&nbsp;&nbsp;\r\npublic&nbsp;static&nbsp;function&nbsp;getOrderSN()&nbsp;{&nbsp;&nbsp;\r\nreturn&nbsp;(date(&#39;y&#39;)&nbsp;+&nbsp;date(&#39;m&#39;)&nbsp;+&nbsp;date(&#39;d&#39;))&nbsp;.&nbsp;str_pad((time()&nbsp;-&nbsp;&lt;a&nbsp;href=&quot;/tags.php/strtotime/&quot;&nbsp;target=&quot;_blank&quot;&gt;strtotime&lt;/a&gt;(date(&#39;Y-m-d&#39;))),&nbsp;5,&nbsp;0,&nbsp;STR_PAD_LEFT)&nbsp;.&nbsp;substr(microtime(),&nbsp;2,&nbsp;6)&nbsp;.&nbsp;sprintf(&#39;%03d&#39;,&nbsp;rand(0,&nbsp;999));&nbsp;&nbsp;&nbsp;\r\n}</pre><p>目前在用的,基本保证不重复了,能用到2056年,觉得应该够了,以后有需求再扩展.</p>',1468463101,1536693273),(29,10,1,'PHP预定义常量DIRECTORY_SEPARATOR详解','php,DIRECTORY_SEPARATOR','DIRECTORY_SEPARATOR在php中我们最常见的就是cms系统中的全局变量了,下面我们一起来看一个PHP预定义常量DIRECTORY_SEPARATOR的使用例子,具体如下所示.\r\nDIRECTORY_SEPARATOR是一个显示系统分隔符的命令,DIRECTORY_SEPARATOR是PHP的内部常量,不需要任何定义与包含即可直接使用.','http://7xviiw.com1.z0.glb.clouddn.com/20160714102558845.jpg',0,6,255,819,'<p>DIRECTORY_SEPARATOR在php中我们最常见的就是cms系统中的全局变量了,下面我们一起来看一个PHP预定义常量DIRECTORY_SEPARATOR的使用例子,具体如下所示.</p><p>DIRECTORY_SEPARATOR是一个显示系统分隔符的命令,DIRECTORY_SEPARATOR是PHP的内部常量,不需要任何定义与包含即可直接使用.</p><p>众所周知,在windows下路径分隔符是\\,当然\\在部分系统上也是可以正常运行的,在linux上路径的分隔符是/,这就导致了一个问题,比如开发机器是windows,有一个图片上传程序,调试机器上指定的上传文件保存目录是:</p><pre class=\"brush:php;toolbar:false\">define(‘ROOT’,dirname(__FILE__).”upload”)</pre><p>在本地调试都很正常,但是上传到linux服务器的时候会发现会出错.<br/></p><p>这个问题就是出在文件的分隔符上,windows上习惯性的使用作为文件分隔符,但是在linux上人家是不认识这个标识的,人家只认识/,于是就要引入下面这个php内置变量了:DIRECTORY_SEPARATOR.</p><p>上面的写法可以改写为以下无错写法:</p><pre class=\"brush:php;toolbar:false\">define(‘ROOT’,&nbsp;dirname(__FILE__).DIRECTORY_SEPARATOR.”upload”);</pre><p>这样就可以确保不会出错了.</p><p>例如discuz里面是这样写的:</p><pre class=\"brush:php;toolbar:false\">define(‘S_ROOT’,&nbsp;dirname(__FILE__).DIRECTORY_SEPARATOR);</pre><p>回到问题本身上,DIRECTORY_SEPARATOR是一个返回跟操作系统相关的路径分隔符的php内置命令,在windows上返回,而在linux或者类unix上返回/,就是这么个区别,通常在定义包含文件路径或者上传保存目录的时候会用到.</p><pre class=\"brush:php;toolbar:false\">define(&#39;ROOT&#39;,&nbsp;dirname(__FILE__).&quot;\\upload&quot;);</pre><p>在本地调试都很正常,但是上传到linux服务器后就会出错,所以如上代码严谨的写法为:</p><pre class=\"brush:php;toolbar:false\">define(&#39;ROOT&#39;,&nbsp;dirname(__FILE__).DIRECTORY_SEPARATOR.&quot;upload&quot;);</pre><p>提示:可以用函数get_defined_constants()来获取所有PHP常量,例如:</p><pre class=\"brush:php;toolbar:false\">print_r(get_defined_constants());//get_defined_constants()返回所有常量数组</pre>',1468463248,1536645908),(30,12,1,'php开发中常用的正则验证小结','php,正则','在PHP开发程序的过程中，经常会有很多表达要处理，而验证表单填写数据的合法性则是必须要考虑到的事，防治无效的数据对数据库造成影响。','http://7xviiw.com1.z0.glb.clouddn.com/20160729154731153.jpeg',0,5,255,817,'<h2>前言</h2><p>在PHP开发程序的过程中，经常会有很多表达要处理，而验证表单填写数据的合法性则是必须要考虑到的事，防治无效的数据对数据库造成影响。</p><p>关于正则表达式的语法，网上有很多教程和手册，讲的也很详细，因为本人对正则的语法研究也不是很透彻，这里就从我实际开发中常用到的正则表达式说起，贴出代码附上简短的说明，大家可以参考，有什么不对的地方欢迎指正、交流。</p><h2>验证用户名</h2><pre class=\"brush:php;toolbar:false\">preg_match(&quot;/^[0-9a-zA-Z_]{2,20}$/&quot;,$name)</pre><p>这个正则表达式是要验证由字母、数字、下划线组成的2～20个字符之间的用户名。 其中^ $分别代表匹配的字符的开始和结束位置。[ ]里表示要匹配的表达式。{ }是限定符号，这里限定要匹配的字符串在2～20个字符之间。</p><p>这个正则表达式挺具有普遍性的，大家可以根据这个改自己需要的正则表达式。</p><h2>验证邮箱</h2><pre class=\"brush:php;toolbar:false\">preg_match(&quot;/^[\\w+\\.]+@\\w+\\.\\w+$/&quot;,$email)</pre><p>w 和 [0-9a-zA-Z_]是等价的，表示匹配字母数字或者下划线。＋表示匹配前面子表达式一次或者多次。.就是匹配.这个字符。</p><h2>验证非负整数</h2><pre class=\"brush:php;toolbar:false\">preg_match(&quot;/^[1-9]*[0-9]+$/&quot;,$figure)</pre><p>+表示匹配前面表达式一次或多次。＊表示匹配前面表达式0次或多次。 验证负整数在前面叫一个 -。</p><h2>验证浮点数</h2><pre class=\"brush:php;toolbar:false\">preg_match(&quot;/^(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*))$/&quot;,$float)</pre><p>｜表示或。</p><h2>验证端口号</h2><pre class=\"brush:php;toolbar:false\">preg_match(&quot;/^([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/&quot;,$port)</pre><p>端口号的合法范围是：1～65535。｜表示或，d等价于［0-9］表示匹配一个数字字符。最后把65535按每位来匹配。</p><h2>验证域名<br/></h2><pre class=\"brush:php;toolbar:false\">preg_match(&quot;/^((https?|ftp|news):\\/\\/)?([a-z]([a-z0-9\\-]*[\\.。])+([a-z]{2}|aero|arpa|biz|com|coop|edu|gov|info|int|jobs|mil|museum|name|nato|net|org|pro|travel)|(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))(\\/[a-z0-9_\\-\\.~]+)*(\\/([a-z0-9_\\-\\.]*)(\\?[a-z0-9+_\\-\\.%=&amp;]*)?)?(#[a-z][a-z0-9_]*)?$/&quot;,$domain)</pre><p>这个域名的匹配有点长，但其中用到的也都是上面提到的那些符号可以完成的功能，就是看起来表达式比较长。</p><h2>小结</h2><p>这些都是我自己在开发过程中用过的正则表达式，但难免有的测试不到位，可能会有一些小错误导致在某些验证方面有些缺陷，大家可以互相交流，今天先写这些，日后有用到的再补充，也欢迎大家来补充。</p>',1469778602,1536476677),(31,15,1,'jQuery操作鼠标事件大全','jquery','现在jquery非常流向，面对强大的用户体验特效，根本就离不开鼠标事件，我们下面将详细介绍一下在jquery中所有鼠标时间操作。','http://7xviiw.com1.z0.glb.clouddn.com/20160802161418177.jpg',0,5,255,955,'<p>现在jquery非常流向，面对强大的用户体验特效，根本就离不开鼠标事件，我们下面将详细介绍一下在jquery中所有鼠标时间操作。</p><h2>一、click事件：</h2><p>click事件于用户在元素敲击鼠标左键，并在相同元素上松开左键时触发。</p><pre class=\"brush:js;toolbar:false\">$(&#39;p&#39;).click(function(){\r\n　　&nbsp;&nbsp;&nbsp;&nbsp;alert(&#39;click&nbsp;function&nbsp;is&nbsp;running&nbsp;!&#39;);\r\n　　});</pre><h2>二、dbclick事件：</h2><p>dbclick事件在用户完成迅速连续的两次点击之后触发，双击的速度取决于操作系统的设置。一般双击事件在页面中不经常使用。</p><p>$(&#39;p&#39;).dbclick(function(){</p><p>　　&nbsp;&nbsp;&nbsp;&nbsp;alert(&#39;dbclick&nbsp;function&nbsp;is&nbsp;running&nbsp;!&#39;);</p><p>　　});</p><h2>三、mousedown事件：</h2><p>mousedown事件在用户敲击鼠标键时触发，跟keydown事件不一样，该事件仅在按下鼠标时触发。</p><pre class=\"brush:js;toolbar:false\">$(&#39;p&#39;).mousedown(function(){\r\n　　&nbsp;&nbsp;&nbsp;&nbsp;alert(&#39;mousedown&nbsp;function&nbsp;is&nbsp;running&nbsp;!&#39;);\r\n　　});</pre><h2>四、mouseup事件：</h2><p>mouseup事件在用户松开鼠标时触发，如果在与按下鼠标的元素相同元素上松开，那么click事件也会触发。</p><pre class=\"brush:js;toolbar:false\">$(&#39;p&#39;).mouseup(function(){\r\n　　&nbsp;&nbsp;&nbsp;&nbsp;alert(&#39;mouseup&nbsp;function&nbsp;is&nbsp;running&nbsp;!&#39;);\r\n　　}).click(function(){\r\n　　&nbsp;&nbsp;&nbsp;&nbsp;alert(&#39;click&nbsp;function&nbsp;is&nbsp;running&nbsp;too&nbsp;!&#39;);\r\n　　});</pre><h2>五、mouseover事件：</h2><p>mouseover事件于用户把鼠标从一个元素移动到另外一个元素上时触发，如果需要知道来自那个元素可以使用，relatedTagrget属性。</p><h2>六、mouseout事件：</h2><p>mouseout事件于用户把鼠标移出一个元素时触发，这包括从父元素移动到子元素上，或者使用键盘跳到元素上。</p><p>(5)和(6)这两个事件一般不常用，很难实现与用户的交互，也就是说不易捕获用户事件。</p><h2>七、mouseenter事件：</h2><p>mouseenter事件是在用户光标进入元素上时触发。</p><pre class=\"brush:js;toolbar:false\">$(&#39;p&#39;).mouseenter(function(){\r\n　　&nbsp;&nbsp;&nbsp;&nbsp;alert(&#39;mouseenter&nbsp;function&nbsp;is&nbsp;running&nbsp;!&#39;);\r\n　　});</pre><h2>八、mouseleaver事件：</h2><p>mouseleaver事件是在用户的光标离开元素时触发。</p><pre class=\"brush:js;toolbar:false\">$(&#39;p&#39;).mouseleaver(function(){\r\n　　&nbsp;&nbsp;&nbsp;&nbsp;alert(&#39;mouseleaver&nbsp;function&nbsp;is&nbsp;running&nbsp;!&#39;);\r\n　　});</pre><p>(7)和(8)这两个事件一般连起来使用，在jQuery中可以使用hover这个函数来代替这两个函数。</p><pre class=\"brush:js;toolbar:false\">$(&#39;p&#39;).hover(function(){\r\n　　&nbsp;&nbsp;&nbsp;&nbsp;alert(&#39;mouseenter&nbsp;function&nbsp;is&nbsp;running&nbsp;!&#39;);\r\n　　},function(){\r\n　　&nbsp;&nbsp;&nbsp;&nbsp;alert(&#39;mouseleaver&nbsp;function&nbsp;is&nbsp;running&nbsp;!&#39;);\r\n　　});</pre>',1470125933,1536695626),(32,24,1,'学习SEO可能经历的五个阶段','seo优化','最近看了一些有关SEO的书籍和视频，发现了一些问题和技巧，我们可以把学习SEO分为5个阶段，只不过每个人学习的过程，所走的路程不一样罢了','http://7xviiw.com1.z0.glb.clouddn.com/20160803141150215.jpg',0,7,255,843,'<p>最近看了一些有关SEO的书籍和视频，发现了一些问题和技巧，我们可以把学习SEO分为5个阶段，只不过每个人学习的过程，所走的路程不一样罢了，而下面便是我改写学习SEO的历程，每天上班的第一件事就是打开站长工具，查看网站排名，查看关键词排名的升降问题，然后就接下来下面的工作：每天写文章，发外链，找友情链接，很快一天时间就这样过去了，但是网站排名却没有得到提升，流量还是那样不动，且说不但浪费精力，而且也没有收入，这就是我之前的经历，也是大部分SEOER的经历。现在我来分析一下新手学习SEO的几个阶段，希望大家能坚持，相信成功就在我们眼前。</p><h2>第一阶段，盲目天真</h2><p>刚开始我们都不知道SEO是什么，当通过简单的了解之后，发现SEO很奇妙，也很重要，能把自己的网站排到搜索引擎的前面，看到排名慢慢的上去，自己心中多了几分喜悦。所以自己也打算把SEO学懂，因此开始购买大量有关SEO的书籍，开始下载视频，开始模仿资料所述，也开始不断的尝试，再这就是看到网上许多广告，说是几天几天就可以精通，就可以把权重PR提升到多少，等等这些诱人的广告更加激起自己的好奇心，于是就开始了自己SEO的旅途，却不知道里面水的深浅，自认为将来自己也会是这个样子的。</p><h2>第二阶段，梦想破灭</h2><p>从第一阶段开始努力，坚持每天做SEO以后应做的事情，写文章，发外链，做优化，天天盯着网站的排名。可是时间慢慢地过去，才发现自己耗费了许多时间和精力，却换不来流量的提升。而且再加上种种时间的枯燥乏味，比如，找不到发外链的地方，发外链太枯燥，原创文章没法写下去了，肚子里没有一点墨水了。这个时候开始怀疑自己做的是错的，自己学的是没有实战用途的seo技术。开始怀疑自己老师当时是不是有所保留，或者根本就是在吹牛，再次提起seo就是无限鄙视或者一笑而过。</p><h2>第三阶段,坚持或放弃</h2><p>决定你成功和失败或许就在这个阶段，很多人就是因为第二阶段，就开始丧气，觉得以其浪费时间在着，还不如把这些时间去做别的事情，说不定还能挣点钱什么的。也有人的慢慢发现一些技巧，对于学SEO的兴趣也不段提升，于是选择了坚持，选择了继续走下去，而前者往往就走向了失败，而后者将会走向成功。当然，这也不能说绝对的，也是因人而异吧。</p><h2>第四阶段，重燃战火</h2><p>当你失去信心的时候，想到的并不是放弃，而是迎难而上，努力填补自己的不足，不再抱怨seo没法做，而是积极的学习，每天补充自己的知识量。渐渐总结出自己的看法，然后将自己的想法付诸于实践，通过实践来检验自己的不足。比如，自己当时死在了写文章上面，那么，这个阶段你会花更多的经历去写文章，去研究如何写文章，比如你对一些站内优化不理解，你会主动去在网上找一些站内优化的资料。总之，这个阶段，是你最重要的积累阶段。</p><h2>第五阶段，成功，分享</h2><p>宠辱不惊,闲看庭前花开花落;去留无意,漫随天外云卷云舒。这正是你这个阶段的一个写照。通过盲目，打击，补足，你俨然已经获得了成功，进而愿意将自己的知识分享出来，给更多的处在尴尬位置的朋友一份讲解，一份帮助。并且通过这个方法扩大自己的圈子，结交更多的seo朋友。也就是个人营销。</p>',1470204775,1536686153),(33,11,1,'PHP的命名空间讲解','php命名空间','PHP命名空间是PHP5.3开始支持。本篇讲解PHP命名空间用法和PHP命名空间详解。它的诞生使的我们在一个文件中可以使用多个同名的类而不冲突。','http://7xviiw.com1.z0.glb.clouddn.com/20160803141333503.jpg',0,5,255,828,'<p>PHP命名空间是PHP5.3开始支持。本篇讲解PHP命名空间用法和PHP命名空间详解。它的诞生使的我们在一</p><p>个文件中可以使用多个同名的类而不冲突。</p><p>好处：我们的项目有一个记录日志文件的类，叫做Log。然后我们又必须要引入另一个代码包，这个代码</p><p>包里也有一个叫做Log的类。那么在一个文件中，我们记录日志的又需要给两个类都写一条日志。可以类</p><p>同名了，怎么办？这个时候，命名空间应运而生。在Java等语言中命名空间是很早就已经提供了支持，</p><p>而我大PHP一直到5.3才对命名空间提供了支持。</p><h2>示例一</h2><p>文件index.php</p><pre class=\"brush:php;toolbar:false\">&lt;?php\r\ninclude&nbsp;&#39;test.php&#39;;\r\nclass&nbsp;index{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;a(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;basename(__FILE__);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;&lt;br&gt;&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;__CLASS__&nbsp;.&nbsp;&#39;&nbsp;:&nbsp;&#39;&nbsp;.&nbsp;__METHOD__;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n$obj&nbsp;=&nbsp;new&nbsp;index();\r\n$obj-&gt;a();\r\necho&nbsp;&#39;&lt;br&gt;&#39;;\r\n$obj1&nbsp;=&nbsp;new&nbsp;test\\index();\r\n$obj1-&gt;a();\r\n?&gt;</pre><p>文件test.php</p><pre class=\"brush:php;toolbar:false\">&lt;?php\r\nnamespace&nbsp;test;\r\nclass&nbsp;index{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;a(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;basename(__FILE__);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;&lt;br&gt;&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;__CLASS__&nbsp;.&nbsp;&#39;&nbsp;:&nbsp;&#39;&nbsp;.&nbsp;__METHOD__;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n?&gt;</pre><p>我们给index.php不设置命名空间，对test.php设置命名空间，名为test。运行index.php。</p><p>结果：</p><p>index.php</p><p>index : index::a</p><p>test.php</p><p>test\\index : test\\index::a</p><p>我们看到了，同名的类也可以运行而不冲突了。</p><h2>示例二</h2><p>文件index.php</p><pre class=\"brush:php;toolbar:false\">&lt;?php\r\nnamespace&nbsp;index;\r\ninclude&nbsp;&#39;test.php&#39;;\r\nclass&nbsp;index{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;a(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;basename(__FILE__);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;&lt;br&gt;&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;__CLASS__&nbsp;.&nbsp;&#39;&nbsp;:&nbsp;&#39;&nbsp;.&nbsp;__METHOD__;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n$obj&nbsp;=&nbsp;new&nbsp;index();\r\n$obj-&gt;a();\r\necho&nbsp;&#39;&lt;br&gt;&#39;;\r\n$obj1&nbsp;=&nbsp;new&nbsp;\\test\\index();\r\n$obj1-&gt;a();\r\n?&gt;</pre><p>文件test.php</p><pre class=\"brush:php;toolbar:false\">&lt;?php\r\nnamespace&nbsp;test;\r\nclass&nbsp;index{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;a(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;basename(__FILE__);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;&lt;br&gt;&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;__CLASS__&nbsp;.&nbsp;&#39;&nbsp;:&nbsp;&#39;&nbsp;.&nbsp;__METHOD__;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n?&gt;</pre><p>我们给index.php设置命名空间，名为index，对test.php设置命名空间，名为test。运行index.php。</p><p>结果：</p><p>index.php</p><p>index\\index : index\\index::a</p><p>test.php</p><p>test\\index : test\\index::a</p><p>比较示例一和二，不对index.php设置命名空间，即该文件是整个PHP全局命名空间下面的一个文件，那么使用test\\index()即可，如果对index.php设置命名空间，即在其他的命名空间中使用命名空间，就要多一个“\\”，就要使用\\test\\index()。</p><h2>示例三</h2><p>文件index.php</p><pre class=\"brush:php;toolbar:false\">&lt;?php\r\nnamespace&nbsp;index;\r\ninclude&nbsp;&#39;namespace.php&#39;;\r\nuse&nbsp;\\test\\test1\\test2&nbsp;as&nbsp;test2;\r\nclass&nbsp;index{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;a(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;basename(__FILE__);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;&lt;br&gt;&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;__CLASS__&nbsp;.&nbsp;&#39;&nbsp;:&nbsp;&#39;&nbsp;.&nbsp;__METHOD__;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n$obj&nbsp;=&nbsp;new&nbsp;index();\r\n$obj-&gt;a();\r\necho&nbsp;&#39;&lt;br&gt;&#39;;\r\n$obj1&nbsp;=&nbsp;new&nbsp;\\test\\test1\\test2\\index();\r\n$obj1-&gt;a();\r\necho&nbsp;&#39;&lt;br&gt;&#39;;\r\n$obj1&nbsp;=&nbsp;new&nbsp;test2\\index();\r\n$obj1-&gt;a();</pre><p>文件test.php</p><pre class=\"brush:php;toolbar:false\">&lt;?php\r\nnamespace&nbsp;test\\test1\\test2;\r\nclass&nbsp;index{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;a(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;basename(__FILE__);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;&lt;br&gt;&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;__CLASS__&nbsp;.&nbsp;&#39;&nbsp;:&nbsp;&#39;&nbsp;.&nbsp;__METHOD__;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p>结果：</p><p>index.php</p><p>index\\index : index\\index::a</p><p>test.php</p><p>test\\test1\\test2\\index : test\\test1\\test2\\index::a</p><p>test.php</p><p>test\\test1\\test2\\index : test\\test1\\test2\\index::a</p><p>这说明了什么？别名！用过SQL吧。</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;COUNT(*)&nbsp;as&nbsp;`count`&nbsp;from&nbsp;`tebleName`</pre><p>嗯，一个意思。\\test\\test1\\test2这个名字太长了，就别名为test2就好了。使用了use之后呢，这个命名空间就想到于是在index这个命名空间下面了，而不是全局命名空间的一员了，所以使用test2\\index()，而不是\\test2\\index()。</p><p>别名时在PHP代码编译的时候执行的，而变量的解析则要更晚。也就是说不能对变量运用use关键字。示例如下（摘自官方手册示例）：</p><pre class=\"brush:php;toolbar:false\">&lt;?php\r\nuse&nbsp;My\\Full\\Classname&nbsp;as&nbsp;Another,&nbsp;My\\Full\\NSname;\r\n$obj&nbsp;=&nbsp;new&nbsp;Another;&nbsp;//&nbsp;实例化一个&nbsp;My\\Full\\Classname&nbsp;对象\r\n$a&nbsp;=&nbsp;&#39;Another&#39;;\r\n$obj&nbsp;=&nbsp;new&nbsp;$a;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;实际化一个&nbsp;Another&nbsp;对象</pre>',1470205003,1536686267),(34,11,1,'phpQuery—基于jQuery的PHP实现','php,php采集','Query的选择器之强大是有目共睹的，phpQuery 让php也拥有了这样的能力，它就相当于服务端的jQuery。','http://7xviiw.com1.z0.glb.clouddn.com/20160830162258452.jpg',0,5,255,960,'<p>Query的选择器之强大是有目共睹的，phpQuery 让php也拥有了这样的能力，它就相当于服务端的jQuery。</p><h2>先来看看官方简介</h2><pre class=\"brush:php;toolbar:false\">phpQuery&nbsp;is&nbsp;a&nbsp;server-side,&nbsp;chainable,&nbsp;CSS3&nbsp;selector&nbsp;driven&nbsp;Document&nbsp;Object&nbsp;Model&nbsp;\r\n(DOM)&nbsp;API&nbsp;based&nbsp;on&nbsp;jQuery&nbsp;JavaScript&nbsp;Library.\r\nLibrary&nbsp;is&nbsp;written&nbsp;in&nbsp;PHP5&nbsp;and&nbsp;provides&nbsp;additional&nbsp;Command&nbsp;Line&nbsp;Interface&nbsp;(CLI).</pre><h2>存在的意义</h2><p>我们有时需要抓取一个网页的内容，但只需要特定部分的信息，通常会用正则来解决，这当然没有问题。正则是一个通用解决方案，但特定情况下，往往有更简单快 捷的方法。比如你想查询一个编程方面的问题，当然可以使用Google，但stackoverflow 作为一个专业的编程问答社区，会提供给你更多，更靠谱的答案。</p><h2>对于html页面，不应该使用正则的原因主要有3个</h2><p>1、编写条件表达式比较麻烦&nbsp;</p><p>尤其对于新手，看到一堆”不知所云”的字符评凑在一起，有种脑袋都要炸了的感觉。如果要分离的对象没有太明显的特征，正则写起来更是麻烦。</p><p>2、效率不高&nbsp;</p><p>对于php来说，正则应该是没有办法的办法，能通过字符串函数解决的，就不要劳烦正则了。用正则去处理一个30多k的文件，效率不敢保证。</p><p>3、有phpQuery&nbsp;</p><p>如果你使用过jQuery，想获取某个特定元素应该是轻而易举的事情，phpQuery让这成为了可能。</p><h2>浅析phpQuery</h2><p>phpQuery是基于php5新添加的DOMDocument。而DOMDocument则是专门用来处理html/xml。它提供了强大xpath选 择器及其他很多html/xml操作函数，使得处理html/xml起来非常方便。那为什么不直接使用呢？这个，去看一下官网的函数列表 就知道了，如果对自己的记忆力很有信心， 不妨一试。&nbsp;</p><pre class=\"brush:php;toolbar:false\">&lt;?&nbsp;&nbsp;\r\ninclude&nbsp;&#39;phpQuery.php&#39;;&nbsp;&nbsp;\r\nphpQuery::newDocumentFile(&#39;http://job.blueidea.com&#39;);&nbsp;&nbsp;\r\n$companies&nbsp;=&nbsp;pq(&#39;#hotcoms&nbsp;.coms&#39;)-&gt;find(&#39;div&#39;);&nbsp;&nbsp;\r\nforeach($companies&nbsp;as&nbsp;$company)&nbsp;&nbsp;\r\n{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;echo&nbsp;pq($company)-&gt;find(&#39;h3&nbsp;a&#39;)-&gt;text().&quot;&lt;br&gt;&quot;;&nbsp;&nbsp;\r\n}</pre><h2>小结</h2><p>pq()就像jQuery里的$()</p><p>基本上jQuery的选择器都可以用在phpQuery上，只要把’.&#39;变成’-&gt;’</p><p>phpQuery提供了好几种载入文件的方法，有的使用字符串，有的使用文件(包括url)，选 择的时候要注意</p><p>基本上这一页 就很能说明问题了</p><h2>其他解析器</h2><p>simplehtmldom 也是个不错的html解析器，使用起来也挺方便，是基 于正则的，所以没有phpQuery那么强大，如果没有太高的要求，也基本够用了。</p><p>yql 是yahoo出的一款使用类似SQL的语言，来获取相应的数据，也很强大，无须任何类 库，可以直接调用，支持xpath，如果对SQL语句比较熟悉的话，可以考虑yql。</p>',1472545495,1536686021),(35,12,1,'基于php&运算符的巧妙应用','php','&:and，按位与。以$a & $b为例，将$a和$b转化为二进制后，都为1的位设为1。','http://7xviiw.com1.z0.glb.clouddn.com/20160830163645876.jpg',0,5,255,1034,'<h2>语法</h2><p>&amp;:and，按位与。以$a &amp; $b为例，将$a和$b转化为二进制后，都为1的位设为1。</p><p>程序</p><pre class=\"brush:php;toolbar:false\">$a&nbsp;=&nbsp;6;\r\n$b&nbsp;=&nbsp;3;\r\nvar_dump($a&nbsp;&amp;&nbsp;$b);</pre><p>输出:int(2)</p><h2>原理</h2><p>$a = 6转化为2进制为110</p><p>$b = 3转化为2进制为11</p><p>$a &amp; $b即是 110 与 11</p><p>将$a和$b中都为1的位设为1,位数不够的补0.即110 与 011</p><p>运算结果010,转化为十进制结果为2</p><h2>应用</h2><p>需求：</p><p>这是一个设置消息提醒的功能。我们假设这是一个blog系统，用户希望有人收藏自己的文章后，可以得到一个消息提醒。 这里有三种提醒方式：邮箱提醒、短信提醒、微信公众号提醒。 这里用户可以通过开关按钮控制某种提醒方式是开启还是关闭。 可以参考以下表格：</p><p><img src=\"/ueditor/php/upload/image/20160830/1472545999592432.png\" title=\"1472545999592432.png\" alt=\"QQ图片20160830162209.png\"/></p><p>实现:</p><p>1、数据库设计，表名（remind）：</p><p><img src=\"/ueditor/php/upload/image/20160830/1472546031123150.png\" title=\"1472546031123150.png\" alt=\"QQ图片20160830162312.png\"/></p><p>2、在Remind Model中设置执行操作的提醒方式类型：</p><pre class=\"brush:php;toolbar:false\">cosnt&nbsp;REMIND_NO&nbsp;=&nbsp;0;//关闭所有的提醒&nbsp;\r\ncosnt&nbsp;REMIND_EMAIL&nbsp;=&nbsp;1;//邮箱提醒&nbsp;2的0次方&nbsp;&nbsp;转化为二进制是：1\r\ncosnt&nbsp;REMIND_SMS&nbsp;=&nbsp;2;//短信提醒&nbsp;2的1次方&nbsp;&nbsp;&nbsp;&nbsp;转化为二进制是：10\r\ncosnt&nbsp;REMIND_WECHAT&nbsp;=&nbsp;4;//微信公众号提醒&nbsp;2的2次方&nbsp;转化为二进制是：100</pre><p>如果有新的提醒方式值应为4、8、16，依次类推，2的n次方。</p><p><strong>仔细观察二进制转化后</strong></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>email第一位是1，sms第二位是1，wechat第三位是1.</p></li><li><p>即email占领了第一位、sms占领了第二位、wechat占领了第三位</p></li><li><p>1，代表开启提醒；0，代表关闭提醒</p></li><li><p>如果第一位是1，表示开启邮箱提醒；如果第一位是0，表示关闭邮箱提醒</p></li></ul><p><strong>假设用户希望有人评论他的文章时，收到来自系统的提醒</strong></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>只开启邮箱提醒，那数据库中commented字段对应的值应是：1；转化为二进制：1</p></li><li><p>只开启短信提醒，那数据库中commented字段对应的值应是：2；转化为二进制：10</p></li><li><p>只开启微信公众号提醒，那数据库中commented字段对应的值应是：4；转化为二进制：100</p></li><li><p>如果开启邮箱提醒和短信提醒，那数据库中commented字段对应的值应是：1+2=3；转化为二进制：11</p></li><li><p>如果开启邮箱提醒和微信公众号提醒，那数据库中commented字段对应的值应是：1+4=5；转化为二进制：101</p></li><li><p>如果开启短信提醒和微信公众号提醒，那数据库中commented字段对应的值应是：2+4=6；转化为二进制：110</p></li><li><p>如果开启所有提醒，那数据库中commented字段对应的值应是：1+2+4=7；转化为二进制：111</p></li></ul><p><strong>重点来了，前方高能，请注意啦</strong></p><p>3、控制器中写具体业务逻辑：</p><p><strong>用户希望有人关注他后，可以通过邮箱提醒他，所以用户开启了邮箱提醒：</strong></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>前端传值：[&#39;option&#39;=&gt;&#39;followed&#39;,&#39;type&#39;=&gt;&#39;email&#39;];</p></li><li><p>后端接收到参数，从数据库中找到当前用户的这一条数据,得知followed字段值为0；</p></li><li><p>email对应的值为1，进行&amp;运算，判断email提醒是否开启</p></li><li><p>1&amp;0=0,所以未开启，那我们要开启email提醒，此时followed＝0+1=1；</p></li></ul><p><strong>后来用户觉得短信提醒比较直接，所以又开启了短信提醒：</strong></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>前端传值：[&#39;option&#39;=&gt;&#39;followed&#39;,&#39;type&#39;=&gt;&#39;sms&#39;];</p></li><li><p>后端接收到参数，从数据库中找到当前用户的这一条数据,得知followed字段值为1；</p></li><li><p>sms对应的值为2，进行&amp;运算，判断sms提醒是否开启</p></li><li><p>2&amp;1=0,所以未开启，那我们要开启sms提醒，此时followed＝2+1=3；</p></li></ul><p><strong>后来该用户越来越厉害，每天关注他的人特别多，每天都收到很多消息，所以他又想关闭短信提醒：</strong></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>前端传值：[&#39;option&#39;=&gt;&#39;followed&#39;,&#39;type&#39;=&gt;&#39;sms&#39;];</p></li><li><p>后端接收到参数，从数据库中找到当前用户的这一条数据,得知followed字段值为3；</p></li><li><p>sms对应的值为2，进行&amp;运算，判断sms提醒是否开启</p></li><li><p>2&amp;3=2,所以已开启，那我们要关闭sms提醒，此时followed＝3-2=1；</p></li></ul><p><strong>部分程序代码：</strong></p><pre class=\"brush:php;toolbar:false\">$option&nbsp;=&nbsp;$GET[&#39;option&#39;];//提醒操作,由前端传来的值\r\n$type&nbsp;=&nbsp;$GET[&#39;type&#39;];//提醒方式，由前端传来的值\r\n$remind&nbsp;=&nbsp;Remind::model()-&gt;find(1);//根据条件，在数据库中找到的一条记录\r\n//&nbsp;如果是提醒方式一\r\nif&nbsp;($type&nbsp;==&nbsp;&quot;sms&quot;)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($remind－&gt;$option&nbsp;&amp;&nbsp;Remind::REMIND_SMS)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;true&nbsp;代表已开启sms提醒，此时应关闭sms提醒\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$remind－&gt;$option&nbsp;-=&nbsp;Remind::REMIND_SMS;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;if&nbsp;(!($remind－&gt;$option&nbsp;&amp;&nbsp;Remind::REMIND_SMS))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;false&nbsp;代表已关闭sms提醒，此时应开启sms提醒\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$remind－&gt;$option&nbsp;+=&nbsp;Remind::REMIND_SMS;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><h2>总结</h2><p>采用&amp;运算的好处：</p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>减少了数据库设计的复杂性，一张表即可搞定；不用一张表纪录操作，另一张表纪录提醒方式，然后再关联；</p></li><li><p>减少前端的判断，前端只需将当前的操作和其对应的值传给后端即可。</p></li></ul><h2>扩展</h2><p><strong>判断某int型变量是奇数还是偶数</strong></p><p>以$a为例</p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>$a &amp; 1 ＝ 0，偶数</p></li><li><p>$a &amp; 1 = 1,奇数</p></li></ul><p>当$a ＝ 9时：</p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>$a &amp; 1转化为2进制，1001&amp;0001</p></li><li><p>结果为0001,转化为十进制为，1，所以是奇数</p></li></ul><p>当$a = 16时：</p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p>$a &amp; 1转化为2进制，10000&amp;00001</p></li><li><p>结果为00000,转化为十进制为，0，所以是偶数</p></li></ul><p><strong>仔细观察，将十进制转化为二进制，当第一位为1的都是奇数，第一位为0的都是偶数</strong></p>',1472546212,1536705811),(36,12,1,'php获取当月天数及当月第一天及最后一天、上月第一天及最后一天实现方法','php时间函数,php获取时间','在做查询过程中,例如要实现查上个月从第一天到最后一天的佣金(提成),那我们在程序实现过程中就要让程序在上个月的范围内查询,第一天是比较好办,但最后一天就不定,要去写段函数进行月份及年份判断来得出上个月共有多少天.那就比麻烦,还有获取当前月份,当前年份等常规日期获取函数,以下代码都是经过测试后的正确代码,可以放心使用. ','http://7xviiw.com1.z0.glb.clouddn.com/20160906103831677.jpg',0,4,255,821,'<p>在做查询过程中,例如要实现查上个月从第一天到最后一天的佣金(提成),那我们在程序实现过程中就要让程序在上个月的范围内查询,第一天是比较好办,但最后一天就不定,要去写段函数进行月份及年份判断来得出上个月共有多少天.那就比麻烦,还有获取当前月份,当前年份等常规日期获取函数,以下代码都是经过测试后的正确代码,可以放心使用。</p><h2>获取上个月第一天及最后一天</h2><pre class=\"brush:php;toolbar:false\">echo&nbsp;date(&#39;Y-m-01&#39;,&nbsp;strtotime(&#39;-1&nbsp;month&#39;));\r\necho&nbsp;&quot;&lt;br/&gt;&quot;;\r\necho&nbsp;date(&#39;Y-m-t&#39;,&nbsp;strtotime(&#39;-1&nbsp;month&#39;));\r\necho&nbsp;&quot;&lt;br/&gt;&quot;;</pre><h2>获取当月第一天及最后一天</h2><pre class=\"brush:php;toolbar:false\">$BeginDate=date(&#39;Y-m-01&#39;,&nbsp;strtotime(date(&quot;Y-m-d&quot;)));\r\necho&nbsp;$BeginDate;\r\necho&nbsp;&quot;&lt;br/&gt;&quot;;\r\necho&nbsp;date(&#39;Y-m-d&#39;,&nbsp;strtotime(&quot;$BeginDate&nbsp;+1&nbsp;month&nbsp;-1&nbsp;day&quot;));\r\necho&nbsp;&quot;&lt;br/&gt;&quot;;</pre><h2>获取当天年份、月份、日及天数</h2><pre class=\"brush:php;toolbar:false\">echo&nbsp;&quot;&nbsp;本月共有:&quot;.date(&quot;t&quot;).&quot;天&quot;;\r\necho&nbsp;&quot;&nbsp;当前年份&quot;.date(&#39;Y&#39;);\r\necho&nbsp;&quot;&nbsp;当前月份&quot;.date(&#39;m&#39;);\r\necho&nbsp;&quot;&nbsp;当前几号&quot;.date(&#39;d&#39;);\r\necho&nbsp;&quot;&lt;br/&gt;&quot;;</pre><h2>使用函数及数组来获取当月第一天及最后一天,比较实用,出自网友</h2><pre class=\"brush:php;toolbar:false\">function&nbsp;getthemonth($date)\r\n{\r\n&nbsp;&nbsp;&nbsp;$firstday&nbsp;=&nbsp;date(&#39;Y-m-01&#39;,&nbsp;strtotime($date));\r\n&nbsp;&nbsp;&nbsp;$lastday&nbsp;=&nbsp;date(&#39;Y-m-d&#39;,&nbsp;strtotime(&quot;$firstday&nbsp;+1&nbsp;month&nbsp;-1&nbsp;day&quot;));\r\n&nbsp;&nbsp;&nbsp;return&nbsp;array($firstday,$lastday);\r\n&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;$today&nbsp;=&nbsp;date(&quot;Y-m-d&quot;);\r\n&nbsp;&nbsp;&nbsp;$day=getthemonth($today);\r\n&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;当月的第一天:&nbsp;&quot;.$day[0].&quot;&nbsp;当月的最后一天:&nbsp;&quot;.$day[1];\r\n&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;&lt;br/&gt;&quot;;\r\n}</pre>',1473129676,1536613282),(37,11,1,'同一服务器多站点子域名间 的session如何共享','session,php session共享','同一服务器多站点子域名间的session如何共享','http://7xviiw.com1.z0.glb.clouddn.com/20160906104232375.jpg',0,5,255,1009,'<h2>情景再现<br/></h2><p>目前有两个站点mm.e.com和gg.e.com，我想在mm.e.com下可以访问到gg.e.com下的session。我的mm.e.com和gg.e.com是在同一服务器上的。</p><p>注意：<span style=\"color: rgb(255, 0, 0);\">如 mm.e.com 的服务器是不能读写 gg.e.com 服务器设置的 COOKIE 的。这里我们所说的同一网站的服务器有其特殊性，那就是他们同属于同一个一级域，如：mm.e.com 和 gg.e.com 都属于域 .e.com，那么我们就可以设置 COOKIE 的域为 .e.com，这样 gg.e.com&nbsp;、mm.e.com 等等都可以访问此 COOKIE。</span></p><h2 style=\"margin-bottom: 22px; line-height: 28px;\"><span style=\"font-size:17px;font-family: 宋体;color:#333333\"></span>利用COOKIE存放session_id()<span style=\"font-size:17px;font-family:&#39;Simsun&#39;,&#39;serif&#39;;color:#333333\"></span></h2><p><strong><span style=\"color: rgb(0, 0, 0);\">gg.e.com</span></strong><br/></p><pre class=\"brush:php;toolbar:false\">&lt;?php\r\nsession_start();\r\nsetcookie(&quot;session_id&quot;,session_id(),time()+3600,&#39;/&#39;,&#39;.e.com&#39;);\r\n$_SESSION[&#39;abc&#39;]&nbsp;=&nbsp;&#39;123&#39;;\r\necho&nbsp;$_SESSION[&#39;abc&#39;];\r\necho&nbsp;&#39;gg&#39;;</pre><p><strong><span style=\"color: rgb(255, 0, 0);\"><span style=\"color: rgb(0, 0, 0);\">mm.e.com</span></span></strong></p><pre class=\"brush:php;toolbar:false\">&lt;?php\r\nsession_id($_COOKIE[&#39;session_id&#39;]);\r\nsession_start();\r\necho&nbsp;$_SESSION[&#39;abc&#39;];\r\necho&nbsp;&#39;mm&#39;;</pre><h2>利用php.ini 的session.cookie_domain</h2><p>备注：这里是用php代码实现不需要修改php.ini的配置文件；如果有需要你可以在php.ini里面修改配置文件（该情况下就不需要改段代码：<span style=\"color: rgb(255, 0, 0);\">ini_set(&quot;session.cookie_domain&quot;,&#39;session.com&#39;);</span>）</p><p style=\"white-space: normal;\"><strong>gg.e.com</strong><br/></p><pre class=\"brush:php;toolbar:false\">&lt;?php\r\nini_set(&quot;session.cookie_domain&quot;,&nbsp;&#39;.e.com&#39;);\r\nsession_start();\r\n$_SESSION[&#39;abc&#39;]&nbsp;=&nbsp;&#39;123&#39;;\r\necho&nbsp;$_SESSION[&#39;abc&#39;];\r\necho&nbsp;&#39;gg&#39;;</pre><p style=\"white-space: normal;\"><strong>mm.e.com</strong></p><pre class=\"brush:php;toolbar:false\">&lt;?php\r\nini_set(&quot;session.cookie_domain&quot;,&#39;.e.com&#39;);\r\nsession_start();\r\necho&nbsp;$_SESSION[&#39;abc&#39;];\r\necho&nbsp;&#39;mm&#39;;</pre><p><strong>注意</strong></p><p>一、ini_set(&quot;session.cookie_domain&quot;,&#39;.e.com&#39;);必须放在session_start()之前；否则将不会生效.</p><p>二、有时我们gg.e.com是mm.e.com下的某个目录,此时一定要注意，用来获取gg.e.com的session文件一定要在mm.e.com域名所指向的目录下。不能跳出这个目录.</p><p><strong>建议</strong></p><p><span style=\"color: rgb(255, 0, 0);\">建议大家先写个demo进行测试session跨域，成功了再应用到相应的地方去。</span></p>',1473130445,1536686523),(39,24,1,'做好SEO？如何选择关键词很关键！','seo优化,关键词','做过SEO相关工作的孩纸们应该都对所谓的“关键词”异常熟悉吧，毕竟在很多人的意识中，SEO工作的其中一个环节就是和关键词打交道，我们需要提高网站关键词的排名，还需要根据用户的搜索扩展更多、更广泛的关键词，以求提升自身网站的流量。','http://7xviiw.com1.z0.glb.clouddn.com/20160912160056533.png',0,7,255,899,'<p>做过SEO相关工作的孩纸们应该都对所谓的“关键词”异常熟悉吧，毕竟在很多人的意识中，SEO工作的其中一个环节就是和关键词打交道，我们需要提高网站关键词的排名，还需要根据用户的搜索扩展更多、更广泛的关键词，以求提升自身网站的流量。毕竟流量才是每一位领导人最看重的真实效果反馈，比你每天报告“关键词从第25名提升到第5名”的意义更大，所以每一位SEO从业者从现在开始重新理解“关键词”!　</p><p>在SEO术语中，“关键词”是体现网站内容中最重要的一个或一组词，当然关键词在搜索引擎优化中扮演了比较重要的角色，因为搜索引擎将使用关键词来索引网站，因此，理解在网站中如何成功地运用关键词是SEO处理过程中非常关键的环节。如 人才网中，大家可以看到不同的网站设置了不同的关键词，同时排名也比较靠前，这就是网站优化的一个明显标记。</p><p>大多数搜索引擎优化的步骤要求站长选择最能反映网站内容的核心关键词，并且根据特定的关键词来优化网站的内容页面，或者通过使用这些关键词的外链来引用到自己的网站中，当然也有部分SEOer通过扩展长尾关键词来侧面提升核心关键词的排名，甚至流量。因此如何选择关键词以及如何通过关键词来优化自己的网站，是每一位SEOer需要重点熟悉的内容。如果你想要让网站获得更多的流量，那么体现在SEO工作中，就是为网站设定更多的关键词，当然如果每个页面有不同的关键词，并且围绕着该关键词发布文章，添加外链，那么用户在检索该关键词，点击到我们网站的概率就会大大增加，不是吗?</p><p>说了这么多关键词的重要意义，到底怎么样为了我们的网站选择更为合适的关键词呢?</p><h2>1、选择网站的核心关键词</h2><p>既然是核心关键词，那么SEOer首先要了解的就是自身公司的主要产品，网站的定位以及网站的受众群体，这将帮助站长预测搜索引擎用户将检索的关键词。当然这样的关键词有两种类型可供选择：</p><p>(1)第一种类型的站点主要关注于有限数量的关键词或仅仅只是一个关键词，这种站点一般情况下都是比较容易优化的。当然，这样的情况也是非常危险的，因为我们如果想要从搜索引擎中获得较多的流量，那么关键词涉及面更广一些会比较好，所以遇到这样的站点，你也只能帮助他选择一个所谓最好的关键词投入使用。</p><p>(2)第二种类型的站点就拥有多种不同的关键词分类了，这些关键词之间并没有多大的关联，它们仅仅与当前市场的热度有关。想想也知道，如果你接手了这样的站点，那么在优化过程中付出更多的努力才是正道。</p><h2>2、专注于某个关键词类别</h2><p>一个新的站点需要优化时，SEOer首先要做的就是帮它设定合理的关键词，在小编看来，专注于网站定位类型的关键词是最为重要，也是前期比较容易优化的。一旦这类关键词获得较好的排名后，我们就可以大刀阔斧地开发更多关键词，为网站获得更多流量了哦!</p><h2>3、通用关键词的应用</h2><p>如果你真的不知道该为公司网站设定什么样的关键词，何不先用通用词试试呢!其实，从事SEO的人们都知道，一般情况下，通用词的热度都很高，从seo方面而言，也就是说该类关键词想要获得良好的排名是非常困难的，特别是对于新站来说。作为SEO从业者，觉得大家还是避免选择通用词，而是选择长尾关键词来作为网站的主要关键词优化吧!</p><h2>4、使用长尾关键词</h2><p>从一般意义上说，长尾关键词是指不止包含一个词的关键词，它是对通用关键词的补充。相比于通用词而言，长尾关键词的竞争度更小，自身网站也更容易被搜索引擎，甚至于用户发现。因此为网站选择一定数量的长尾关键词，会让我们的网站获得更多的流量哦!</p><h2>5、关键词选好之后的优化工作</h2><p>大家都知道，优化是一个缓慢的、长期的过程，需要SEO从业者们付出足够多的努力和时间。一旦你为网站选好了关键词，建立了该关键词的相关内容页，那么接下来的时间就要提高该页面的曝光度，甚至于提升它的排名，当然，最根本的目的在于让用户发现它、点击它，从而为网站增加流量。完成某个关键词优化之后，我们接下来要做的就是重复性工作，那就是接着挖掘更多关键词，然后优化它。</p>',1473667350,1536417114),(40,11,1,'微信公众号JSAPI支付大致流程','php,微信支付','结合php版本的demo大致总结的流程，微信公众号JSAPI支付。','http://7xviiw.com1.z0.glb.clouddn.com/20161011113123959.png',0,8,255,1514,'<h2>一:配置参数</h2><p>申请成功后,获取接口文件, 将所有文件放入项目根目录weixin下,在WxPay.ub.config.php中填入配置账户信息;&nbsp;</p><h2>二:设置授权</h2><p>开发者中心-&gt;网页服务-&gt;网页授权获取用户基本信息-&gt;修改; &nbsp;</p><p>“授权回调页面域名修改成你的域名地址即可,须保证网页授权已获得,不然会报redirect_uri 参数错误;&nbsp;</p><h2>三:网页授权获取用户openid</h2><p>js_api_call.php 请求文件中改动(所有传给微信的参数都在入口文件中接收)</p><pre class=\"brush:php;toolbar:false\">$out_trade_no&nbsp;=&nbsp;$_GET[&#39;out_trade_no&#39;];&nbsp;//商户系统内部订单号&nbsp;&nbsp;32个字符内\r\n$total_fee&nbsp;=&nbsp;$_GET[&#39;total_fee&#39;]*100;&nbsp;//订单总金额&nbsp;&nbsp;单位为分,不能带小数点,所以须把价格乘以100,不然获取prepay_id时会报错误(设置金额字段时最好设为小数点后2位)\r\n$pay_status&nbsp;=&nbsp;&nbsp;get_pay_status($out_trade_no);//查看订单支付状态\r\n$return_url&nbsp;=&nbsp;get_return_url($out_trade_no);&nbsp;//设置支付成功后跳转页面\r\n//使用jsapi接口\r\n$jsApi&nbsp;=&nbsp;new&nbsp;JsApi_pub();\r\n//通过code获得openid\r\nif&nbsp;(!isset($_GET[&#39;code&#39;]))&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//触发微信返回code码\r\n//设置redirect_uri参数,返回code码地址,其实就是重定向到当前页面,获取用户code码参数\r\n&nbsp;&nbsp;$url&nbsp;=&nbsp;WxPayConf_pub::JS_API_CALL_URL.&quot;?showwxpaytitle=1&amp;out_trade_no=$out_trade_no&amp;total_fee=$total_fee&quot;;\r\n&nbsp;&nbsp;$url&nbsp;=&nbsp;$jsApi-&gt;createOauthUrlForCode($url);\r\n&nbsp;&nbsp;Header(&quot;Location:&nbsp;$url&quot;);&nbsp;\r\n}else{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取code码，以获取openid\r\n&nbsp;&nbsp;$code&nbsp;=&nbsp;$_GET[&#39;code&#39;];\r\n&nbsp;&nbsp;$jsApi-&gt;setCode($code);\r\n&nbsp;&nbsp;$openid&nbsp;=&nbsp;$jsApi-&gt;getOpenId();&nbsp;//用户标识&nbsp;\r\n}</pre><p>再就是WxPayHubHelper.php文件 JsApi_pub()类下createOauthUrlForCode($redirectUrl)方法, 第二个参数改为 $urlObj[&quot;redirect_uri&quot;] = urlencode($redirectUrl); //对$url变量进行url编码 不然header重定向时无法获取订单号和金额 &nbsp; &nbsp;</p><h2>四:设置统一支付接口参数，获取prepay_id</h2><p>(预支付ID，微信生成的预支付ID,用于后续接口调用中使用)</p><p>微信支付-&gt;开发配置-&gt;支付测试-&gt;测试授权目录和测试白名单添加(支付授权目录需要精确到最细一级的目录，且在使用时，目录名称后直接加文件名,如ccc.com/weixin/)&nbsp;</p><p>确保你 WxPayPubHelper.php文件里 UnifiedOrder_pub 这个类的getPrepayId这个方法能正常使用，这一步的调试在 getPrepayId（）内 var_dump($this-&gt;result); 就能看到错误代码;</p><p>posXml这个方法后调用了createXml这个方法&nbsp;</p><pre class=\"brush:php;toolbar:false\">function&nbsp;postXml()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$xml&nbsp;=&nbsp;$this-&gt;createXml();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//**在此处查看xml文件是否正常生成\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;include_once(&quot;log_.php&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$log&nbsp;=&nbsp;new&nbsp;Log_();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$log-&gt;log_result(&quot;log.txt&quot;,$xml);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//**&nbsp;由于打印一些xml格式的文件只显示字符长度，不显示内容。于是用log的形式写在服务器上调试\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;response&nbsp;=&nbsp;$this-&gt;postXmlCurl($xml,$this-&gt;url,$this-&gt;curl_timeout);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$this-&gt;response;\r\n}</pre><p>保证xml这个变量格式如下;</p><pre class=\"brush:xml;toolbar:false\">&lt;xml&gt;&lt;openid&gt;&lt;![CDATA[UKqsyD_711nkk2c]]&gt;&lt;/openid&gt;\r\n&lt;body&gt;&lt;![CDATA[pay]]&lt;/body&gt;\r\n&lt;out_trade_no&gt;201504101658571802&gt;&lt;/out_trade_no&gt;\r\n&lt;total_fee&gt;120&lt;/total_fee&gt;\r\n&lt;notify_url&gt;&lt;![CDATA[http://www.hao123.com/weixin/notify_url.php]]&gt;&lt;/notify_url&gt;\r\n&lt;trade_type&gt;&lt;![CDATA[JSAPI]]&gt;&lt;/trade_type&gt;\r\n&lt;appid&gt;&lt;![CDATA[wxfd3c4asdf]]&gt;&lt;/appid&gt;\r\n&lt;mch_id&gt;123334333102&lt;/mch_id&gt;\r\n&lt;spbill_create_ip&gt;&lt;![CDATA[192.168.0.1]]&gt;&lt;/spbill_create_ip&gt;\r\n&lt;nonce_str&gt;&lt;![CDATA[imsdasdcmlkhfa]]&gt;&lt;/nonce_str&gt;\r\n&lt;sign&gt;&lt;![CDATA[CBE62F36806A3E1]]&gt;&lt;/sign&gt;&lt;/xml&gt;</pre><p>参数正确,postXmlCurl才能正确提交，提交后就能得到正确的prepay_id,就能弹出支付框了</p><h2>五:使用jsapi调起支付</h2><p>根据prepay_id生成jsapi支付参数</p><pre class=\"brush:php;toolbar:false\">$jsApi-&gt;setPrepayId($prepay_id);\r\n$jsApiParameters&nbsp;=&nbsp;$jsApi-&gt;getParameters();\r\n//调用微信JS&nbsp;api&nbsp;支付\r\nfunction&nbsp;jsApiCall()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;WeixinJSBridge.invoke(\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#39;getBrandWCPayRequest&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;?php&nbsp;echo&nbsp;$jsApiParameters;&nbsp;?&gt;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function(res){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WeixinJSBridge.log(res.err_msg);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(res.err_msg&nbsp;==&nbsp;&quot;get_brand_wcpay_request:ok&quot;)&nbsp;{&nbsp;//支付成功后\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;window.location.href=&quot;&lt;?php&nbsp;echo&nbsp;$return_url;?&gt;&quot;&nbsp;&nbsp;//跳转地址及订单操作,在异步页面也须处理订单,防止同步时失败&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(&quot;支付失败&quot;+res.err_code+res.err_desc+res.err_msg);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;);\r\n}(每次请求callpay方法时须判断订单状态,防止重复提交)</pre><h2>六:通用通知接口 异步处理微信返回结果</h2><p>支付完成后,notify.php中获取微信的回调</p><pre class=\"brush:php;toolbar:false;\">$xml&nbsp;=&nbsp;$GLOBALS[&#39;HTTP_RAW_POST_DATA&#39;];\r\n//须验证签名，并回应微信。\r\nif($notify-&gt;checkSign()&nbsp;==&nbsp;TRUE)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//签名验证通过并更新订单状态后&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$notify-&gt;setReturnParameter(&quot;return_code&quot;,&quot;SUCCESS&quot;);&nbsp;//设置返回码，保证支付状态改变后才返回成功\r\n&nbsp;&nbsp;&nbsp;&nbsp;//对后台通知交互时，如果微信收到商户的应答不是成功或超时，微信认为通知失败，\r\n&nbsp;&nbsp;&nbsp;&nbsp;//微信会通过一定的策略（如30分钟共8次）定期重新发起通知，\r\n&nbsp;&nbsp;&nbsp;&nbsp;$returnXml&nbsp;=&nbsp;$notify-&gt;returnXml();\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$returnXml;(将xml数据返回微信&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当return_code为SUCCESS时,不会再通知)\r\n&nbsp;&nbsp;&nbsp;//当收到通知进行处理时，首先检查对应业务数据的状态，判断该通知是否已经处理过，如果没有处理过再进行处理，\r\n&nbsp;&nbsp;&nbsp;&nbsp;如果处理过直接返回结果成功。在对业务数据进行状态检查和处理之前，要采用数据锁进行并发控制，\r\n&nbsp;&nbsp;&nbsp;&nbsp;以避免函数重入造成的数据混乱.\r\n//判断是否在微信浏览器打开\r\nfunction&nbsp;isWeiXin(){\r\n&nbsp;&nbsp;&nbsp;var&nbsp;ua&nbsp;=&nbsp;window.navigator.userAgent.toLowerCase();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ua.match(/MicroMessenger/i)&nbsp;==&nbsp;&#39;micromessenger&#39;){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;true;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre>',1476157288,1536707283),(41,12,1,'php解决抢购秒杀抽奖等大流量并发入库导致的库存负数的问题','php,商城秒杀','最近在做一个团购项目，遇到个问题，就是在抢购、秒杀、抽奖等活动时，库存数量有限，但是同时下单人数超过了库存数量，就会导致商品超售问题。','http://7xviiw.com1.z0.glb.clouddn.com/20161026085117537.png',0,6,255,1527,'<p>最近在做一个团购项目，遇到个问题，就是在抢购、秒杀、抽奖等活动时，库存数量有限，但是同时下单人数超过了库存数量，就会导致商品超售问题。</p><p>那么我们怎么来解决这个问题呢，我的思路如下：我们知道数据库处理sql是一条条处理的，假设购买商品的流程是这样的：</p><pre class=\"brush:php;toolbar:false\">sql1:查询商品库存\r\nif(库存数量&nbsp;&gt;&nbsp;0)\r\n{\r\n&nbsp;&nbsp;//生成订单...\r\n&nbsp;&nbsp;sql2:库存-1\r\n}</pre><p>当没有并发时，上面的流程看起来是如此完美，假设同时两个人下单，而库存只有1个了，在sql1阶段两个人查询到的库存都是&gt;0的，于是最终都执行了sql2，库存最后变为-1，超售了，要么补库存，要么等用户投诉吧。</p><p>解决这个问题比较流行的思路：</p><p>1.用额外的单进程处理一个队列，下单请求放到队列里，一个个处理，就不会有并发的问题了，但是要额外的后台进程以及延迟问题，不予考虑。</p><p>2.数据库乐观锁，大致的意思是先查询库存，然后立马将库存+1，然后订单生成后，在更新库存前再查询一次库存，看看跟预期的库存数量是否保持一致，不一致就回滚，提示用户库存不足。</p><p>3.根据update结果来判断，我们可以在sql2的时候加一个判断条件update ... where 库存&gt;0，如果返回false，则说明库存不足，并回滚事务。</p><p>4.借助文件排他锁，在处理下单请求的时候，用flock锁定一个文件，如果锁定失败说明有其他订单正在处理，此时要么等待要么直接提示用户&quot;服务器繁忙&quot;</p><p>本文要说的是第4种方案，大致代码如下：</p><h2>阻塞(等待)模式</h2><pre class=\"brush:php;toolbar:false\">&lt;?php\r\n$fp&nbsp;=&nbsp;fopen(&quot;lock.txt&quot;,&nbsp;&quot;w+&quot;);\r\nif(flock($fp,LOCK_EX))\r\n{\r\n&nbsp;&nbsp;//..处理订单\r\n&nbsp;&nbsp;flock($fp,LOCK_UN);\r\n}\r\nfclose($fp);\r\n?&gt;</pre><h2>非阻塞模式</h2><pre class=\"brush:php;toolbar:false\">&lt;?php\r\n$fp&nbsp;=&nbsp;fopen(&quot;lock.txt&quot;,&nbsp;&quot;w+&quot;);\r\nif(flock($fp,LOCK_EX&nbsp;|&nbsp;LOCK_NB))\r\n{\r\n&nbsp;&nbsp;//..处理订单\r\n&nbsp;&nbsp;flock($fp,LOCK_UN);\r\n}\r\nelse\r\n{\r\n&nbsp;&nbsp;echo&nbsp;&quot;系统繁忙，请稍后再试&quot;;\r\n}\r\n&nbsp;\r\nfclose($fp);\r\n?&gt;</pre>',1477443290,1536641352),(42,12,1,'如何做到点击图片的链接不是打开而是下载呢？','图片下载,php下载','如何做到点击图片的链接不是打开而是下载呢？','http://7xviiw.com1.z0.glb.clouddn.com/20161104085756820.png',0,6,255,939,'<p>如何做到点击图片的链接不是打开而是下载呢？</p><h2>前端做法</h2><p>a标签有个download属性</p><pre class=\"brush:html;toolbar:false\">&lt;a&nbsp;href=&quot;/images/xiaowen.jpg&quot;&nbsp;download=&quot;xiaowen&quot;&gt;</pre><h2>后端做法</h2><pre class=\"brush:php;toolbar:false\">/**\r\n&nbsp;*&nbsp;强制下载文件\r\n&nbsp;*&nbsp;@param&nbsp;&nbsp;string&nbsp;$file&nbsp;文件路径\r\n&nbsp;*/\r\nfunction&nbsp;force_download($file)\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((isset($file))&nbsp;&amp;&amp;&nbsp;(file_exists($file)))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header(&quot;Content-length:&nbsp;&quot;.filesize($file));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header(&#39;Content-Type:&nbsp;application/octet-stream&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header(&#39;Content-Disposition:&nbsp;attachment;&nbsp;filename=&quot;&#39;.basename($file).&#39;&quot;&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;readfile($file);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;No&nbsp;file&nbsp;selected&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n//使用示例\r\nforce_download(&#39;./test.jpg&#39;);</pre><p><img src=\"http://img.baidu.com/hi/jx2/j_0011.gif\"/>ok,搞定！</p>',1478221161,1536654138),(43,11,1,'正则表达式的子模式详解','php正则,正则表达式子模式,正则','正则表达式的子模式详解','http://7xviiw.com1.z0.glb.clouddn.com/20161108141419769.jpg',0,4,255,1145,'<h2>首先，我们先看一段PHP代码</h2><pre class=\"brush:php;toolbar:false\">&lt;?php\r\n&nbsp;&nbsp;&nbsp;&nbsp;$time&nbsp;=&nbsp;date&nbsp;(&quot;Y-m-d&nbsp;H:i:s&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;$pattern&nbsp;=&nbsp;&quot;/\\d{4}-\\d{2}-\\d{2}&nbsp;\\d{2}:\\d{2}:\\d{2}/i&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if(preg_match($pattern,$time,$arr)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;&lt;pre&gt;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r($arr);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;&lt;/pre&gt;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n?&gt;\r\n//显示结果：\r\nArray\r\n(\r\n&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;2012-06-23&nbsp;03:08:45\r\n)</pre><p>有没有注意到，显示的结果只有一条数据，即符合匹配模式的时间格式，那如果只有一条记录的话，为什么还要用数组保存呢？直接使用字符串保存不是更好？</p><p>带着这个问题，我们来看下正则表达式中的子模式。</p><p>在正则表达式中，可以使用“(”和“)”将模式中的子字符串括起来，以形成一个子模式。将子模式视为一个整体时，那么它就相当于一个单个字符。</p><p>比如，我们将以上的代码稍微修改下，改成如下：</p><pre class=\"brush:php;toolbar:false\">&lt;?php\r\n&nbsp;&nbsp;&nbsp;&nbsp;$time&nbsp;=&nbsp;date&nbsp;(&quot;Y-m-d&nbsp;H:i:s&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;$pattern&nbsp;=&nbsp;&quot;/(\\d{4})-(\\d{2})-(\\d{2})&nbsp;(\\d{2}):(\\d{2}):(\\d{2})/i&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if(preg_match($pattern,$time,$arr)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;&lt;pre&gt;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r($arr);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;&lt;/pre&gt;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n?&gt;\r\n//注意：我只修改了$pattern，在匹配模式中，使用了括号()\r\n//执行结果：\r\nArray\r\n(\r\n&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;2012-06-23&nbsp;03:19:23\r\n&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;2012\r\n&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;06\r\n&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;23\r\n&nbsp;&nbsp;&nbsp;&nbsp;[4]&nbsp;=&gt;&nbsp;03\r\n&nbsp;&nbsp;&nbsp;&nbsp;[5]&nbsp;=&gt;&nbsp;19\r\n&nbsp;&nbsp;&nbsp;&nbsp;[6]&nbsp;=&gt;&nbsp;23\r\n)</pre><h2>总结</h2><p>我们可以使用小括号给整个匹配模式进行分组，默认情况下，每个分组会自动拥有一个组号，规则是，从左到右，以分组的左括号为标志，第一个出现的分组为组号1，第二个为组号2，以此类推。其中，分组0对应整个正则表达式。</p><p>对整个正则匹配模式进行了分组以后，就可以进一步使用“向后引用”来重复搜索前面的某个分组匹配的文本。例如：\\1代表分组1匹配的文本，\\2代表分组2匹配的文本等等</p><p>我们可以进一步修改下代码，如下所示：</p><pre class=\"brush:php;toolbar:false\">&lt;?php\r\n&nbsp;&nbsp;&nbsp;&nbsp;$time&nbsp;=&nbsp;date&nbsp;(&quot;Y-m-d&nbsp;H:i:s&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;$pattern&nbsp;=&nbsp;&quot;/(\\d{4})-(\\d{2})-(\\d{2})&nbsp;(\\d{2}):(\\d{2}):(\\d{2})/i&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$replacement&nbsp;=&nbsp;&quot;\\$time格式为：$0&lt;BR&gt;替换后的格式为：\\\\1年\\\\2月\\\\3日&nbsp;\\\\4时\\\\5分\\\\6秒&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;preg_replace($pattern,&nbsp;$replacement,&nbsp;$time);\r\n&nbsp;&nbsp;&nbsp;&nbsp;if(preg_match($pattern,$time,$arr)){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;&lt;pre&gt;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print_r($arr);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;&lt;/pre&gt;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n?&gt;</pre><h2>注意</h2><p>因为是在双引号中，所以使用分组的时候应该使用两个反斜杠，如:\\\\1，而如果在单引号中，则使用一个反斜杠就可以了，如：\\1</p><p>\\\\1用于捕获分组一种的内容：2012，\\\\6用于捕获分组6中的内容　　　　　　　　　　</p><pre class=\"brush:php;toolbar:false\">//执行结果：\r\n$time格式为：2012-06-23&nbsp;03:30:31\r\n替换后的格式为：2012年06月23日&nbsp;03时30分31秒\r\nArray\r\n(\r\n&nbsp;&nbsp;&nbsp;&nbsp;[0]&nbsp;=&gt;&nbsp;2012-06-23&nbsp;03:30:31\r\n&nbsp;&nbsp;&nbsp;&nbsp;[1]&nbsp;=&gt;&nbsp;2012\r\n&nbsp;&nbsp;&nbsp;&nbsp;[2]&nbsp;=&gt;&nbsp;06\r\n&nbsp;&nbsp;&nbsp;&nbsp;[3]&nbsp;=&gt;&nbsp;23\r\n&nbsp;&nbsp;&nbsp;&nbsp;[4]&nbsp;=&gt;&nbsp;03\r\n&nbsp;&nbsp;&nbsp;&nbsp;[5]&nbsp;=&gt;&nbsp;30\r\n&nbsp;&nbsp;&nbsp;&nbsp;[6]&nbsp;=&gt;&nbsp;31\r\n)</pre>',1478585915,1536700040),(44,12,1,'PHP中9大缓存技术总结','php缓存技术,php常用缓存,memcache缓存,','全页面静态化缓存，也就是将页面全部生成html静态页面，用户访问时直接访问的静态页面，而不会去走php服务器解析的流程。此种方式，在CMS系统中比较常见，比如dedecms...','http://7xviiw.com1.z0.glb.clouddn.com/20161108142811135.jpg',0,4,255,945,'<h2>1、全页面静态化缓存<br/></h2><p>也就是将页面全部生成html静态页面，用户访问时直接访问的静态页面，而不会去走php服务器解析的流程。此种方式，在CMS系统中比较常见，比如dedecms；</p><p>一种比较常用的实现方式是用输出缓存：</p><pre class=\"brush:php;toolbar:false\">Ob_start()\r\n******要运行的代码*******\r\n$content&nbsp;=&nbsp;Ob_get_contents();\r\n****将缓存内容写入html文件*****\r\nOb_end_clean();</pre><h2>2、页面部分缓存</h2><p>该种方式，是将一个页面中不经常变的部分进行静态缓存，而经常变化的块不缓存，最后组装在一起显示；可以使用类似于ob_get_contents的方式实现，也可以利用类似ESI之类的页面片段缓存策略，使其用来做动态页面中相对静态的片段部分的缓存(ESI技术，请baidu，此处不详讲)。</p><p>该种方式可以用于如商城中的商品页；</p><h2>3、数据缓存</h2><p>顾名思义，就是缓存数据的一种方式；比如，商城中的某个商品信息，当用商品id去请求时，就会得出包括店铺信息、商品信息等数据，此时就可以将这些数据缓存到一个php文件中，文件名包含商品id来建一个唯一标示；下一次有人想查看这个商品时，首先就直接调这个文件里面的信息，而不用再去数据库查询；其实缓存文件中缓存的就是一个php数组之类；</p><p>Ecmall商城系统里面就用了这种方式；</p><h2>4、查询缓存</h2><p>其实这跟数据缓存是一个思路，就是根据查询语句来缓存；将查询得到的数据缓存在一个文件中，下次遇到相同的查询时，就直接先从这个文件里面调数据，不会再去查数据库；但此处的缓存文件名可能就需要以查询语句为基点来建立唯一标示；按时间变更进行缓存其实，这一条不是真正的缓存方式；上面的2、3、4的缓存技术一般都用到了时间变更判断；就是对于缓存文件您需要设一个有效时间，在这个有效时间内，相同的访问才会先取缓存文件的内容，但是超过设定的缓存时间，就需要重新从数据库中获取数据，并生产最新的缓存文件；</p><p>比如，我将我们商城的首页就是设置2个小时更新一次；</p><h2>5、按内容变更进行缓存</h2><p>这个也并非独立的缓存技术，需结合着用；就是当数据库内容被修改时，即刻更新缓存文件；比如，一个人流量很大的商城，商品很多，商品表必然比较大，这表的压力也比较重；我们就可以对商品显示页进行页面缓存；当商家在后台修改这个商品的信息时，点击保存，我们同时就更新缓存文件；那么，买家访问这个商品信息时，实际上访问的是一个静态页面，而不需要再去访问数据库；试想，如果对商品页不缓存，那么每次访问一个商品就要去数据库查一次，如果有10万人在线浏览商品，那服务器压力就大了；</p><h2>6、内存式缓存</h2><p>提到这个，可能大家想到的首先就是Memcached；memcached是高性能的分布式内存缓存服务器。 一般的使用目的是，通过缓存数据库查询结果，减少数据库访问次数，以提高动态Web应用的速度、 提高可扩展性。</p><p>它就是将需要缓存的信息，缓存到系统内存中，需要获取信息时，直接到内存中取；比较常用的方式就是 key–&gt;value方式；</p><pre class=\"brush:php;toolbar:false\">&lt;?php&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$memcachehost&nbsp;=&nbsp;&#39;192.168.6.191&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$memcacheport&nbsp;=&nbsp;11211;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$memcachelife&nbsp;=&nbsp;60;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$memcache&nbsp;=&nbsp;new&nbsp;Memcache;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$memcache-&gt;connect($memcachehost,$memcacheport)&nbsp;or&nbsp;die&nbsp;(&quot;Could&nbsp;not&nbsp;connect&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$memcache-&gt;set(&#39;key&#39;,&#39;缓存的内容&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$get&nbsp;=&nbsp;$memcache-&gt;get($key);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取信息\r\n?&gt;</pre><h2>7、apache缓存模块</h2><p>apache安装完以后，是不允许被cache的。如果外接了cache或squid服务器要求进行web加速的话，就需要在htttpd.conf里进行设置，当然前提是在安装apache的时候要激活mod_cache的模块。安装apache时：./configure –enable-cache –enable-disk-cache –enable-mem-cache</p><h2>8、php APC缓存扩展</h2><p>Php有一个APC缓存扩展，windows下面为php_apc.dll，需要先加载这个模块，然后是在php.ini里面进行配置：</p><pre class=\"brush:php;toolbar:false\">[apc]&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extension=php_apc.dll&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;apc.rfc1867&nbsp;=&nbsp;on&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_max_filesize&nbsp;=&nbsp;100M&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;post_max_size&nbsp;=&nbsp;100M&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;apc.max_file_size&nbsp;=&nbsp;200M&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_max_filesize&nbsp;=&nbsp;1000M&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;post_max_size&nbsp;=&nbsp;1000M&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max_execution_time&nbsp;=&nbsp;600&nbsp;;&nbsp;&nbsp;&nbsp;每个PHP页面运行的最大时间值(秒)，默认30秒&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max_input_time&nbsp;=&nbsp;600&nbsp;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;每个PHP页面接收数据所需的最大时间，默认60&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memory_limit&nbsp;=&nbsp;128M&nbsp;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;每个PHP页面所吃掉的最大内存，默认8M</pre><h2>9、Opcode缓存</h2><p>我们知道，php的执行流程可以用下图来展示：</p><p style=\"text-align: center;\"><img src=\"/ueditor/php/upload/image/20161108/1478586876641911.png\" title=\"1478586876641911.png\" alt=\"QQ图片20161108140235.png\"/></p><p>首先php代码被解析为Tokens，然后再编译为Opcode码，最后执行Opcode码，返回结果；所以，对于相同的php文件，第一次运行时可以缓存其Opcode码，下次再执行这个页面时，直接会去找到缓存下的opcode码，直接执行最后一步，而不再需要中间的步骤了。</p><p>比较知名的是XCache、Turck MM Cache、PHP Accelerator等。</p><p><br/></p>',1478586886,1536642223),(45,23,1,'Linux下端口被占用解决','linux,linux端口占用','linux端口被占用的解决办法，做一个小记录~','http://7xviiw.com1.z0.glb.clouddn.com/20161125113512629.jpg',0,4,255,877,'<p>有时候关闭软件后，后台进程死掉，导致端口被占用。下面以JBoss端口8083被占用为例，列出详细解决过程。</p><h2>1.查找被占用的端口</h2><pre class=\"brush:bash;toolbar:false\">netstat&nbsp;-tln\r\n&nbsp;&nbsp;\r\nnetstat&nbsp;-tln&nbsp;|&nbsp;grep&nbsp;8083&nbsp;\r\n&nbsp;\r\nnetstat&nbsp;-tln&nbsp;查看端口使用情况，而netstat&nbsp;-tln&nbsp;|&nbsp;grep&nbsp;8083则是只查看端口8083的使用情况</pre><h2>2.查看端口属于哪个程序？端口被哪个进程占用</h2><pre class=\"brush:bash;toolbar:false\">lsof&nbsp;-i&nbsp;:8083</pre><h2>3.杀掉占用端口的进程</h2><pre class=\"brush:bash;toolbar:false\">kill&nbsp;-9&nbsp;进程id</pre>',1480045245,1536593501),(46,25,1,'看代码学设计模式之解释器模式','设计模式,php设计模式,解释器','解释器模式：Given a language, define arepresentation for its grammar along with an interpreter that uses therepresentation to interpret sentences in the language。给定一个语言, 定义它的文法的一种表示，并定义一个解释器，该解释器使用该表示来解释语言中的句子。','http://7xviiw.com1.z0.glb.clouddn.com/20161128130719954.jpg',0,5,255,897,'<pre class=\"brush:php;toolbar:false\">&lt;?php\r\n/**\r\n*&nbsp;看代码学设计模式之解释器模式\r\n*\r\n*&nbsp;解释器&nbsp;示例\r\n*\r\n*&nbsp;@create_date:&nbsp;2010-01-04\r\n*/\r\nclass&nbsp;Expression{\r\n&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;interpreter($str){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$str;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\nclass&nbsp;ExpressionNum&nbsp;extends&nbsp;Expression{\r\n&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;interpreter($str){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch($str){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&quot;0&quot;:return&quot;零&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&quot;1&quot;:return&quot;一&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&quot;2&quot;:return&quot;二&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&quot;3&quot;:return&quot;三&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&quot;4&quot;:return&quot;四&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&quot;5&quot;:return&quot;五&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&quot;6&quot;:return&quot;六&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&quot;7&quot;:return&quot;七&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&quot;8&quot;:return&quot;八&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&quot;9&quot;:return&quot;九&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\nclass&nbsp;ExpressionCharater&nbsp;extends&nbsp;Expression{\r\n&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;interpreter($str){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;strtoupper($str);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\nclass&nbsp;Interpreter{\r\n&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;execute($string){\r\n&nbsp;&nbsp;&nbsp;&nbsp;$expression=&nbsp;null;\r\n&nbsp;&nbsp;&nbsp;&nbsp;for($i=&nbsp;0;$i&lt;strlen($string);$i++)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$temp=$string[$i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch(true){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;is_numeric($temp):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$expression=new&nbsp;ExpressionNum();break;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$expression=new&nbsp;ExpressionCharater();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$expression-&gt;interpreter($temp);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n$obj=new&nbsp;Interpreter();\r\n$obj-&gt;execute(&quot;361418222php自学交流群&quot;);</pre><h2 style=\"text-align: left;\">浏览器输出<br/></h2><p style=\"text-align: center;\"><img src=\"/ueditor/php/upload/image/20161128/1480309860952716.png\" title=\"1480309860952716.png\" alt=\"QQ图片20161128095621.png\"/></p><h2>解释器模式</h2><p>Given a language, define arepresentation for its grammar along with an interpreter that uses therepresentation to interpret sentences in the language。给定一个语言, 定义它的文法的一种表示，并定义一个解释器，该解释器使用该表示来解释语言中的句子。</p><h2>优点</h2><p>解释器是一个简单语法分析工具，它最显著的优点就是扩展性，修改语法规则只要修改相应的非终结符表达式就可以了，若扩展语法，则只要增加非终结符类就可以了。</p><h2>缺点</h2><p>1.解释器模式会引起类膨胀</p><p>2.每个语法都要产生一个非终结符表达式，语法规则比较复杂时，就可能产生大量的类文件，为维护带来了非常多的麻烦。</p><p>3.解释器模式采用递归调用方法，每个非终结符表达式只关心与自己有关的表达式，每个表达式需要知道最终的结果，必须一层一层地剥茧，无论是面向过程的语言还是面向对象的语言，递归都是在必要条件下使用的，它导致调试非常复杂。想想看，如果要排查一个语法错误，我们是不是要一个一个断点的调试下去，直到最小的语法单元。</p><p>4.效率问题。解释器模式由于使用了大量的循环和递归，效率是个不容忽视的问题，特别是用于解析复杂、冗长的语法时，效率是难以忍受的。</p><h2>适用场景</h2><h5>1、重复发生的问题可以使用解释器模式</h5><p>例如，多个应用服务器，每天产生大量的日志，需要对日志文件进行分析处理，由于各个服务器的日志格式不同，但是数据要素是相同的，按照解释器的说法就是终结符表达式都是相同的，但是非终结符表达式就需要制定了。在这种情况下，可以通过程序来一劳永逸地解决该问题。</p><h5>2、一个简单语法需要解释的场景</h5><p>为什么是简单？文法规则越多，复杂度越高，而且类间还要进行递归调用，不是一般地复杂。想想看，多个类之间的调用你需要什么样的耐心和信心去排查问题。因此，解释器模式一般用来解析比较标准的字符集，例如SQL语法分析，不过该部分逐渐被专用工具所取代</p><p><br/></p>',1480309809,1536507217),(47,25,1,'看代码学设计模式之工厂模式','php设计模式,工厂模式,简单工厂模式','工厂方法模式：定义一个用于创建对象的接口,让子类决定将哪一个类实例化,使用一个类的实例化延迟到其子类','http://7xviiw.com1.z0.glb.clouddn.com/20161129084434746.png',0,5,255,967,'<h2>简单工厂模式</h2><pre class=\"brush:php;toolbar:false\">/*简单工厂代码示例*/\r\nclass&nbsp;DBFactory{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;function&nbsp;create($type){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swtich($type){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&quot;Mysql&quot;:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;MysqlDB();&nbsp;break;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&quot;Postgre&quot;:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;PostgreDB();&nbsp;break;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;&quot;Mssql&quot;:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;MssqlDB();&nbsp;break;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n$oMysql=&nbsp;DBFactory::create(&quot;Mysql&quot;);\r\n$oPostgre=&nbsp;DBFactory::create(&quot;Postgre&quot;);\r\n$oMssql=&nbsp;DBFactory::create(&quot;Mssql&quot;);</pre><h5>优点</h5><p>客户端不需要修改代码。</p><h5>缺点</h5><p>当需要增加新的数据库类的时候，不仅需新加数据库类，还要修改工厂类，违反了开闭原则。</p><h2>工厂模式<br/></h2><pre class=\"brush:php;toolbar:false\">/**\r\n*&nbsp;工厂方法模式\r\n*\r\n*&nbsp;定义一个用于创建对象的接口,让子类决定将哪一个类实例化,使用一个类的实例化延迟到其子类\r\n*/\r\nclass&nbsp;DBFactory{\r\n	public&nbsp;static&nbsp;function&nbsp;create($type){\r\n		$class&nbsp;=&nbsp;$type.&quot;DB&quot;;\r\n		return&nbsp;new&nbsp;$class;\r\n	}\r\n}\r\n\r\ninterface&nbsp;DB{\r\n	public&nbsp;function&nbsp;connect();\r\n	public&nbsp;function&nbsp;exec();\r\n}\r\n\r\nclass&nbsp;MysqlDB&nbsp;implements&nbsp;DB{\r\n	public&nbsp;function&nbsp;__construct()&nbsp;{\r\n		echo&nbsp;&quot;连接到mysql!&lt;br&nbsp;/&gt;&quot;;\r\n&nbsp;	}\r\n	public&nbsp;function&nbsp;connect()&nbsp;{\r\n	}\r\n	public&nbsp;function&nbsp;exec()&nbsp;{\r\n	}\r\n}\r\nclass&nbsp;PostgreDB&nbsp;implements&nbsp;DB{\r\n	public&nbsp;function&nbsp;__construct()&nbsp;{\r\n		echo&nbsp;&quot;连接到postgre!&lt;br&nbsp;/&gt;&quot;;\r\n&nbsp;	}\r\n	public&nbsp;function&nbsp;connect()&nbsp;{\r\n	}\r\n	public&nbsp;function&nbsp;exec()&nbsp;{\r\n	}\r\n}\r\nclass&nbsp;MssqlDB&nbsp;implements&nbsp;DB{\r\n	public&nbsp;function&nbsp;__construct()&nbsp;{\r\n		echo&nbsp;&quot;连接到mssql!&lt;br&nbsp;/&gt;&quot;;\r\n&nbsp;	}\r\n	public&nbsp;function&nbsp;connect()&nbsp;{\r\n	}\r\n	public&nbsp;function&nbsp;exec()&nbsp;{\r\n	}\r\n}\r\n\r\n$oMysql=&nbsp;DBFactory::create(&quot;Mysql&quot;);\r\n$oPostgre=&nbsp;DBFactory::create(&quot;Postgre&quot;);\r\n$oMssql=&nbsp;DBFactory::create(&quot;Mssql&quot;);</pre><p>这个和简单工厂有区别，简单工厂模式只有一个工厂，工厂方法模式对每一个产品都有相应的工厂</p><h5>优点</h5><p>增加一个数据库类（例如redis类），只需要增加数据库类和相对应的工厂，两个类，不需要修改工厂类。</p><h5>缺点</h5><p>增加数据库类，会修改客户端代码，工厂方法只是把简单工厂的内部逻辑判断移到了客户端进行。</p><h2>浏览器输出</h2><p style=\"text-align: center;\"><img src=\"/ueditor/php/upload/image/20161129/1480380729498929.png\" title=\"1480380729498929.png\" alt=\"factory.png\"/></p><p><br/></p>',1480380768,1536396237),(48,25,1,'看代码学设计模式之外观模式','php设计模式,php外观模式,设计模式','外观模式(Facade Pattern)：外部与一个子系统的通信必须通过一个统一的外观对象进行，为子系统中的一组接口提供一个一致的界面，外观模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。外观模式又称为门面模式，它是一种对象结构型模式。','http://7xviiw.com1.z0.glb.clouddn.com/20161129102850921.png',0,3,255,1038,'<h2>模式定义</h2><p>外观模式(Facade Pattern)：外部与一个子系统的通信必须通过一个统一的外观对象进行，为子系统中的一组接口提供一个一致的界面，外观模式定义了一个高层接口，这个接口使得这一子系统更加容易使用。外观模式又称为门面模式，它是一种对象结构型模式。</p><p>简单来说，外观模式的就是让client客户端以一种简单的方式来调用比较复杂的系统，来完成一件事情。</p><p>如果我要开启一辆车，通常我要开车门，用钥匙打火(即开启发动机引擎），踩油门就能把车开起来。那么在这一系列的动作中，我们可能会涉及到很多的动作或方法。我们停车时，要刹车，关引擎，关车门。也同样会涉及到好几个类好几个方法。我们看下面的类：</p><pre class=\"brush:php;toolbar:false\">class&nbsp;CarDoor&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;open()&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;打开车门&quot;.PHP_EOL;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;close()&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;关车门&quot;.PHP_EOL;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n}&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\nclass&nbsp;Engine&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;start()&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;即开启发动机引擎&quot;.PHP_EOL;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;stop()&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;关闭引擎&quot;.PHP_EOL;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n}&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\nclass&nbsp;Accelerator&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;run()&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;踩油门&quot;.PHP_EOL;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n}&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\nclass&nbsp;Breaking&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;run()&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;踩刹车&quot;.PHP_EOL;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n}</pre><p>&nbsp;</p><p>类和方法都很多。如果我们每回要开动一辆车都要调用这么多方法，很累人的。也没有必要。这样我们就建立一个类，把这些运作都包装起来。因为我们看到，其实我们只关心开车和停车两个大动作。</p><pre class=\"brush:php;toolbar:false\">interface&nbsp;Drive&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;start();&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;stop();&nbsp;&nbsp;\r\n}&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\nclass&nbsp;Driver&nbsp;implements&nbsp;Drive&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct()&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_door&nbsp;=&nbsp;new&nbsp;CarDoor();&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_eingine&nbsp;=&nbsp;new&nbsp;Engine();&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_accelerator&nbsp;=&nbsp;new&nbsp;Accelerator();&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_breaking&nbsp;=&nbsp;new&nbsp;Breaking();&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;start()&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_door-&gt;open();&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_eingine-&gt;start();&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_accelerator-&gt;run();&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;stop()&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_breaking-&gt;run();&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_eingine-&gt;stop();&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;_door-&gt;close();&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n}&nbsp;\r\n$DriverFacade&nbsp;=&nbsp;new&nbsp;Driver();\r\n$DriverFacade-&gt;start();\r\necho&nbsp;&quot;&lt;br&nbsp;/&gt;&quot;;\r\n$DriverFacade-&gt;stop();</pre><h2>浏览器输出<br/></h2><p style=\"text-align: center;\"><img src=\"/ueditor/php/upload/image/20161129/1480386835186748.png\" title=\"1480386835186748.png\" alt=\"facade.png\"/></p><p>我们可以看到，我们通过Driver类将所有相关子类包装了一下，封装了一个接口，实现了开车和停车两个方法。这种包装的方法就叫做外观模式。意识就是说，它对外只暴露出两个有效的方法。以这种方式降低调用者与各子类的耦合度。</p><h2>何时使用</h2><p>首先，在设计初期阶段，应该要有意识将不同的两个层分离；</p><p>其次，在开发阶段，子系统往往因为不断的重构演化而变得越来越复杂，增加外观Facade可以提供一个简单的接口，减少它们之间的依赖；<br/></p><p>第三，在维护一个遗留的大型系统时，可能这个系统已经非常难以维护和扩展，此时，你可以为新系统开发一个外观Facade类，来提供设计粗糙或高度复杂的遗留代码的比较清晰简单的接口，让新系统与Facade对象交互，Facade与遗留代码交互所有复杂的工作。</p>',1480386888,1536616772),(49,27,1,'计算机基础知识','java基础,计算机基础知识','计算机（Computer）全称：电子计算机，俗称电脑。是一种能够按照程序运行，自动、高速处理海量数据的现代化智能电子设备。由硬件和软件所组成，没有安装任何软件的计算机称为裸机。常见的形式有台式计算机、笔记本计算机、大型计算机等。','http://7xviiw.com1.z0.glb.clouddn.com/20170427104411397.jpg',0,3,255,762,'<h2>什么是计算机?</h2><p>计算机（Computer）全称：电子计算机，俗称电脑。是一种能够按照程序运行，自动、高速处理海量数据的现代化智能电子设备。由硬件和软件所组成，没有安装任何软件的计算机称为裸机。常见的形式有台式计算机、笔记本计算机、大型计算机等。</p><p>常见应用:(1)科学计算(2)数据处理(3)自动控制(4)计算机辅助设计(5)人工智能(6)多媒体应用(7)计算级网络等等</p><h2>什么是硬件?</h2><p>计算机硬件（Computer Hardware）是指计算机系统中由电子，机械和光电元件等组成的各种物理装置的总称。这些物理装置按系统结构的要求构成一个有机整体为计算机软件运行提供物质基础。</p><p>计算机的硬件分成5大组成部件：运算器、控制器、存储器、输入设备和输出设备。</p><p>运算器和控制器是计算机的核心，合称中央处理单元（Central Processing Unit，CPU）或处理器。CPU的内部还有一些高速存储单元，被称为寄存器。其中运算器执行所有的算术和逻辑运算；控制器负责把指令逐条从存储器中取出，经译码后向计算机发出各种控制命令；而寄存器为处理单元提供操作所需要的数据。</p><p>存储器是计算机的记忆部分，用来存放程序以及程序中涉及的数据。它分为内部存储器和外部存储器。内部存储器用于存放正在执行的程序和使用的数据，其成本高、容量小，但速度快。外部存储器可用于长期保存大量程序和数据，其成本低、容量大，但速度较慢。</p><p>输入设备和输出设备统称为外部设备，简称外设或I/O设备，用来实现人机交互和机间通信。微型机中常用的输入设备有键盘、鼠标等，输出设备有显示器、打印机等。</p><h2>什么是软件?</h2><p>计算机软件（Computer Software）是使用计算机过程中必不可少的东西，计算机软件可以使计算机按照事先预定好的顺序完成特定的功能</p><p>计算机软件按照其功能划分为系统软件与应用软件：(1)系统软件：DOS(Disk Operating System)、Windows、Linux、Unix、Mac,、Android、iOS(2)应用软件：office、QQ聊天、YY语言、扫雷</p><h2>软件开发和计算机语言概述</h2><p>软件是按照特定顺序组织的计算机数据和指令的集合，那么开发便是软件的制作过程啦。借助开发工具与计算机语言制作软件就是软件开发。</p><p>计算级语言是人与计算机之间进行信息交流沟通的一种特殊语言。它分为以下3种：</p><p>机器语言：机器语言是直接用二进制代码指令表达的计算机语言，指令是用0和1组成的一串代码，它们有一定的位数，并分成若干段，各段的编码表示不同的含义。</p><p>汇编语言：汇编语言是使用一些特殊的符号来代替机器语言的二进制码，计算机不能直接识别，需要用一种软件将汇编语言翻译成机器语言。</p><p>高级语言：使用普通英语进行编写源代码，通过编译器将源代码翻译成计算机直接识别的机器语言，之后再由计算机执行。高级语言包括C,C++,C#,JAVA</p><p>人机交互的两种方式：(1)命令行方式:需要有一个控制台，输入特定的指令，让计算机完成一些操作。较为麻烦，需要记录住一些命令。 (2)图形化界面方式:这种方式简单直观，使用者易于接受，容易上手操作。</p><h2>笔记<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span></h2><p>这一篇主要讲解了下计算机的基础知识，只需做一个了解即可。</p><p><br/></p>',1493261208,1536651037),(50,27,1,'Java语言概述','Java基础,Java语言概述','詹姆斯·高斯林（James Gosling）1977年获得了加拿大卡尔加里大学计算机科学学士学位，1983年获得了美国卡内基梅隆大学计算机科学博士学位，毕业后到IBM工作，设计IBM第一代工作站NeWS系统，但不受重视。后来转至Sun公司，1990年，与Patrick，Naughton和Mike Sheridan等人合作“绿色计划”，后来发展一套语言叫做“Oak”，后改名为Java。','http://7xviiw.com1.z0.glb.clouddn.com/20170427104728309.jpg',0,3,255,664,'<h2>java语言概述</h2><p>(1)Java语言发展史</p><p>詹姆斯·高斯林（James Gosling）1977年获得了加拿大卡尔加里大学计算机科学学士学位，1983年获得了美国卡内基梅隆大学计算机科学博士学位，毕业后到IBM工作，设计IBM第一代工作站NeWS系统，但不受重视。后来转至Sun公司，1990年，与Patrick，Naughton和Mike Sheridan等人合作“绿色计划”，后来发展一套语言叫做“Oak”，后改名为Java。</p><p>(2)Java语言平台</p><p>J2SE(Java 2 Platform Standard Edition)标准版:是为开发普通桌面和商务应用程序提供的解决方案,该技术体系是其他两者的基础，可以完成一些桌面应用程序的开发</p><p>J2ME(Java 2 Platform Micro Edition)小型版:是为开发电子消费产品和嵌入式设备提供的解决方案</p><p>J2EE(Java 2 Platform Enterprise Edition)企业版:是为开发企业环境下的应用程序提供的一套解决方案,该技术体系中包含的技术如 Servlet、Jsp等，主要针对于Web应用程序开发&nbsp;</p><p>(3)Java语言特点:简单性 解释性 面向对象 高性能 分布式处理 多线程 健壮性 动态 结构中立 安全性 开源 跨平台</p><h2>Java语言跨平台原理</h2><p>只要在需要运行java应用程序的操作系统上，先安装一个Java虚拟机(JVM Java Virtual Machine)即可。由JVM来负责Java程序在该系统中的运行。</p><p>write once ,run anywhere!(一处编译,到处运行)</p><h2>JRE和JDK的概述</h2><p>(1)什么是JRE:包括Java虚拟机(JVM Java Virtual Machine)和Java程序所需的核心类库等，如果想要运行一个开发好的Java程序，计算机中只需要安装JRE即可。</p><p>JRE:JVM+类库。&nbsp;</p><p>(2)什么是JDK：JDK是提供给Java开发人员使用的，其中包含了java的开发工具，也包括了JRE。所以安装了JDK，就不用在单独安装JRE了。其中的开发工具：编译工具(javac.exe) &nbsp;打包工具(jar.exe)等</p><p>JDK:JRE+JAVA的开发工具。</p><p>(3)为什么JDK中包含一个JRE:开发完的程序，需要运行一下看看效果。</p><h2>JDK的下载和安装</h2><p>(1)JDK的下载:官网 http://www.oracle.com</p><p>(2)JDK的安装:下一步下一步~~除了安装盘符外，其他没什么需要注意的。</p><p>(3)验证安装是否成功:通过DOS命令，切换到JDK安装的bin目录下,然后分别输入javac和java，如果正常显示一些内容，说明安装成功</p><p>注：这里不再累赘安装过程，很简单。</p><h2>环境变量配置</h2><p>第一步配置JAVA_HOME为jdk的目录，然后配置path，%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin即可<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span></p><h2>JDK安装路径下的目录解释</h2><p>bin目录：该目录用于存放一些可执行程序。</p><p>如javac.exe（java编译器）、java.exe(java运行工具)，jar.exe(打包工具)和* javadoc.exe(文档生成工具)等。</p><p>db目录：db目录是一个小型的数据库。</p><p>从JDK 6.0开始，Java中引用了一个新的成员JavaDB，这是一个纯Java实现、开源的数据库管理系统。这个数据库不仅轻便，而且支持JDBC 4.0所有的规范，在学习JDBC 时，不再需要额外地安装一个数据库软件，选择直接使用JavaDB即可。</p><p>jre目录：&quot;jre&quot;是 Java Runtime Environment 的缩写，意为Java程序运行时环境。此目录是Java运行时环境的根目录，它包括Java虚拟机，运行时的类包，Java应用启动器以及一个bin目录，但不包含开发环境中的开发工具。</p><p>include目录：由于JDK是通过C和C++实现的，因此在启动时需要引入一些C语言的头文件，该目录就是用于存放这些头文件的。</p><p>lib目录：lib是library的缩写，意为 Java 类库或库文件，是开发工具使用的归档包文件。</p><p>src.zip文件：src.zip为src文件夹的压缩文件，src中放置的是JDK核心类的源代码，通过该文件可以查看Java基础类的源代码。</p><h2>第一个hello world</h2><pre class=\"brush:java;toolbar:false\">class&nbsp;HelloWorld&nbsp;{\r\npublic&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\nSystem.out.println(&quot;hello&nbsp;world&quot;);\r\n}\r\n}</pre><p>保存文件为HelloWorld.java, cmd进入文件盘符,javac HelloWorld,java HelloWorld输出hello world。</p><h2>Java语言的书写格式(约定俗成)</h2><p>1,大括号要对齐,并且成对写</p><p>2,左大括号前面有空格</p><p>3,遇到左大括号要缩进,Tab</p><p>4,方法和程序块之间加空行让程序看起来清晰</p><p>5,并排语句之间加空格,例如for语句</p><p>6,运算符两侧加空格</p><h2>java注释</h2><p>/**/多行注释 &nbsp;//单行注释&nbsp;</p><h2>关键字的概述和使用</h2><p>什么是关键字:被Java语言赋予特定含义的单词&nbsp;</p><p>关键字的特点:组成关键字的字母全部小写&nbsp;</p><p>常见关键字:public static void class等&nbsp;</p><p>关键字的注意事项:goto和const作为保留字存在,目前并不使用,类似Editplus这样的高级记事本,针对关键字有特殊的颜色标记，非常直观&nbsp;</p><h2>标识符的概述和组成规则</h2><p>(1)什么是标识符:就是给类,接口,方法,变量等起名字时使用的字符序列&nbsp;</p><p>(2)标识符的组成规则:英文大小写字母、数字字符、$和_&nbsp;</p><p>(3)标识符注意事项：1,不能使用关键字2,不能数字开头&nbsp;</p><p>(4)标识符中常见的命名规则:</p><p>&nbsp;&nbsp;&nbsp;&nbsp;①包最好是域名倒过来,要求所有的字母小写&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;②类或者接口如果是一个单词首字母大写，如果是多个单词每个单词首字母大写(驼峰标识)&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;③方法或者变量,如果是一个单词全部小写,如果是多个单词,从第二个单词首字母大写&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;④常量,如果是一个单词,所有字母大写,如果是多个单词,所有的单词大写,用下划线区分每个单词&nbsp;</p><p><br/></p>',1493261519,1536662385),(51,27,1,'Java数据类型和变量知识','Java基础,Java数据类型和变量知识','什么是常量:在程序执行的过程中其值不可以发生改变,Java中常量的分类:字面值常量和自定义常量:字面值常量的分类：字符串常量（用双引号括起来的内容）、整数常量（所有整数）、小数常量（所有小数）、字符常量（用单引号括起来的内容,里面只能放单个数字,单个字母或单个符号）、布尔常量（较为特殊，只有true和false）和 空常量（null）','http://7xviiw.com1.z0.glb.clouddn.com/20170427105234963.jpg',0,4,255,682,'<h2>常量的概述和使用</h2><p>什么是常量:在程序执行的过程中其值不可以发生改变&nbsp;</p><p>Java中常量的分类:字面值常量和自定义常量</p><p>字面值常量的分类：字符串常量（用双引号括起来的内容）、整数常量（所有整数）、小数常量（所有小数）、字符常量（用单引号括起来的内容,里面只能放单个数字,单个字母或单个符号）、布尔常量（较为特殊，只有true和false）和 空常量（null）</p><h2>不同进制数据的表现形式<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span></h2><p>二进制的数据表现形式:由0,1组成。以0b(b可以大写也可以小写)开头(JDK1.7版本可以表示二进制了)</p><p>八进制的数据表现形式:由0,1,…7组成。以0开头</p><p>十进制的数据表现形式:由0,1,…9组成。整数默认是十进制的&nbsp;</p><p>十六进制的数据表现形式:由0,1,…9,a,b,c,d,e,f(大小写均可)。以0x开头&nbsp;</p><h2>原码反码补码</h2><p>原码:就是二进制定点表示法，即最高位为符号位，“0”表示正，“1”表示负，其余位表示数值的大小。通过一个字节,也就是8个二进制位表示+7和-7,例如0(符号位)<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>0000111和1(符号位)<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>0000111</p><p>反码:正数的反码与其原码相同；负数的反码是对其原码逐位取反，但符号位除外。</p><p>补码:正数的补码与其原码相同；负数的补码是在其反码的末位加1。</p><h2>变量的概述及格式</h2><p>什么是变量:在程序执行的过程中，在某个范围内其值可以发生改变的量</p><p>变量的定义格式:数据类型 变量名 = 变量值;</p><p>为什么要定义变量:用来不断的存放同一类型的常量，并可以重复使用</p><h2>数据类型的概述和分类</h2><p>Java语言是强类型语言，对于每一种数据都定义了明确的具体数据类型，在内存中分配了不同大小的内存空间。</p><p>Java中数据类型有两种:基本数据类型和引用数据类型（数组对象）</p><p>基本数据类型分类(4类8种)&nbsp;</p><p>(1)整数型:byte 占一个字节 &nbsp;-128到127、short 占两个字 &nbsp;-2^15~2^15-1、int 占四个字节 -2^31~2^31-1、long 占八个字节 -2^63~2^63-1</p><p>(2)浮点型:float 占四个字节 -3.403E38~3.403E38 &nbsp;单精度、double 占八个字节-1.798E308~1.798E308 双精度</p><p>(3)字符型:char 占两个字节 0~65535</p><p>(4)布尔型:boolean boolean理论上是占八分之一个字节,因为一个开关就可以决定是true和false了,但是java中boolean类型没有明确指定他的大小</p><h2>使用变量的注意事项&nbsp;</h2><p>作用域问题:同一个区域不能使用相同的变量名&nbsp;</p><p>初始化值问题:局部变量在使用之前必须赋值&nbsp;</p><p>一条语句可以定义多个变量:int a,b,c...;&nbsp;</p><h2>数据类型转换</h2><p>隐式转换:取值范围小的数据类型与取值范围大的数据类型进行运算,会先将小的数据类型提升为大的,再运算</p><p>强制转换:byte变量 = (byte)(int变量);如果超出了被赋值的数据类型的取值范围得到的结果会与你期望的结果不同&nbsp;</p><h2>面试题之变量相加和常量相加的区别</h2><p>看下面的程序是否有问题，如果有问题，请指出并说明理由。</p><pre class=\"brush:java;toolbar:false\">byte&nbsp;b1&nbsp;=&nbsp;3;\r\nbyte&nbsp;b2&nbsp;=&nbsp;4;\r\nbyte&nbsp;b3&nbsp;=&nbsp;b1&nbsp;+&nbsp;b2;\r\n/*\r\n从两方面去回答这个题\r\nb1和b2是两个变量,变量里面存储的值都是变化的,所以在程序运行中JVM是无法判断里面具体的值\r\nbyte类型的变量在进行运算的时候,会自动类型提升为int类型*/\r\nbyte&nbsp;b4&nbsp;=&nbsp;3&nbsp;+&nbsp;4;\r\n//3和4都是常量,java有常量优化机制,就是在编译的的时候直接把3和4的结果赋值给b4了</pre><h2>char数据类型<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span></h2><p>char c = 97;<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>0到65535<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span></p><p>Java语言中的字符char可以存储一个中文汉字吗?为什么呢?</p><p>可以。因为Java语言采用的是Unicode编码。Unicode编码中的每个字符占用两个字节。中文也是占的两个字节,所以，Java中的字符可以存储一个中文汉字</p><h2>算术运算符的注意事项</h2><p>什么是运算符:就是对常量和变量进行操作的符号。</p><p>运算符的分类:算术运算符，赋值运算符，比较(关系或条件)运算符，逻辑运算符，位运算符，三目(元)运算符&nbsp;</p><p>算数运算符有* +,-,*,/,%,++,--&nbsp;</p><p>注意事项：</p><p>(1)+号在java中有三种作用,代表正号,做加法运算,字符串的连接符</p><p>(2)整数相除只能得到整数。如果想得到小数，必须把数据变化为浮点数类型</p><p>(3)/获取的是除法操作的商，%获取的是除法操作的余数</p><p>(4)%运算符:当左边的绝对值小于右边绝对值时,结果是左边;当左边的绝对值等于右边或是右边的倍数时,结果是0;当左边的绝对值大于右边绝对值时,结果是余数;%运算符结果的符号只和左边有关系,与右边无关;任何一个正整数%2结果不是0就是1可以用来当作切换条件&nbsp;</p><h2>算术运算符++和--的用法</h2><p>++:自加。对原有的数据进行+1</p><p>--:自减。对原有的数据进行-1</p><p>注意：</p><p>放在操作数的前面，先自增或者自减，然后再参与运算。</p><p>放在操作数的后面，先参与运算，再自增或者自减。</p><p><br/></p>',1493261750,1536633722),(52,27,1,'Java运算符和流程控制条件语句','Java基础,Java运算符,流程控制,条件语句','逻辑运算符包括：与&,或|,异或^,非!,与&&,或||','http://7xviiw.com1.z0.glb.clouddn.com/20170428093851906.jpg',0,4,255,732,'<h2>逻辑运算符的基本用法</h2><p>逻辑运算符包括：与&amp;,或|,异或^,非!,与&amp;&amp;,或||</p><p>注意事项：</p><p>①&amp;与&amp;&amp;，|与||的区别是，前者全部判断，后者短路判断</p><p>②逻辑运算符一般用于连接boolean类型的表达式（就是用运算符把常量或者变量连接起来的符合java语法的式子：算术表达式：a + b；比较表达式也叫条件表达式：a == b）或者值。</p><p>结论：</p><p>* &amp;逻辑与:有false则false。</p><p>* |逻辑或:有true则true。</p><p>* ^逻辑异或:相同为false，不同为true。</p><p>* !逻辑非:非false则true，非true则false。</p><h2>三元运算符的基本用法</h2><p>(关系表达式) ? 表达式1 : 表达式2;</p><pre class=\"brush:java;toolbar:false\">int&nbsp;a&nbsp;=&nbsp;10;\r\nint&nbsp;b&nbsp;=&nbsp;20;\r\nint&nbsp;c&nbsp;=&nbsp;a&nbsp;&gt;&nbsp;b&nbsp;?&nbsp;1&nbsp;:&nbsp;0;\r\nSystem.out.println(c);&nbsp;//输出0</pre><h2>键盘录入的基本格式讲解</h2><pre class=\"brush:java;toolbar:false\">import&nbsp;java.util.Scanner;//导包&nbsp;在class上面\r\npublic&nbsp;class&nbsp;Test{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scanner&nbsp;sc&nbsp;=&nbsp;new&nbsp;Scanner(System.in);//创建键盘录入对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;x&nbsp;=&nbsp;sc.nextInt();//获取输入的数据\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;您输入的是：&quot;&nbsp;+&nbsp;x);&nbsp;//输出\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><h2>顺序结构语句</h2><p>流程控制语句：可以控制程序的执行流程。</p><p>流程控制语句的分类：顺序结构、选择结构和循环结构</p><p>执行流程：从上往下，依次执行</p><h2>选择结构if语句</h2><p>选择结构的分类：if语句和switch语句</p><p>&nbsp;if语句有几种格式：if()、if()else()、if()else if()else()</p><p>执行流程：先计算比较表达式的值，看其返回值是true还是false。如果是true，就执行语句体；如果是false，就不执行语句体；</p><p>注意事项:&nbsp;</p><p>①比较表达式无论简单还是复杂，结果必须是boolean类型</p><p>②if语句控制的语句体如果是一条语句，大括号可以省略；如果是多条语句，就不能省略。建议永远不要省略。</p><p>③一般来说：有左大括号就没有分号，有分号就没有左大括号</p><h2>选择结构switch语句&nbsp;</h2><pre class=\"brush:java;toolbar:false\">switch(表达式)&nbsp;{/*表达式的内容为整数表达式或枚举常量，整数表达式即为int或integer型，因为byte、short、char都可以转换成整型，而String、long不可以，所以switch能作用在byte上而不能作用在long和String上,但是jdk7中加入对String的支持，注意版本哦*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;值1：\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;语句体1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;值2：\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;语句体2;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;…\r\n&nbsp;&nbsp;&nbsp;&nbsp;default：\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;语句体n+1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n}</pre><p>注意事项：</p><p>①case后面只能是常量，不能是变量，而且，多个case后面的值不能出现相同的</p><p>②default可以省略，但是不建议，因为它的作用是对不正确的情况给出提示。</p><p>③break最后一个可以省略,其他最好不要省略,会出现一个现象：case穿透。</p><p>④遇到break就结束了,执行到switch的右大括号就结束了</p><h2>选择结构if语句和switch语句的区别</h2><p>switch建议判断固定值的时候用,而if建议判断区间或范围的时候用</p>',1493343701,1536625633),(53,27,1,'Java流程控制循环语句和方法概述','Java基础,流程控制,循环语句,方法概述','循环结构的分类：for,while,do...while','http://7xviiw.com1.z0.glb.clouddn.com/20170428094205727.jpg',0,5,255,730,'<h2>循环结构概述和for语句的格式及其使用</h2><p>循环结构的分类：for,while,do...while&nbsp;</p><p>循环结构for语句的格式：</p><pre class=\"brush:java;toolbar:false\">for(初始化表达式;条件表达式;循环后的操作表达式)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;循环体;\r\n}</pre><p>执行流程： a:执行初始化语句-&gt;b:执行判断条件语句,看其返回值是true还是false,如果是true，就继续执行,如果是false，就结束循环-&gt;c:执行循环体语句-&gt;d:执行循环后的操作表达式-&gt;e:回到B继续。</p><p>注意事项:</p><p>①判断条件语句无论简单还是复杂结果是boolean类型。</p><p>②循环体语句如果是一条语句，大括号可以省略；如果是多条语句，大括号不能省略。建议永远不要省略。</p><p>③一般来说：有左大括号就没有分号，有分号就没有左大括号</p><h2>循环结构while语句的格式和基本使用<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span></h2><p>while循环的基本格式：</p><pre class=\"brush:java;toolbar:false\">while(判断条件语句)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;循环体语句;\r\n}</pre><p>完整格式：</p><pre class=\"brush:java;toolbar:false\">初始化语句;\r\nwhile(判断条件语句)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;循环体语句;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;控制条件语句;\r\n}</pre><p>执行流程：a:执行初始化语句-&gt;b:执行判断条件语句,看其返回值是true还是false如果是true，就继续执行 如果是false，就结束循环-&gt;c:执行循环体语句-&gt;d:执行控制条件语句-&gt;e:回到B继续。</p><h2>循环结构do...while语句的格式和基本使用</h2><pre class=\"brush:java;toolbar:false\">do&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;循环体语句;\r\n}while(判断条件语句);</pre><p>完整格式；</p><pre class=\"brush:java;toolbar:false\">初始化语句;\r\ndo&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;循环体语句;\r\n&nbsp;&nbsp;&nbsp;&nbsp;控制条件语句;\r\n}while(判断条件语句);</pre><p>执行流程：a:执行初始化语句-&gt;b:执行循环体语句-&gt;c:执行控制条件语句-&gt;d:执行判断条件语句,看其返回值是true还是false,如果是true，就继续执行,如果是false，就结束循环-&gt;e:回到b继续。</p><h2>循环结构三种循环语句的区别</h2><p>do...while循环至少执行一次循环体。而for,while循环必须先判断条件是否成立，然后决定是否执行循环体语句。</p><h2>循环结构循环嵌套输出4行5列的星星</h2><pre class=\"brush:java;toolbar:false\">public&nbsp;class&nbsp;Test{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;hang&nbsp;=&nbsp;4;//行\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;lie&nbsp;&nbsp;=&nbsp;5;//列\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;hang;&nbsp;i++){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&lt;&nbsp;lie;&nbsp;j++){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(&quot;*&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&#39;\\n&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><h2>控制跳转语句</h2><p>break的使用场景:只能在switch和循环中&nbsp;</p><p>continue的使用场景:只能在循环中&nbsp;</p><p>return的作用:其实它的作用不是结束循环的，而是结束方法的</p><h2>方法概述和格式说明</h2><p>为什么要有方法:提高代码的复用性&nbsp;</p><p>什么是方法:完成特定功能的代码块。&nbsp;</p><p>方法的格式:</p><pre class=\"brush:java;toolbar:false\">修饰符&nbsp;返回值类型&nbsp;方法名(参数类型&nbsp;参数名1,参数类型&nbsp;参数名2...)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;方法体语句;\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;返回值;&nbsp;\r\n}</pre><p>方法的格式说明:</p><p>①修饰符：目前就用 public package-private(无修饰符默认) protected private static final abstract native synchronized&nbsp;</p><p>②返回值类型：就是功能结果的数据类型。</p><p>③方法名：符合命名规则即可。方便我们的调用。</p><p>④参数：实际参数：就是实际参与运算的。形式参数；就是方法定义上的，用于接收实际参数的。</p><p>⑤参数类型：就是参数的数据类型</p><p>⑥参数名：就是变量名</p><p>⑦方法体语句：就是完成功能的代码。</p><p>⑧return：结束方法的。</p><p>⑨返回值：就是功能的结果，由return带给调用者。&nbsp;</p><p>方法的注意事项：</p><p>①方法不调用不执行</p><p>②方法与方法是平级关系，不能嵌套定义</p><p>③方法定义的时候参数之间用逗号隔开</p><p>④方法调用的时候不用在传递数据类型</p><p>⑤如果方法有明确的返回值，一定要有return带回一个值</p><h2>方法重载概述和基本使用</h2><p>方法重载：在同一个类中，方法名相同，参数列表不同。与返回值类型无关。</p><p>参数列表不同：参数个数不同、参数类型不同、参数的顺序不同(算重载,但是在开发中不用)</p>',1493343987,1536572873),(54,27,1,'unicode,ascii,utf-8编码的区别','unicode,ascii,utf-8','很久很久以前，有一群人，他们决定用8个可以开合的晶体管来组合成不同的状态，以表示世界上的万物。他们看到8个开关状态是好的，于是他们把这称为”字节“。再后来，他们又做了一些可以处理这些字节的机器，机器开动了，可以用字节来组合出很多状态，状态开始变来变去','http://7xviiw.com1.z0.glb.clouddn.com/20170605101843926.jpg',0,7,255,648,'<p>很久很久以前，有一群人，他们决定用8个可以开合的晶体管来组合成不同的状态，以表示世界上的万物。他们看到8个开关状态是好的，于是他们把这称为”字节“。再后来，他们又做了一些可以处理这些字节的机器，机器开动了，可以用字节来组合出很多状态，状态开始变来变去。他们看到这样是好的，于是它们就这机器称为”计算机“。<br/></p><p>开始计算机只在美国用。八位的字节一共可以组合出256(2的8次方)种不同的状态。 他们把其中的编号从0开始的32种状态分别规定了特殊的用途，一但终端、打印机遇上约定好的这些字节被传过来时，就要做一些约定的动作。遇上0×10, 终端就换行，遇上0×07, 终端就向人们嘟嘟叫，例好遇上0x1b, 打印机就打印反白的字，或者终端就用彩色显示字母。他们看到这样很好，于是就把这些0×20以下的字节状态称为”控制码”。他们又把所有的空格、标点符号、数字、大小写字母分别用连续的字节状态表示，一直编到了第127号，这样计算机就可以用不同字节来存储英语的文字了。大家看到这样，都感觉很好，于是大家都把这个方案叫做 ANSI 的”Ascii”编码（American Standard Code for Information Interchange，美国信息互换标准代码）。当时世界上所有的计算机都用同样的ASCII方案来保存英文文字。</p><p>后来，就像建造巴比伦塔一样，世界各地的都开始使用计算机，但是很多国家用的不是英文，他们的字母里有许多是ASCII里没有的，为了可以在计算机保存他们的文字，他们决定采用 127号之后的空位来表示这些新的字母、符号，还加入了很多画表格时需要用下到的横线、竖线、交叉等形状，一直把序号编到了最后一个状态255。从128到255这一页的字符集被称”扩展字符集“。从此之后，贪婪的人类再没有新的状态可以用了，美帝国主义可能没有想到还有第三世界国家的人们也希望可以用到计算机吧！</p><p>等中国人们得到计算机时，已经没有可以利用的字节状态来表示汉字，况且有6000多个常用汉字需要保存呢。但是这难不倒智慧的中国人民，我们不客气地把那些127号之后的奇异符号们直接取消掉, 规定：一个小于127的字符的意义与原来相同，但两个大于127的字符连在一起时，就表示一个汉字，前面的一个字节（他称之为高字节）从0xA1用到 0xF7，后面一个字节（低字节）从0xA1到0xFE，这样我们就可以组合出大约7000多个简体汉字了。在这些编码里，我们还把数学符号、罗马希腊的字母、日文的假名们都编进去了，连在 ASCII 里本来就有的数字、标点、字母都统统重新编了两个字节长的编码，这就是常说的”全角”字符，而原来在127号以下的那些就叫”半角”字符了。&nbsp;</p><p>中国人民看到这样很不错，于是就把这种汉字方案叫做 “GB2312“。GB2312 是对 ASCII 的中文扩展。但是中国的汉字太多了，我们很快就就发现有许多人的人名没有办法在这里打出来，特别是某些很会麻烦别人的国家领导人。于是我们不得不继续把 GB2312 没有用到的码位找出来老实不客气地用上。&nbsp;</p><p>后来还是不够用，于是干脆不再要求低字节一定是127号之后的内码，只要第一个字节是大于127就固定表示这是一个汉字的开始，不管后面跟的是不是扩展字符集里的内容。结果扩展之后的编码方案被称为 GBK 标准，GBK包括了GB2312 的所有内容，同时又增加了近20000个新的汉字（包括繁体字）和符号。 后来少数民族也要用电脑了，于是我们再扩展，又加了几千个新的少数民族的字，GBK扩成了 GB18030。</p><p>从此之后，中华民族的文化就可以在计算机时代中传承了。 中国的程序员们看到这一系列汉字编码的标准是好的，于是通称他们叫做 “DBCS“（DoubleByte Charecter Set 双字节字符集）。在DBCS系列标准里，最大的特点是两字节长的汉字字符和一字节长的英文字符并存于同一套编码方案里，因此他们写的程序为了支持中文处理，必须要注意字串里的每一个字节的值，如果这个值是大于127的，那么就认为一个双字节字符集里的字符出现了。那时候凡是受过加持，会编程的计算机僧侣们都要每天念下面这个咒语数百遍： “一个汉字算两个英文字符！一个汉字算两个英文字符……”因为当时各个国家都像中国这样搞出一套自己的编码标准，结果互相之间谁也不懂谁的编码，谁也不支持别人的编码，连大陆和台湾这样只相隔了150海里，使用着同一种语言的兄弟地区，也分别采用了不同的 DBCS 编码方案——当时的中国人想让电脑显示汉字，就必须装上一个”汉字系统”，专门用来处理汉字的显示、输入的问题，但是那个台湾的愚昧封建人士写的算命程序就必须加装另一套支持 BIG5 编码的什么”倚天汉字系统”才可以用，装错了字符系统，显示就会乱了套！</p><p>这怎么办？而且世界民族之林中还有那些一时用不上电脑的穷苦人民，他们的文字又怎么办？ 真是计算机的巴比伦塔命题啊！正在这时，大天使加百列及时出现了——一个叫 ISO （国际标谁化组织）的国际组织决定着手解决这个问题。他们采用的方法很简单：废了所有的地区性编码方案，重新搞一个包括了地球上所有文化、所有字母和符号的编码！他们打算叫它”Universal Multiple-Octet Coded Character Set”，简称 UCS, 俗称 “unicode“。</p><p>unicode开始制订时，计算机的存储器容量极大地发展了，空间再也不成为问题了。于是 ISO 就直接规定必须用两个字节，也就是16位来统一表示所有的字符，对于ASCII里的那些“半角”字符，unicode包持其原编码不变，只是将其长度由原来的8位扩展为16位，而其他文化和语言的字符则全部重新统一编码。由于”半角”英文符号只需要用到低8位，所以其高8位永远是0，因此这种大气的方案在保存英文文本时会多浪费一倍的空间。这时候，从旧社会里走过来的程序员开始发现一个奇怪的现象：他们的strlen函数靠不住了，一个汉字不再是相当于两个字符了，而是一个！是的，从unicode开始，无论是半角的英文字母，还是全角的汉字，它们都是统一的”一个字符“！同时，也都是统一的”两个字节“，请注意”字符”和”字节”两个术语的不同，“字节”是一个8位的物理存贮单元，而“字符”则是一个文化相关的符号。在unicode中，一个字符就是两个字节。一个汉字算两个英文字符的时代已经快过去了。unicode同样也不完美，这里就有两个的问题，一个是，如何才能区别unicode和ascii？计算机怎么知道三个字节表示一个符号，而不是分别表示三个符号呢？第二个问题是，我们已经知道，英文字母只用一个字节表示就够了，如果unicode统一规定，每个符号用三个或四个字节表示，那么每个英文字母前都必然有二到三个字节是0，这对于存储空间来说是极大的浪费，文本文件的大小会因此大出二三倍，这是难以接受的。</p><p>unicode在很长一段时间内无法推广，直到互联网的出现，为解决unicode如何在网络上传输的问题，于是面向传输的众多 UTF（UCS Transfer Format）标准出现了，顾名思义，UTF-8就是每次8个位传输数据，而UTF-16就是每次16个位。UTF-8就是在互联网上使用最广的一种unicode的实现方式，这是为传输而设计的编码，并使编码无国界，这样就可以显示全世界上所有文化的字符了。UTF-8最大的一个特点，就是它是一种变长的编码方式。它可以使用1~4个字节表示一个符号，根据不同的符号而变化字节长度，当字符在ASCII码的范围时，就用一个字节表示，保留了ASCII字符一个字节的编码做为它的一部分，注意的是unicode一个中文字符占2个字节，而UTF-8一个中文字符占3个字节）。从unicode到uft-8并不是直接的对应，而是要过一些算法和规则来转换。</p><pre class=\"brush:html;toolbar:false\">Unicode符号范围&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;UTF-8编码方式\r\n(十六进制)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;（二进制）\r\n—————————————————————–\r\n0000&nbsp;0000-0000&nbsp;007F&nbsp;|&nbsp;0xxxxxxx\r\n0000&nbsp;0080-0000&nbsp;07FF&nbsp;|&nbsp;110xxxxx&nbsp;10xxxxxx\r\n0000&nbsp;0800-0000&nbsp;FFFF&nbsp;|&nbsp;1110xxxx&nbsp;10xxxxxx&nbsp;10xxxxxx\r\n0001&nbsp;0000-0010&nbsp;FFFF&nbsp;|&nbsp;11110xxx&nbsp;10xxxxxx&nbsp;10xxxxxx&nbsp;10xxxxxx</pre><p><br/></p>',1494471574,1536595195),(55,27,1,'Java数组概述','Java基础,Java数组概述','为了存储同种数据类型的多个值，所以有了数组这个概念。\r\n数组是存储同一种数据类型多个元素的集合，也可以看成是一个容器。数组既可以存储基本数据类型，也可以存储引用数据类型。','http://7xviiw.com1.z0.glb.clouddn.com/20170605101957888.jpg',0,5,255,683,'<h2>数组概述和定义格式说明</h2><p>为了存储同种数据类型的多个值，所以有了数组这个概念。</p><p>数组是存储同一种数据类型多个元素的集合，也可以看成是一个容器。数组既可以存储基本数据类型，也可以存储引用数据类型。</p><p>数组定义格式：</p><h2>数组的初始化动态初始化</h2><p>数组的初始化就是为数组开辟连续的内存空间，并为每个数组元素赋予值，那么如何对数组进行初始化呢？</p><p>Java数组的初始化分为动态初始化和静态初始化:</p><p>①动态初始化:只指定长度，由系统给出初始化值，例如：int[] arr = new int[5]</p><p>②静态初始化给出初始化值，由系统决定长度，例如 int[] arr = {1,2,3,4,5};</p><h2>数组操作的两个常见小问题越界和空指针</h2><p>ArrayIndexOutOfBoundsException:数组索引越界异常（原因：你访问了不存在的索引）</p><p>NullPointerException:空指针异常（原因：数组已经不在指向堆内存了。而你还用数组名去访问元素）</p><h2>数组的遍历</h2><p>数组遍历就是依次输出数组中的每一个元素。数组的属性arr.length是数组的长度。</p><pre class=\"brush:java;toolbar:false\">public&nbsp;static&nbsp;void&nbsp;print(int[]&nbsp;arr)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;i&nbsp;&lt;&nbsp;arr.length&nbsp;;i++&nbsp;)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(arr[i]&nbsp;+&nbsp;&quot;&nbsp;&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><h2>数组获取最值</h2><p><br/></p><pre class=\"brush:java;toolbar:false\">public&nbsp;static&nbsp;int&nbsp;getMax(int[]&nbsp;arr)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;max&nbsp;=&nbsp;arr[0];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//注意这点必须为第一个元素，不能为0，否则出现负数，0为最大\r\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;1;i&nbsp;&lt;&nbsp;arr.length&nbsp;;i++&nbsp;)&nbsp;{//从数组的第二个元素开始遍历\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(max&nbsp;&lt;&nbsp;arr[i])&nbsp;{//如果max记录的值小于的数组中的元素\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max&nbsp;=&nbsp;arr[i];//max记录住较大的\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;max;\r\n}</pre><h2>数组反转</h2><pre class=\"brush:java;toolbar:false\">public&nbsp;static&nbsp;void&nbsp;reverseArray(int[]&nbsp;arr)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;i&nbsp;&lt;&nbsp;arr.length&nbsp;/&nbsp;2&nbsp;;&nbsp;i++)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//arr[0]和arr[arr.length-1-0]交换\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//arr[1]和arr[arr.length-1-1]交换\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//arr[2]和arr[arr.lentth-1-2]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//...\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;temp&nbsp;=&nbsp;arr[i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[i]&nbsp;=&nbsp;arr[arr.length-1-i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[arr.length-1-i]&nbsp;=&nbsp;temp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><h2>数组基本查找</h2><pre class=\"brush:java;toolbar:false\">数组元素查找(查找指定元素第一次在数组中出现的索引)\r\npublic&nbsp;static&nbsp;int&nbsp;getIndex(int[]&nbsp;arr,int&nbsp;value)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;i&nbsp;&lt;&nbsp;arr.length&nbsp;;i++&nbsp;)&nbsp;{//数组的遍历\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(arr[i]&nbsp;==&nbsp;value)&nbsp;{//如果数组中的元素与查找的元素匹配\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;i;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;-1;\r\n}</pre><h2>二维数组概述</h2><pre class=\"brush:java;toolbar:false\">/*\r\n数据类型&nbsp;数组名[][]&nbsp;=&nbsp;new&nbsp;数据类型[m][n];\r\n数据类型[]&nbsp;数组名[]&nbsp;=&nbsp;new&nbsp;数据类型[m][n];\r\n数据类型[][]&nbsp;数组名&nbsp;=&nbsp;new&nbsp;数据类型[m][n];&nbsp;//常用，建议这么用\r\n数据类型[][]&nbsp;数组名&nbsp;=&nbsp;new&nbsp;数据类型[5][n];\r\n数据类型[][]&nbsp;数组名&nbsp;=&nbsp;{{1,2,3},{2,2,3}};\r\n*/\r\n//注意下面定义的区别\r\nint&nbsp;x;\r\nint&nbsp;y;\r\nint&nbsp;x,y;\r\nint[]&nbsp;x;\r\nint[]&nbsp;y[];\r\n//int[]&nbsp;x,y[];x是一维数组,y是二维数组</pre><h2>二维数组遍历</h2><pre class=\"brush:java;toolbar:false\">int[][]&nbsp;arr&nbsp;=&nbsp;{{1,2,3},{4,5},{6,7,8,9}};\r\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;i&nbsp;&lt;&nbsp;arr.length&nbsp;;i++&nbsp;)&nbsp;{//获取到每个二维数组中的一维数组\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;j&nbsp;=&nbsp;0;j&nbsp;&lt;&nbsp;arr[i].length&nbsp;;j++&nbsp;)&nbsp;{//获取每个一维数组中的元素\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.print(arr[i][j]&nbsp;+&nbsp;&quot;&nbsp;&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;System.out.println();\r\n}</pre><h2>Java中的参数传递问题</h2><pre class=\"brush:java;toolbar:false\">public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;a&nbsp;=&nbsp;10;\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;b&nbsp;=&nbsp;20;\r\n&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;a:&quot;+a+&quot;,b:&quot;+b);//&nbsp;a:10,b:20\r\n&nbsp;&nbsp;&nbsp;&nbsp;change(a,b);&nbsp;&nbsp;&nbsp;//&nbsp;a:20,b:40\r\n&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;a:&quot;+a+&quot;,b:&quot;+b);//&nbsp;a:10,b:20&nbsp;&nbsp;//基本数据是值传递\r\n&nbsp;&nbsp;&nbsp;&nbsp;int[]&nbsp;arr&nbsp;=&nbsp;{1,2,3,4,5};&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;change(arr);\r\n&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(arr[1]);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//数组是引用传递\r\n}\r\npublic&nbsp;static&nbsp;void&nbsp;change(int&nbsp;a,int&nbsp;b)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;=&nbsp;b;\r\n&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;=&nbsp;a&nbsp;+&nbsp;b;\r\n&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;a:&quot;+a+&quot;,b:&quot;+b);\r\n}\r\npublic&nbsp;static&nbsp;void&nbsp;change(int[]&nbsp;arr)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;for(int&nbsp;x=0;&nbsp;x&lt;arr.length;&nbsp;x++)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(arr[x]%2==0)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[x]*=2;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p><br/></p>',1496629445,1536616232),(56,27,1,'Java类与对象概述','Java基础,Java面向对象,Java类与对象','面向对象开发就是不断的创建对象，使用对象，指挥对象做事情。\r\n面向对象特征：封装(encapsulation)、继承(inheritance)和多态(polymorphism)','http://7xviiw.com1.z0.glb.clouddn.com/20170605102512347.jpg',0,5,255,994,'<h2>面向对象思想概述</h2><p>比如猪八戒吃水果，面向过程：吃(猪八戒,水果),面向对象：猪八戒.吃(水果)。</p><p>面向对象思想特点</p><p>①是一种更符合我们思想习惯的思想</p><p>②可以将复杂的事情简单化</p><p>③将我们从执行者变成了指挥者</p><p>④角色发生了转换</p><p>面向对象开发就是不断的创建对象，使用对象，指挥对象做事情。</p><p>面向对象特征：封装(encapsulation)、继承(inheritance)和多态(polymorphism)</p><h2>类与对象概述</h2><p>我们学习编程就是为了把我们日常生活中实物用学习语言描述出来，那么我们该如何描述现实世界事物呢？</p><p>①属性<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>就是该事物的描述信息(事物身上的名词)</p><p>②行为<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>就是该事物能够做什么(事物身上的动词)</p><p>Java中最基本的单位是类,Java中用class描述事物也是如此</p><p>①成员变量<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>就是事物的属性</p><p>②成员方法<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>就是事物的行为</p><p>定义类其实就是定义类的成员(成员变量和成员方法)</p><p>①成员变量<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>和以前定义变量是一样的，只不过位置发生了改变。在类中，方法外。</p><p>②成员方法<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>和以前定义方法是一样的，只不过把static去掉，加上static则变成了静态方法。</p><p>类和对象的概念：类是一组相关的属性和行为的集合，对象是该类事物的具体体现</p><p>对象的使用：</p><p>类名 对象名 = new 类名();</p><p>对象名.变量名</p><p>对象名.方法名(...)</p><h2>成员变量和局部变量的区别</h2><p>①在类中的位置不同：成员变量：在类中方法外，局部变量：在方法定义中或者方法声明上</p><p>②在内存中的位置不同：成员变量：在堆内存(成员变量属于对象,对象进堆内存)，局部变量：在栈内存(局部变量属于方法,方法进栈内存)</p><p>③生命周期不同：成员变量：随着对象的创建而存在，随着对象的消失而消失，局部变量：随着方法的调用而存在，随着方法的调用完毕而消失</p><p>④初始化值不同：成员变量：有默认初始化值，局部变量：没有默认初始化值，必须定义，赋值，然后才能使用。</p><p>注意事项：</p><p>①局部变量名称可以和成员变量名称一样，在方法中使用的时候，采用的是就近原则。</p><p>②基本数据类型变量包括哪些:byte,short,int,long,float,double,boolean,char</p><p>③引用数据类型变量包括哪些:数组,类,接口,枚举</p><h2>匿名对象的概述</h2><p>匿名对象就是没有名字的对象 ，他只调用一次。匿名对象可以作为实际参数传递</p><p>new 类名().方法();</p><p>调用多次的时候，不适合。匿名对象调用完毕就是垃圾。可以被垃圾回收器回收。</p><h2>封装的概述</h2><p>封装是指隐藏对象的属性和实现细节，仅对外提供公共访问方式。</p><p>封装好处：1、隐藏实现细节，提供公共的访问方式2、提高了代码的复用性3、提高安全性。</p><p>封装原则：1、将不需要对外提供的内容都隐藏起来2、把属性隐藏，提供公共方法对其访问。</p><h2>this关键字的概述</h2><p>this关键字特点：代表当前对象的引用 ，用来区分成员变量和局部变量重名</p><h2>手机类代码<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>&nbsp;</h2><pre class=\"brush:java;toolbar:false\">class&nbsp;Demo_Phone&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Phone&nbsp;p1&nbsp;=&nbsp;new&nbsp;Phone();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1.setBrand(&quot;三星&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1.setPrice(5288);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(p1.getBrand()&nbsp;+&nbsp;&quot;...&quot;&nbsp;+&nbsp;p1.getPrice());\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1.call();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1.sendMessage();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1.playGame();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n/*\r\n手机类\r\n属性:品牌brand,价格price\r\n行为:打电话call,发短信sendMessage,玩游戏,playGame\r\n*/\r\nclass&nbsp;Phone&nbsp;{//java&nbsp;bean\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;String&nbsp;brand;//品牌\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;int&nbsp;price;//价格\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setBrand(String&nbsp;brand)&nbsp;{//设置品牌\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.brand&nbsp;=&nbsp;brand;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;getBrand()&nbsp;{//获取品牌\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.brand;//this.可以省略,你不加系统会默认给你加\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setPrice(int&nbsp;price)&nbsp;{//设置价格\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.price&nbsp;=&nbsp;price;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;int&nbsp;getPrice()&nbsp;{//获取价格\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;price;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;call()&nbsp;{//打电话\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;打电话&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;sendMessage()&nbsp;{//发短信\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;发短信&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;playGame()&nbsp;{//玩游戏\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;玩游戏&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p><br/></p>',1496629681,1536700000),(57,27,1,'Java类与对象概述','Java基础,Java面向对象,Java类与对象','构造方法概述和作用:给对象的数据(属性)进行初始化,构造方法格式特点:a:方法名与类名相同(大小也要与类名一致)b:没有返回值类型，连void都没有c:没有具体的返回值return;','http://7xviiw.com1.z0.glb.clouddn.com/20170606090955911.jpg',0,6,255,763,'<h2>构造方法Constructor概述和格式</h2><p>构造方法概述和作用:</p><p>给对象的数据(属性)进行初始化</p><p>构造方法格式特点:</p><p>a:方法名与类名相同(大小也要与类名一致)</p><p>b:没有返回值类型，连void都没有</p><p>c:没有具体的返回值return;</p><h2>构造方法的重载及注意事项</h2><p>a:如果我们没有给出构造方法，系统将自动提供一个无参构造方法。</p><p>b:如果我们给出了构造方法，系统将不再提供默认的无参构造方法。 注意：这个时候，如果我们还想使用无参构造方法，就必须自己给出。建议永远自己给出无参构造方法</p><h2>给成员变量赋值的两种方式的区别</h2><p>setXxx()方法与构造方法</p><h2>static关键字的特点</h2><p>a:随着类的加载而加载</p><p>b:优先于对象存在</p><p>c:被类的所有对象共享</p><p>d:可以通过类名调用</p><h2>static的注意事项</h2><p>a:在静态方法中是没有this关键字的</p><p>静态是随着类的加载而加载，this是随着对象的创建而存在。</p><p>静态比对象先存在。</p><p>b:静态方法只能访问静态的成员变量和静态的成员方法</p><p>静态方法：</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>成员变量：只能访问静态变量</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>成员方法：只能访问静态成员方法</p><p>非静态方法：</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>成员变量：可以是静态的，也可以是非静态的</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>成员方法：可是是静态的成员方法，也可以是非静态的成员方法。</p><p>简单记：</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>静态只能访问静态。</p><h2>静态变量和成员变量的区别</h2><p>*静态变量也叫类变量 &nbsp;成员变量也叫对象变量</p><p>A:所属不同</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* 静态变量属于类，所以也称为为类变量</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* 成员变量属于对象，所以也称为实例变量(对象变量)</p><p>B:内存中位置不同</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* 静态变量存储于方法区的静态区</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* 成员变量存储于堆内存</p><p>C:内存出现时间不同</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* 静态变量随着类的加载而加载，随着类的消失而消失</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* 成员变量随着对象的创建而存在，随着对象的消失而消失</p><p>&nbsp;D:调用不同</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* 静态变量可以通过类名调用，也可以通过对象调用</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* 成员变量只能通过对 象名调用</p><h2>main方法的格式详细解释</h2><p>A:格式</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* public static void main(String[] args) {}</p><p>B:针对格式的解释</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* public 被jvm调用，访问权限足够大。</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* static 被jvm调用，不用创建对象，直接类名访问</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* void被jvm调用，不需要给jvm返回值</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* main 一个通用的名称，虽然不是关键字，但是被jvm识别</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* String[] args 以前用于接收键盘录入的</p><p>C:演示案例</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* 通过args接收键盘例如数据</p><h2>说明书的制作过程</h2><p>A:对工具类加入文档注释</p><p>B:通过javadoc命令生成说明书</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* @author(提取作者内容)</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* @version(提取版本内容)</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* javadoc -d 指定的文件目录 -author -version ArrayTool.java</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* @param 参数名称//形式参数的变量名称@return 函数运行完返回的数据</p><h2>学习Math类的随机数功能</h2><p>A:Math类概述</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* 类包含用于执行基本数学运算的方法</p><p>B:Math类特点</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* 由于Math类在java.lang包下，所以不需要导包。</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* 因为它的成员全部是静态的,所以私有了构造方法</p><p>C:获取随机数的方法</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* public static double random():返回带正号的 double 值，该值大于等于 0.0 且小于 1.0。</p><p>D:我要获取一个1-100之间的随机数，肿么办?</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>* int number = (int)(Math.random()*100)+1;</p><p><br/></p>',1496711517,1536721865),(58,12,1,'App开放接口api安全性—Token签名sign的设计与实现','token设计','App开放接口api安全性—Token签名sign的设计与实现','http://7xviiw.com1.z0.glb.clouddn.com/20170718110455412.jpg',0,5,255,1163,'<h2>前言</h2><p>在app开放接口api的设计中，避免不了的就是安全性问题，因为大多数接口涉及到用户的个人信息以及一些敏感的数据，所以对这些接口需要进行身份的认证，那么这就需要用户提供一些信息，比如用户名密码等，但是为了安全起见让用户暴露的明文密码次数越少越好，我们一般在web项目中，大多数采用保存的session中，然后在存一份到cookie中，来保持用户的回话有效性。但是在app提供的开放接口中，后端服务器在用户登录后如何去验证和维护用户的登陆有效性呢，以下是参考项目中设计的解决方案，其原理和大多数开放接口安全验证一样，如淘宝的开放接口token验证，微信开发平台token验证都是同理。</p><h2>对于敏感的api接口，需使用https协议</h2><p>https是在http超文本传输协议加入SSL层，它在网络间通信是加密的，所以需要加密证书。</p><p>https协议需要ca证书，一般需要交费。</p><h2>签名的设计</h2><p>原理：用户登录后向服务器提供用户认证信息（如账户和密码），服务器认证完后给客户端返回一个Token令牌，用户再次获取信息时，带上此令牌，如果令牌正取，则返回数据。对于获取Token信息后，访问用户相关接口，客户端请求的url需要带上如下参数：</p><p>时间戳：timestamp</p><p>Token令牌：token</p><p>然后将所有用户请求的参数按照字母排序（包括timestamp，token），然后更具MD5加密（可以加点盐），全部大写，生成sign签名，这就是所说的url签名算法。然后登陆后每次调用用户信息时，带上sign，timestamp，token参数。</p><p>例如：原请求https://www.xxx.cn/index.php?city=北京 （post和get都一样，对所有参数排序加密）</p><p>加上时间戳和token</p><p>https://www.xxx.cn/index.php?city=北京×tamp=12445323134&amp;token=wefkfjdskfjewfjkjfdfnc&nbsp;</p><p>然后更具url参数生成sign</p><p>最终的请求如</p><p>https://www.xxx.cn/index.php?city=北京×tamp=12445323134&amp;token=wefkfjdskfjewfjkjfdfnc&amp;sign=FDK2434JKJFD334FDF2&nbsp;</p><p>其最终的原理是减小明文的暴露次数；保证数据安全的访问。</p><h2>具体实现如下</h2><p>1. api请求客户端想服务器端一次发送用用户认证信息（用户名和密码），服务器端请求到改请求后，验证用户信息是否正确。</p><p>如果正确：则返回一个唯一不重复的字符串（一般为UUID），然后在Redis（任意缓存服务器）中维护Token----Uid的用户信息关系，以便其他api对token的校验。</p><p>如果错误：则返回错误码。</p><p>2.服务器设计一个url请求拦截规则</p><p>（1）判断是否包含timestamp，token，sign参数，如果不含有返回错误码。</p><p>（2）判断服务器接到请求的时间和参数中的时间戳是否相差很长一段时间（时间自定义如半个小时），如果超过则说明该 url已经过期（如果url被盗，他改变了时间戳，但是会导致sign签名不相等）。</p><p>（3）判断token是否有效，根据请求过来的token，查询redis缓存中的uid，如果获取不到这说明该token已过期。</p><p>（4）根据用户请求的url参数，服务器端按照同样的规则生成sign签名，对比签名看是否相等，相等则放行。（自然url签名 也无法100%保证其安全，也可以通过公钥AES对数据和url加密，但这样如果无法确保公钥丢失，所以签名只是很大程 度上保证安全）。</p><p>（5）此url拦截只需对获取身份认证的url放行（如登陆url），剩余所有的url都需拦截。</p><p>3.Token和Uid关系维护</p><p>对于用户登录我们需要创建token--uid的关系，用户退出时需要需删除token--uid的关系。</p><p><br/></p>',1500347158,1536718919),(59,18,1,'或许你不知道的10条SQL技巧','mysql,mysql优化','或许你不知道的10条SQL技巧','http://7xviiw.com1.z0.glb.clouddn.com/20170718133842702.jpg',0,6,255,893,'<h2>一些常见的SQL实践</h2><p>（1）负向条件查询不能使用索引</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;order&nbsp;where&nbsp;status!=0&nbsp;and&nbsp;stauts!=1</pre><p>not in/not exists 都不是好习惯</p><p>可以优化为 in 查询：</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;order&nbsp;where&nbsp;status&nbsp;in(2,3)</pre><p>（2）前导模糊查询不能使用索引</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;order&nbsp;where&nbsp;desc&nbsp;like&nbsp;&#39;%XX&#39;</pre><p>而非前导模糊查询则可以：</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;order&nbsp;where&nbsp;desc&nbsp;like&nbsp;&#39;XX%&#39;</pre><p>（3）数据区分度不大的字段不宜使用索引</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;user&nbsp;where&nbsp;sex=1</pre><p>原因：性别只有男，女，每次过滤掉的数据很少，不宜使用索引。</p><p>经验上，能过滤 80% 数据时就可以使用索引。对于订单状态，如果状态值很少，不宜使用索引，如果状态值很多，能够过滤大量数据，则应该建立索引。</p><p>（4）在属性上进行计算不能命中索引</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;order&nbsp;where&nbsp;YEAR(date)&nbsp;&lt;&nbsp;=&nbsp;&#39;2017&#39;</pre><p>即使date上建立了索引，也会全表扫描，可优化为值计算：</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;order&nbsp;where&nbsp;date&nbsp;&lt;&nbsp;=&nbsp;CURDATE()</pre><p>或者：</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;order&nbsp;where&nbsp;date&nbsp;&lt;&nbsp;=&nbsp;&#39;2017-01-01&#39;</pre><h2>并非周知的SQL实践</h2><p>（5）如果业务大部分是单条查询，使用Hash索引性能更好，例如用户中心</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;user&nbsp;where&nbsp;uid=?</pre><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;user&nbsp;where&nbsp;login_name=?</pre><p>原因：</p><p>B-Tree索引的时间复杂度是O(log(n))</p><p>Hash索引的时间复杂度是O(1)</p><p>（6）允许为null的列，查询有潜在大坑</p><p>单列索引不存null值，复合索引不存全为null的值，如果列允许为null，可能会得到“不符合预期”的结果集</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;user&nbsp;where&nbsp;name&nbsp;!=&nbsp;&#39;shenjian&#39;</pre><p>如果name允许为null，索引不存储null值，结果集中不会包含这些记录。</p><p>所以，请使用 not null 约束以及默认值。</p><p>（7）复合索引最左前缀，并不是值SQL语句的where顺序要和复合索引一致</p><p>用户中心建立了(login_name, passwd)的复合索引</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;user&nbsp;where&nbsp;login_name=?&nbsp;and&nbsp;passwd=?</pre><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;user&nbsp;where&nbsp;passwd=?&nbsp;and&nbsp;login_name=?</pre><p>都能够命中索引</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;user&nbsp;where&nbsp;login_name=?</pre><p>也能命中索引，满足复合索引最左前缀</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;user&nbsp;where&nbsp;passwd=?</pre><p>不能命中索引，不满足复合索引最左前缀</p><p>（8）使用ENUM而不是字符串</p><p>ENUM保存的是TINYINT，别在枚举中搞一些“中国”“北京”“技术部”这样的字符串，字符串空间又大，效率又低。</p><h2>小众但有用的SQL实践</h2><p>（9）如果明确知道只有一条结果返回，limit 1能够提高效率</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;user&nbsp;where&nbsp;login_name=?</pre><p>可以优化为：</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;user&nbsp;where&nbsp;login_name=?&nbsp;limit&nbsp;1</pre><p>原因：</p><p>你知道只有一条结果，但数据库并不知道，明确告诉它，让它主动停止游标移动</p><p>（10）把计算放到业务层而不是数据库层，除了节省数据的CPU，还有意想不到的查询缓存优化效果</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;order&nbsp;where&nbsp;date&nbsp;&lt;&nbsp;=&nbsp;CURDATE()</pre><p>这不是一个好的SQL实践，应该优化为：</p><pre class=\"brush:sql;toolbar:false\">$curDate&nbsp;=&nbsp;date(&#39;Y-m-d&#39;);</pre><pre class=\"brush:sql;toolbar:false\">$res&nbsp;=&nbsp;mysql_query(&#39;select&nbsp;*&nbsp;from&nbsp;order&nbsp;where&nbsp;date&nbsp;&lt;&nbsp;=&nbsp;$curDate&#39;);</pre><p>原因：</p><p>释放了数据库的CPU</p><p>多次调用，传入的SQL相同，才可以利用查询缓存</p><p>（11）强制类型转换会全表扫描</p><pre class=\"brush:sql;toolbar:false\">select&nbsp;*&nbsp;from&nbsp;user&nbsp;where&nbsp;phone=13800001234</pre><p>你以为会命中phone索引么？大错特错了</p><p><br/></p>',1500356667,1536551185),(60,12,1,'读廖老师GIT教程随笔','git,git命令,git总结','闲来无事，再翻一次廖老师的GIT教程，记录一下。','http://7xviiw.com1.z0.glb.clouddn.com/20170727113546441.png',0,5,255,934,'<h2>前言</h2><p>强烈推荐学GIT的小伙伴们到廖老师的官方网址学习。<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" title=\"走你\">走你</a> -。-</p><h2>GIT命令<br/></h2><pre class=\"brush:bash;toolbar:false\">git&nbsp;init&nbsp;&nbsp;初始化一个版本库\r\ngit&nbsp;add&nbsp;将需要提交的文件添加到git索引库，也称为暂存区，此时文件受到GIT管理\r\ngit&nbsp;commit&nbsp;-m&nbsp;&nbsp;&nbsp;&nbsp;将索引库也就是暂存区的内容进行提交，提交至当前分支\r\ngit&nbsp;rm&nbsp;用于删除一个文件。\r\ngit&nbsp;status&nbsp;查看版本库状态\r\ngit&nbsp;log&nbsp;查看提交历史&nbsp;&nbsp;&nbsp;--pretty=oneline&nbsp;&nbsp;更好的显示\r\ngit&nbsp;reflog&nbsp;查看命令历史\r\ngit&nbsp;reset&nbsp;-hard&nbsp;commit_id&nbsp;&nbsp;&nbsp;&nbsp;（HEAD&nbsp;指向当前版本，^上一个版本）\r\ngit&nbsp;reset&nbsp;版本号&nbsp;文件&nbsp;&nbsp;&nbsp;&nbsp;恢复指定文件\r\nssh-keygen&nbsp;-t&nbsp;rsa&nbsp;-C&nbsp;&quot;youremail@example.com&quot;&nbsp;创建SSH&nbsp;Key\r\ngit&nbsp;remote&nbsp;add&nbsp;origin&nbsp;git@github.com:用户名/项目名.git&nbsp;&nbsp;本地和远程库关联\r\ngit&nbsp;push&nbsp;-u&nbsp;origin&nbsp;master&nbsp;Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。\r\ngit&nbsp;clone&nbsp;从远程版本库克隆一个本地库\r\ngit&nbsp;branch&nbsp;查看分支\r\ngit&nbsp;branch&nbsp;&lt;name&gt;&nbsp;创建分支\r\ngit&nbsp;checkout&nbsp;&lt;name&gt;&nbsp;切换分支\r\ngit&nbsp;checkout&nbsp;-b&nbsp;&lt;name&gt;创建+切换分支\r\ngit&nbsp;merge&nbsp;&lt;name&gt;&nbsp;合并某分支到当前分支&nbsp;--no-ff强制禁用Fast&nbsp;forward模式\r\ngit&nbsp;branch&nbsp;-d&nbsp;&lt;name&gt;&nbsp;删除分支\r\ngit&nbsp;branch&nbsp;-D&nbsp;&lt;name&gt;&nbsp;强行删除分支，删除一个没有合并过的分支\r\ngit&nbsp;log&nbsp;--graph&nbsp;查看分支合并图&nbsp;git&nbsp;log&nbsp;--graph&nbsp;--pretty=oneline&nbsp;--abbrev-commit\r\ngit&nbsp;stash&nbsp;当前工作现场“储藏”起来，用于还不想提交，但是想切换分支时使用\r\ngit&nbsp;stash&nbsp;list&nbsp;&nbsp;保存的列表\r\ngit&nbsp;stash&nbsp;apply&nbsp;&nbsp;切换到保存的状态\r\ngit&nbsp;stash&nbsp;drop&nbsp;&nbsp;&nbsp;将保存的状态删除\r\ngit&nbsp;stash&nbsp;pop&nbsp;切换到保存的状态并删除\r\ngit&nbsp;remote查看远程库的信息&nbsp;-v显示更详细的信息\r\ngit&nbsp;tag&nbsp;&lt;name&gt;&nbsp;&lt;版本号&gt;&nbsp;打标签，默认标签是打在最新提交的commit上的，-a指定标签名，-m指定说明文字\r\ngit&nbsp;tag&nbsp;查看标签\r\ngit&nbsp;show&nbsp;&lt;tagname&gt;查看标签信息\r\ngit&nbsp;tag&nbsp;-d&nbsp;&lt;name&gt;&nbsp;删除标签\r\ngit&nbsp;push&nbsp;origin&nbsp;&lt;tagname&gt;&nbsp;|&nbsp;--tags&nbsp;将标签推送到远程\r\ngit&nbsp;push&nbsp;origin&nbsp;:refs/tags/&lt;tagname&gt;可以删除一个远程标签\r\ngit&nbsp;check-ignore&nbsp;检查忽略文件</pre><h2>工作区和暂存区的概念</h2><p>工作区 （Working Directory） ，就是你再电脑里能看到的目录</p><p>版本库 （Repository）,工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库</p><p>Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。</p><p>每次修改，如果不add到暂存区，那就不会加入到commit中。</p><h2>撤销修改<br/></h2><p>文件已修改，未add到暂存区:git checkout -- file可还原</p><p>文件已修改，并add到暂存区未commit：git reset HEAD file &nbsp;git checkout -- file可还原</p><h2>撤销删除</h2><p>文件使用git rm删除但是并未commit：git reset HEAD file &nbsp;git checkout -- file可还原</p><h2>分支管理</h2><p>git checkout命令加上-b参数表示创建并切换，相当于以下两条命令：</p><p>git branch dev</p><p>git checkout dev</p><h2>相关网站</h2><p>练习闯关： <a href=\"http://learngitbranching.js.org/\" target=\"_blank\" title=\"git闯关\">http://learngitbranching.js.org/&nbsp;</a></p><p>git官方文档： <a href=\"https://git-scm.com/book/zh/v2\" target=\"_blank\" title=\"git官方文档\">https://git-scm.com/book/zh/v2</a></p>',1501126827,1536715335),(61,10,1,'织梦dedecms漏洞修复大全(5.7起)--转','dedecms漏洞,织梦漏洞','很多人说dedecms不好，因为用的人多了，找漏洞的人也多了，那么如果我们能修复的话，这些都不是问题.','http://7xviiw.com1.z0.glb.clouddn.com/20170807091641449.jpg',0,7,255,1937,'<p>很多人说dedecms不好，因为用的人多了，找漏洞的人也多了，那么如果我们能修复的话，这些都不是问题.</p><p>好，我们来一个一个修复。修复方法都是下载目录下该文件，然后替换或添加部分代码，保存后上传覆盖(记得先备份)，这样的好处是防止用懒人包上传之后因为UTF8和GBK不同产生乱码，或者修改过这几个文件，然后直接修改的部分被替换掉，那之前就白改了，找起来也非常的麻烦。如果你搜索不到，看行数，找相近的，然后将我标记红色的部分复制到对应位置。</p><h2>任意文件上传漏洞修复</h2><p>一、/include/dialog/select_soft_post.php文件，搜索(大概在72行的样子)</p><pre class=\"brush:php;toolbar:false\">$fullfilename&nbsp;=&nbsp;$cfg_basedir.$activepath.&#39;/&#39;.$filename;</pre><p>&nbsp; &nbsp; &nbsp; 修改为</p><pre class=\"brush:php;toolbar:false\">if&nbsp;(preg_match(&#39;#\\.(php|pl|cgi|asp|aspx|jsp|php5|php4|php3|shtm|shtml)[^a-zA-Z0-9]+$#i&#39;,&nbsp;trim($filename)))&nbsp;{&nbsp;\r\nShowMsg(&quot;你指定的文件名被系统禁止！&quot;,&#39;javascript:;&#39;);&nbsp;\r\nexit();&nbsp;\r\n}&nbsp;\r\n$fullfilename&nbsp;=$cfg_basedir.$activepath.&#39;/&#39;.$filename;;</pre><p>二、后台文件任意上传漏洞</p><p>&nbsp; &nbsp; &nbsp; /dede/media_add.php或者/你的后台名字/media_add.php</p><p>　 &nbsp; 搜索</p><pre class=\"brush:php;toolbar:false\">$fullfilename&nbsp;=&nbsp;$cfg_basedir.$filename;(大概在69行左右)</pre><p>&nbsp; &nbsp; &nbsp; 替换成 &nbsp; &nbsp; &nbsp;</p><pre class=\"brush:php;toolbar:false\">if&nbsp;(preg_match(&#39;#\\.(php|pl|cgi|asp|aspx|jsp|php5|php4|php3|shtm|shtml)[^a-zA-Z0-9]+$#i&#39;,&nbsp;trim($filename)))&nbsp;{&nbsp;\r\nShowMsg(&quot;你指定的文件名被系统禁止！&quot;,&#39;javascript:;&#39;);&nbsp;\r\nexit();&nbsp;\r\n}&nbsp;\r\n$fullfilename&nbsp;=$cfg_basedir.$filename;</pre><p>三、 /include/uploadsafe.inc.php （有2个地方：）</p><p>　　1、搜索</p><pre class=\"brush:php;toolbar:false\">${$_key.&#39;_size&#39;}&nbsp;=&nbsp;@filesize($$_key);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p>&nbsp; &nbsp; &nbsp; (大概在42,43行左右)</p><p>&nbsp; &nbsp; &nbsp; 替换成 &nbsp; &nbsp;</p><pre class=\"brush:php;toolbar:false\">${$_key.&#39;_size&#39;}&nbsp;=&nbsp;@filesize($$_key);&nbsp;\r\n}&nbsp;\r\n$imtypes&nbsp;=&nbsp;array(&quot;image/pjpeg&quot;,&nbsp;&quot;image/jpeg&quot;,&nbsp;&quot;image/gif&quot;,&nbsp;&quot;image/png&quot;,&nbsp;&quot;image/xpng&quot;,\r\n&nbsp;&quot;image/wbmp&quot;,&nbsp;&quot;image/bmp&quot;);&nbsp;\r\nif(in_array(strtolower(trim(${$_key.&#39;_type&#39;})),&nbsp;$imtypes))&nbsp;\r\n{&nbsp;$image_dd&nbsp;=&nbsp;@getimagesize($$_key);&nbsp;\r\nif($image_dd&nbsp;==&nbsp;false){&nbsp;continue;&nbsp;}&nbsp;\r\nif&nbsp;(!is_array($image_dd))&nbsp;{&nbsp;exit(&#39;Upload&nbsp;filetype&nbsp;not&nbsp;allow&nbsp;!&#39;);&nbsp;}&nbsp;\r\n}</pre><p>&nbsp; &nbsp; &nbsp; 如果修改后出现文章页面空白页，请仔细查看代码是否多了或者少了大括号}，本文件44行是空的，没有代码，请注意。</p><p>&nbsp; &nbsp; &nbsp; 2、搜索</p><pre class=\"brush:php;toolbar:false\">$image_dd&nbsp;=&nbsp;@getimagesize($$_key);(大概在53行左右)</pre><p>&nbsp; &nbsp; &nbsp; 替换成 &nbsp; &nbsp;&nbsp;</p><pre class=\"brush:php;toolbar:false\">$image_dd&nbsp;=&nbsp;@getimagesize($$_key);&nbsp;if($image_dd&nbsp;==&nbsp;false){&nbsp;continue;&nbsp;}</pre><p>&nbsp; &nbsp; &nbsp;老规矩大红色地方标记了修改的地方，然后保存，接着备份原文件，比如文件名变为uploadsafe.inc.php.16.08.09.bak。然后上传修改好的文件即可。</p><h2>(SQL)注入漏洞修复</h2><p>&nbsp;一、 /include/filter.inc.php文件，搜索(大概在46行的样子)</p><pre class=\"brush:php;toolbar:false\">return&nbsp;$svar;</pre><p>&nbsp; &nbsp; &nbsp; 修改为</p><pre class=\"brush:php;toolbar:false\">return&nbsp;addslashes($svar);</pre><p>&nbsp;二、/member/mtypes.php文件，搜索(大概在71行的样子)</p><pre class=\"brush:php;toolbar:false\">$query&nbsp;=&nbsp;&quot;UPDATE&nbsp;`dede_mtypes`&nbsp;SET&nbsp;mtypename=&#39;$name&#39;&nbsp;WHERE&nbsp;mtypeid=&#39;$id&#39;&nbsp;\r\nAND&nbsp;mid=&#39;$cfg_ml-&gt;M_ID&#39;&quot;;</pre><p>&nbsp; &nbsp; &nbsp; 修改为</p><pre class=\"brush:php;toolbar:false\">$id&nbsp;=&nbsp;intval($id);&nbsp;$query&nbsp;=&nbsp;&quot;UPDATE&nbsp;`dede_mtypes`&nbsp;SET&nbsp;mtypename=&#39;$name&#39;&nbsp;\r\nWHERE&nbsp;mtypeid=&#39;$id&#39;&nbsp;AND&nbsp;mid=&#39;$cfg_ml-&gt;M_ID&#39;&quot;;</pre><p>三、 /member/pm.php文件，搜索(大概在65行的样子)</p><pre class=\"brush:php;toolbar:false\">$row&nbsp;=&nbsp;$dsql-&gt;GetOne(&quot;SELECT&nbsp;*&nbsp;FROM&nbsp;`dede_member_pms`&nbsp;WHERE&nbsp;id=&#39;$id&#39;&nbsp;AND&nbsp;\r\n(fromid=&#39;{$cfg_ml-&gt;M_ID}&#39;&nbsp;OR&nbsp;toid=&#39;{$cfg_ml-&gt;M_ID}&#39;)&quot;);</pre><p>&nbsp; &nbsp; &nbsp; 修改为</p><pre class=\"brush:php;toolbar:false\">$id&nbsp;=&nbsp;intval($id);&nbsp;$row&nbsp;=&nbsp;$dsql-&gt;GetOne(&quot;SELECT&nbsp;*&nbsp;FROM&nbsp;`dede_member_pms`&nbsp;\r\nWHERE&nbsp;id=&#39;$id&#39;&nbsp;AND&nbsp;(fromid=&#39;{$cfg_ml-&gt;M_ID}&#39;&nbsp;OR&nbsp;toid=&#39;{$cfg_ml-&gt;M_ID}&#39;)&quot;);</pre><p>四、 /plus/guestbook/edit.inc.php文件，搜索(大概在55行的样子)</p><pre class=\"brush:php;toolbar:false\">$dsql-&gt;ExecuteNoneQuery(&quot;UPDATE&nbsp;`dede_guestbook`&nbsp;SET&nbsp;`msg`=&#39;$msg&#39;,&nbsp;`posttime`=&#39;\r\n&quot;.time().&quot;&#39;&nbsp;WHERE&nbsp;id=&#39;$id&#39;&nbsp;&quot;);</pre><p>&nbsp; &nbsp; &nbsp; 修改为</p><pre class=\"brush:php;toolbar:false\">$msg&nbsp;=&nbsp;addslashes($msg);&nbsp;$dsql-&gt;ExecuteNoneQuery(&quot;UPDATE&nbsp;`dede_guestbook`&nbsp;SET&nbsp;\r\n`msg`=&#39;$msg&#39;,&nbsp;`posttime`=&#39;&quot;.time().&quot;&#39;&nbsp;WHERE&nbsp;id=&#39;$id&#39;&nbsp;&quot;);;</pre><p>五、 /plus/search.php文件，搜索(大概在109行的样子)</p><pre class=\"brush:php;toolbar:false\">$keyword&nbsp;=&nbsp;addslashes(cn_substr($keyword,30));</pre><p>&nbsp; &nbsp; &nbsp; 修改为</p><pre class=\"brush:php;toolbar:false\">$typeid&nbsp;=&nbsp;intval($typeid);&nbsp;$keyword&nbsp;=&nbsp;addslashes(cn_substr($keyword,30));</pre><p>六、/member/soft_add.php　　 搜索(大概在154行左右)</p><p>&nbsp; &nbsp; &nbsp; 搜索</p><pre class=\"brush:php;toolbar:false\">$urls&nbsp;.=&nbsp;&quot;{dede:link&nbsp;islocal=&#39;1&#39;&nbsp;text=&#39;{$servermsg1}&#39;}&nbsp;$softurl1&nbsp;{/dede:link}\\r\\n&quot;;</pre><p>&nbsp; &nbsp; &nbsp; 替换成 &nbsp; &nbsp; &nbsp;</p><pre class=\"brush:php;toolbar:false\">if&nbsp;(preg_match(&quot;#}(.*?){/dede:link}{dede:#sim&quot;,&nbsp;$servermsg1)&nbsp;!=&nbsp;1)&nbsp;{&nbsp;$urls&nbsp;\r\n.=&nbsp;&quot;{dede:link&nbsp;islocal=&#39;1&#39;&nbsp;text=&#39;{$servermsg1}&#39;}&nbsp;$softurl1&nbsp;{/dede:link}\\r\\n&quot;;&nbsp;}</pre><p>七、cookies泄漏导致SQL漏洞修复</p><p>　　1、/member/article_add.php文件，搜索(大概在83行的样子)</p><pre class=\"brush:php;toolbar:false\">&nbsp;if&nbsp;(empty($dede_fieldshash)&nbsp;||&nbsp;$dede_fieldshash&nbsp;!=&nbsp;md5($dede_addonfields.\r\n&nbsp;$cfg_cookie_encode))</pre><p>&nbsp; &nbsp; &nbsp; 修改为</p><pre class=\"brush:php;toolbar:false\">&nbsp;if&nbsp;(empty($dede_fieldshash)&nbsp;||&nbsp;(&nbsp;$dede_fieldshash&nbsp;!=&nbsp;md5($dede_addonfields&nbsp;\r\n&nbsp;.&nbsp;$cfg_cookie_encode)&nbsp;&amp;&amp;&nbsp;$dede_fieldshash&nbsp;!=&nbsp;md5($dede_addonfields&nbsp;.&nbsp;&#39;anythingelse&#39;&nbsp;\r\n&nbsp;.&nbsp;$cfg_cookie_encode)))</pre><p>　　2、/member/inc/inc_archives_functions.php文件，搜索(大概在239行的样子)</p><pre class=\"brush:php;toolbar:false\">echo&nbsp;&quot;&lt;input&nbsp;type=\\&quot;hidden\\&quot;&nbsp;name=\\&quot;dede_fieldshash\\&quot;&nbsp;\r\nvalue=\\&quot;&quot;.md5($dede_addonfields.$cfg_cookie_encode).&quot;\\&quot;&nbsp;/&gt;&quot;;</pre><p>&nbsp; &nbsp; &nbsp; 修改为</p><pre class=\"brush:php;toolbar:false\">echo&nbsp;&quot;&lt;input&nbsp;type=\\&quot;hidden\\&quot;&nbsp;name=\\&quot;dede_fieldshash\\&quot;&nbsp;\r\nvalue=\\&quot;&quot;.&nbsp;md5($dede_addonfields&nbsp;.&nbsp;&#39;anythingelse&#39;&nbsp;.$cfg_cookie_encode)&nbsp;.&quot;\\&quot;&nbsp;/&gt;&quot;;</pre><h2>SESSION变量覆盖导致SQL注入漏洞</h2><p>&nbsp; &nbsp; &nbsp; include/common.inc.php文件，搜索(大概在68行的样子)</p><pre class=\"brush:php;toolbar:false\">if(&nbsp;strlen($svar)&gt;0&nbsp;&amp;&amp;&nbsp;preg_match(&#39;#^(cfg_|GLOBALS|_GET|_POST|_COOKIE)#&#39;,$svar)&nbsp;)</pre><p>&nbsp; &nbsp; &nbsp; 修改为</p><pre class=\"brush:php;toolbar:false\">if(&nbsp;strlen($svar)&gt;0&nbsp;&amp;&amp;&nbsp;preg_match(&#39;#^(cfg_|GLOBALS|_GET|_POST|_COOKIE|_SESSION)#&#39;,$svar)&nbsp;)</pre><h2>支付模块注入漏洞<br/></h2><p>　　include/payment/alipay.php文件，搜索(大概在137行的样子)</p><pre class=\"brush:php;toolbar:false\">$order_sn&nbsp;=&nbsp;trim($_GET[&#39;out_trade_no&#39;]);</pre><p>&nbsp; &nbsp; &nbsp; 修改为</p><pre class=\"brush:php;toolbar:false\">$order_sn&nbsp;=&nbsp;trim(addslashes($_GET[&#39;out_trade_no&#39;]));;</pre><h2>变量为初始化导致本地变量注入</h2><p>　　/include/dedesql.class.php文件，搜索(大概在590行的样子)</p><pre class=\"brush:php;toolbar:false\">if(isset($GLOBALS[&#39;arrs1&#39;]))</pre><p>&nbsp; &nbsp; &nbsp; 修改为</p><pre class=\"brush:php;toolbar:false\">$arrs1&nbsp;=&nbsp;array();&nbsp;$arrs2&nbsp;=&nbsp;array();&nbsp;if(isset($GLOBALS[&#39;arrs1&#39;]))</pre><p>&nbsp; &nbsp; &nbsp; 如果之前定义过$arrs1或$arrs2的，请调整比对代码。</p><p>至此，dedecms漏洞修复大全含任意文件上传漏洞与注入漏洞(5.7起)就修改完毕了。</p><p><br/></p>',1502069123,1536650368),(62,11,1,'敏感词过滤-php扩展trie-filter安装使用','敏感词过滤,trie-filter','关键词过滤扩展，用于检查一段文本中是否出现敏感词，基于Double-Array Trie 树实现','http://7xviiw.com1.z0.glb.clouddn.com/20180201165217187.jpg',1,7,255,1509,'<p>关键词过滤扩展，用于检查一段文本中是否出现敏感词，基于Double-Array Trie 树实现</p><h2>一、安装libiconv</h2><p>这个是libdatrie的依赖项</p><pre class=\"brush:bash;toolbar:false\">wget&nbsp;http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.14.tar.gz&nbsp;&nbsp;&nbsp;\r\ntar&nbsp;zxvf&nbsp;libiconv-1.14.tar.gz&nbsp;&nbsp;&nbsp;\r\ncd&nbsp;libiconv-1.14&nbsp;&nbsp;&nbsp;\r\n./configure&nbsp;&nbsp;&nbsp;\r\nmake&nbsp;&nbsp;&nbsp;\r\nmake&nbsp;install</pre><h2>二、安装libdatrie&nbsp;</h2><p>(http://linux.thai.net/~thep/datrie/datrie.html#Download) 这个网站下不了了，所以我把文件放在我的网站，大家可以下载</p><pre class=\"brush:bash;toolbar:false\">wget&nbsp;http://www.az1314.cn/uploads/libdatrie.gz\r\ntar&nbsp;zxvf&nbsp;libdatrie.gz\r\ncd&nbsp;libdatrie-0.2.4\r\n./configure&nbsp;--prefix=/usr/local/libdatrie\r\nmake\r\nmake&nbsp;install</pre><h2>三、安装trie-filter扩展</h2><p>由于官方trie_filter扩展对中文支持的不是很好，所以在git上找到了一个在官方扩展上面改写的扩展经过测试没有问题</p><p>由于该作者很忙（懒），没有做php7.0以上版本的兼容，所以找到一个修改兼容php7的版本，根据自己的php版本去对应的下载</p><p>php5.3~5.6 https://github.com/wulijun/php-ext-trie-filter</p><p>php7.0~7.1 https://github.com/zzjin/php-ext-trie-filter</p><pre class=\"brush:bash;toolbar:false\">git&nbsp;clone&nbsp;https://github.com/zzjin/php-ext-trie-filter\r\ncd&nbsp;php-ext-trie-filter\r\nphpize\r\n./configure&nbsp;--with-php-config=/usr/local/php/bin/php-config&nbsp;--with-trie_filter=/usr/local/libdatrie\r\nmake&nbsp;\r\nmake&nbsp;install</pre><p>修改php.ini，然后增加一行：extension=trie_filter.so，保存配置并重启php</p><p>命令行输入php -m 查看是否扩展加进来了</p><h2>四 、生成词库</h2><p>由于上面下载的源码包中并没有带生成词典的命令，所以我们用php写一个函数用于生成</p><pre class=\"brush:php;toolbar:false\">function&nbsp;dirty_words()\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//敏感词数组&nbsp;可以录读第五部分的词库&nbsp;然后生成敏感词文件\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$words&nbsp;=&nbsp;array(&#39;傻逼&#39;,&#39;艹尼玛&#39;,&#39;你妈&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//创建一个空的trie&nbsp;tree\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tire&nbsp;=&nbsp;\\trie_filter_new();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//向trie&nbsp;tree中添加敏感词\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;($words&nbsp;as&nbsp;$k&nbsp;=&gt;&nbsp;$v)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;trie_filter_store($tire,&nbsp;$v);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//生成敏感词文件\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;trie_filter_save($tire,&#39;./dirty_words.dic&#39;);\r\n}</pre><h2>五、测试</h2><pre class=\"brush:php;toolbar:false\">//&nbsp;加载敏感词文件\r\n$tire&nbsp;=&nbsp;trie_filter_load(&#39;./dirty_words.dic&#39;);\r\n//准备要过滤的文本\r\n$content&nbsp;=&nbsp;&#39;傻逼草拟吗&nbsp;哈哈哈&#39;;\r\n//该函数的返回值是一个数组，第一个值为脏字出现的位置，第二个值为脏字的长度，拿到返回值后，可以用substr等函数获取脏字\r\n$res&nbsp;=&nbsp;trie_filter_search($tire,&nbsp;$content);\r\nprint_r(substr($content,&nbsp;$res[0],&nbsp;$res[1]));&nbsp;//傻逼\r\nprint_r(str_replace($content,substr($content,&nbsp;$res[0],&nbsp;$res[1]),&nbsp;&#39;****&#39;));\r\n//在文本中查找所有的脏字\r\n$res&nbsp;=&nbsp;trie_filter_search_all($tire,&nbsp;$content);\r\nprint_r($res);\r\n//释放trie资源\r\ntrie_filter_free($tire);</pre><h2>六 、字典库</h2><p>http://vdisk.weibo.com/s/u7m7v7tUJtAIn</p><p><br/></p>',1517475313,1536633954),(63,11,1,'Composer和自动加载学习分享','composer,自动加载','Composer：是 PHP 用来管理依赖（dependency）关系的工具。对于现代语言而言，包管理器基本上是标配。','http://7xviiw.com1.z0.glb.clouddn.com/20180202085526674.png',0,3,255,660,'<p><img src=\"/ueditor/php/upload/image/20180202/1517533016860466.png\" style=\"\" title=\"1517533016860466.png\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533192223940.png\" title=\"1517533192223940.png\" alt=\"幻灯片2.png\"/><img src=\"/ueditor/php/upload/image/20180202/1517533017112489.png\" title=\"1517533017112489.png\"/><img src=\"/ueditor/php/upload/image/20180202/1517533016968703.png\" title=\"1517533016968703.png\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533017820815.png\" style=\"\" title=\"1517533017820815.png\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533017380774.png\" style=\"\" title=\"1517533017380774.png\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533017346424.png\" title=\"1517533017346424.png\"/><img src=\"/ueditor/php/upload/image/20180202/1517533331459330.png\" title=\"1517533331459330.png\" alt=\"幻灯片12.png\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533017384298.png\" style=\"\" title=\"1517533017384298.png\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533017999791.png\" style=\"\" title=\"1517533017999791.png\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533017415173.png\" style=\"\" title=\"1517533017415173.png\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533017364283.png\" style=\"\" title=\"1517533017364283.png\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533017634701.png\" style=\"\" title=\"1517533017634701.png\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533017314431.png\" style=\"\" title=\"1517533017314431.png\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533017117677.png\" style=\"\" title=\"1517533017117677.png\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533017584503.png\" style=\"\" title=\"1517533017584503.png\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533017835788.png\" style=\"\" title=\"1517533017835788.png\"/></p><p><br/></p><p><br/></p>',1517533455,1536645065),(64,11,1,'swoole技术分享','swoole,php异步多进程','PHP的异步、并行、高性能网络通信引擎，使用纯C语言编写，Swoole可以广泛应用于互联网、移动通信、企业软件、云计算、网络游戏、物联网（IOT）、车联网、智能家居等领域','http://7xviiw.com1.z0.glb.clouddn.com/20180202090834210.png',0,4,255,684,'<p><img src=\"/ueditor/php/upload/image/20180202/1517533848826140.jpg\" style=\"\" title=\"1517533848826140.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848647178.jpg\" style=\"\" title=\"1517533848647178.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848247452.jpg\" style=\"\" title=\"1517533848247452.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848828595.jpg\" style=\"\" title=\"1517533848828595.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848239439.jpg\" style=\"\" title=\"1517533848239439.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848293402.jpg\" style=\"\" title=\"1517533848293402.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848238907.jpg\" style=\"\" title=\"1517533848238907.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848186102.jpg\" style=\"\" title=\"1517533848186102.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848521590.jpg\" style=\"\" title=\"1517533848521590.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848187462.jpg\" style=\"\" title=\"1517533848187462.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848772728.jpg\" style=\"\" title=\"1517533848772728.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848282142.jpg\" style=\"\" title=\"1517533848282142.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848459996.jpg\" style=\"\" title=\"1517533848459996.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848251480.jpg\" style=\"\" title=\"1517533848251480.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848153341.jpg\" style=\"\" title=\"1517533848153341.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848854520.jpg\" style=\"\" title=\"1517533848854520.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848261309.jpg\" style=\"\" title=\"1517533848261309.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848234143.jpg\" style=\"\" title=\"1517533848234143.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848640785.jpg\" style=\"\" title=\"1517533848640785.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848787980.jpg\" style=\"\" title=\"1517533848787980.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848189247.jpg\" style=\"\" title=\"1517533848189247.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848691334.jpg\" style=\"\" title=\"1517533848691334.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848896380.jpg\" style=\"\" title=\"1517533848896380.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517533848355700.jpg\" style=\"\" title=\"1517533848355700.jpg\"/></p><p><br/></p>',1517533883,1536695866),(65,11,1,'消息队列与定时任务','消息队列,定时任务','消息队列的介绍，四种产品的使用','http://7xviiw.com1.z0.glb.clouddn.com/20180202091818391.jpg',0,2,255,1181,'<p><img src=\"/ueditor/php/upload/image/20180202/1517534397496045.jpg\" style=\"\" title=\"1517534397496045.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534397547145.jpg\" style=\"\" title=\"1517534397547145.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534397705631.jpg\" style=\"\" title=\"1517534397705631.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534397139780.jpg\" style=\"\" title=\"1517534397139780.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534397537984.jpg\" style=\"\" title=\"1517534397537984.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534397725737.jpg\" style=\"\" title=\"1517534397725737.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534397907305.jpg\" style=\"\" title=\"1517534397907305.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534397899876.jpg\" style=\"\" title=\"1517534397899876.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534397220836.jpg\" style=\"\" title=\"1517534397220836.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534397155901.jpg\" style=\"\" title=\"1517534397155901.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534397543361.jpg\" style=\"\" title=\"1517534397543361.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534397730415.jpg\" style=\"\" title=\"1517534397730415.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534397110863.jpg\" style=\"\" title=\"1517534397110863.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534397567726.jpg\" style=\"\" title=\"1517534397567726.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534397508196.jpg\" style=\"\" title=\"1517534397508196.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534397208853.jpg\" style=\"\" title=\"1517534397208853.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534397793656.jpg\" style=\"\" title=\"1517534397793656.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534397791262.jpg\" style=\"\" title=\"1517534397791262.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534398145558.jpg\" style=\"\" title=\"1517534398145558.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534398889893.jpg\" style=\"\" title=\"1517534398889893.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534398516129.jpg\" style=\"\" title=\"1517534398516129.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534398717545.jpg\" style=\"\" title=\"1517534398717545.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534398763920.jpg\" style=\"\" title=\"1517534398763920.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534398543015.jpg\" style=\"\" title=\"1517534398543015.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534398457019.jpg\" style=\"\" title=\"1517534398457019.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534398211893.jpg\" style=\"\" title=\"1517534398211893.jpg\"/></p><p><img src=\"/ueditor/php/upload/image/20180202/1517534398256279.jpg\" title=\"1517534398256279.jpg\"/><img src=\"/ueditor/php/upload/image/20180202/1517534398656894.jpg\" style=\"\" title=\"1517534398656894.jpg\"/></p><p>参考文档<br/></p><p>阿里云MQ中间件：https://help.aliyun.com/document_detail/29532.html?spm=5176.doc29540.6.539.8Uab9x</p><p>阿里云消息服务：https://help.aliyun.com/document_detail/27414.html?spm=5176.doc27414.6.539.iHzgEC</p><p>redis键空间消息：http://www.cnblogs.com/tinywan/p/5903988.html</p><p>BEANSTALKD：http://blog.chedushi.com/archives/8026</p>',1517534503,1536720025),(66,11,1,'PHP CLI模式下的多进程应用','php,多进程','PHP在很多时候不适合做常驻的SHELL进程, 他没有专门的gc例程, 也没有有效的内存管理途径. 所以如果用PHP做常驻SHELL, 你会经常被内存耗尽导致abort而unhappy.','http://7xviiw.com1.z0.glb.clouddn.com/20180202102912342.jpeg',0,5,255,577,'<p style=\"margin-top: 0px; margin-bottom: 1.5em; padding: 0px; border: 0px; font-size: 12px; font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; vertical-align: baseline; text-indent: 1em; color: rgb(34, 34, 34); white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"font-family: sans-serif; font-size: 16px;\">PHP在很多时候不适合做常驻的SHELL进程, 他没有专门的gc例程, 也没有有效的内存管理途径. 所以如果用PHP做常驻SHELL, 你会经常被内存耗尽导致abort</span></p><p>而unhappy.</p><p>而且, 如果输入数据非法, 而脚本没有检测, 导致abort, 也会让你很不开心.</p><p>那? 怎么办呢?</p><p>多进程….</p><h2>为什么呢?</h2><pre class=\"brush:bash;toolbar:false\">优点:\r\n&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;使用多进程,&nbsp;子进程结束以后,&nbsp;内核会负责回收资源\r\n&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;使用多进程,子进程异常退出不会导致整个进程Thread退出.&nbsp;父进程还有机会重建流程.\r\n&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;一个常驻主进程,&nbsp;只负责任务分发,&nbsp;逻辑更清楚.</pre><h2>Then, 怎么做呢?</h2><p>接下来, 我们使用PHP提供的POSIX和Pcntl系列函数, 来实现一个PHP命令解析器, 主进程负责接受用户输入, 然后fork子进程执行, 并负责回显子进程的结束状态.</p><p>代码如下, 我加了注释, 如果有不懂的地方, 可以翻阅手册相关函数, 或者回复留言.</p><pre class=\"brush:php;toolbar:false\">#!/bin/env&nbsp;php\r\n&lt;?php\r\n/**&nbsp;A&nbsp;example&nbsp;denoted&nbsp;muti-process&nbsp;application&nbsp;in&nbsp;php\r\n&nbsp;*&nbsp;@filename&nbsp;fork.php\r\n&nbsp;*&nbsp;@touch&nbsp;date&nbsp;Wed&nbsp;10&nbsp;Jun&nbsp;2009&nbsp;10:25:51&nbsp;PM&nbsp;CST\r\n&nbsp;*&nbsp;@author&nbsp;Laruence&lt;laruence@baidu.com&gt;\r\n&nbsp;*&nbsp;@license&nbsp;http://www.zend.com/license/3_0.txt&nbsp;&nbsp;&nbsp;PHP&nbsp;License&nbsp;3.0\r\n&nbsp;*&nbsp;@version&nbsp;1.0.0\r\n*/\r\n&nbsp;\r\n/**&nbsp;确保这个函数只能运行在SHELL中&nbsp;*/\r\nif&nbsp;(substr(php_sapi_name(),&nbsp;0,&nbsp;3)&nbsp;!==&nbsp;&#39;cli&#39;)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;die(&quot;This&nbsp;Programe&nbsp;can&nbsp;only&nbsp;be&nbsp;run&nbsp;in&nbsp;CLI&nbsp;mode&quot;);\r\n}\r\n&nbsp;\r\n/**&nbsp;&nbsp;关闭最大执行时间限制,&nbsp;在CLI模式下,&nbsp;这个语句其实不必要&nbsp;*/\r\nset_time_limit(0);\r\n&nbsp;\r\n$pid&nbsp;&nbsp;=&nbsp;posix_getpid();&nbsp;//取得主进程ID\r\n$user&nbsp;=&nbsp;posix_getlogin();&nbsp;//取得用户名\r\n&nbsp;\r\necho&nbsp;&lt;&lt;&lt;EOD\r\nUSAGE:&nbsp;[command&nbsp;|&nbsp;expression]\r\ninput&nbsp;php&nbsp;code&nbsp;to&nbsp;execute&nbsp;by&nbsp;fork&nbsp;a&nbsp;new&nbsp;process\r\ninput&nbsp;quit&nbsp;to&nbsp;exit\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Shell&nbsp;Executor&nbsp;version&nbsp;1.0.0&nbsp;by&nbsp;laruence\r\nEOD;\r\n&nbsp;\r\nwhile&nbsp;(true)&nbsp;{\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$prompt&nbsp;=&nbsp;&quot;\\n{$user}$&nbsp;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$input&nbsp;&nbsp;=&nbsp;readline($prompt);\r\n&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;readline_add_history($input);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($input&nbsp;==&nbsp;&#39;quit&#39;)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;process_execute($input&nbsp;.&nbsp;&#39;;&#39;);\r\n}\r\n&nbsp;\r\nexit(0);\r\n&nbsp;\r\nfunction&nbsp;process_execute($input)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$pid&nbsp;=&nbsp;pcntl_fork();&nbsp;//创建子进程\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($pid&nbsp;==&nbsp;0)&nbsp;{//子进程\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$pid&nbsp;=&nbsp;posix_getpid();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;*&nbsp;Process&nbsp;{$pid}&nbsp;was&nbsp;created,&nbsp;and&nbsp;Executed:\\n\\n&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eval($input);&nbsp;//解析命令\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{//主进程\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$pid&nbsp;=&nbsp;pcntl_wait($status,&nbsp;WUNTRACED);&nbsp;//取得子进程结束状态\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(pcntl_wifexited($status))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;\\n\\n*&nbsp;Sub&nbsp;process:&nbsp;{$pid}&nbsp;exited&nbsp;with&nbsp;{$status}&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p>但有一点, 我一定要提醒:</p><pre class=\"brush:bash;toolbar:false\">Process&nbsp;Control&nbsp;should&nbsp;not&nbsp;be&nbsp;enabled&nbsp;within&nbsp;a&nbsp;webserver&nbsp;environment&nbsp;and&nbsp;unexpected&nbsp;results&nbsp;\r\nmay&nbsp;happen&nbsp;if&nbsp;any&nbsp;Process&nbsp;Control&nbsp;functions&nbsp;are&nbsp;used&nbsp;within&nbsp;a&nbsp;webserver&nbsp;environment.&nbsp;&nbsp;\r\n--摘自PHP手册</pre><p><br/></p><p>也就是说, 打消你在PHP Web开发中使用多进程的念头吧!</p><p>本文转自鸟哥 <a href=\"http://www.laruence.com/2009/06/11/930.html\" target=\"_blank\" title=\"http://www.laruence.com/2009/06/11/930.html\">http://www.laruence.com/2009/06/11/930.html</a></p><p><br/></p>',1517538858,1536677410),(67,12,1,'mp4格式文件转码后处理（qt-faststart工具介绍）','mp4视频无法播放,视频插件','之前做的一个视频网站，由于视频是存放于服务器的，文件很大时候发现无法播放而且视频要等加载完才能播放，而不是边加载边播放，造成这个问题的原因是一些描述mp4文件信息的moov atom元数据默认放置在了视频文件的最后','http://7xviiw.com1.z0.glb.clouddn.com/20180205155117660.jpg',0,4,255,884,'<h2>前言</h2><p>之前做的一个视频网站，由于视频是存放于服务器的，文件很大时候发现无法播放而且视频要等加载完才能播放，而不是边加载边播放，造成这个问题的原因是一些描述mp4文件信息的moov atom元数据默认放置在了视频文件的最后，而所有的播放器（包括独立的、网络化的——如浏览器）都需要这些信息来正确构建播放（比如视频分辨率到底是多少，视频到底有多长......）由此需要把这些信息想办法移动到mp4文件的前部，这样读取到这些信息后客户端播放器就可以搭起播放环境，后续只需要播放数据即可。能完成这项工作的工具有很多，这里介绍qt-faststart这个小程序。</p><h2>qt-faststart简介</h2><p>qt-faststart是一个由Mike Melanson (melanson@pcisys.net)写的开源程序，是一个命令行工具。你可能可以在很多地方找到它的源码，我一般是在FFmpeg的源码中拿，它通常放在FFmpeg源码的tools目录下，比如github仓库中的位置为https://github.com/FFmpeg/FFmpeg/blob/master/tools/qt-faststart.c。该程序只有一个源码文件，很小（不到13KB）。</p><h2>qt-faststart编译与使用</h2><p>要使用它需要先编译,这个程序能利用大多数编译工具实现编译，因为我一般在linux下使用，所以直接make tools/qt-faststart.c 即可在tools目录下产生出名为qt-faststart的可执行文件，然后把编译输出结果放置到系统搜索路径中即可以qt-faststart来进行调用使用了。</p><p>qt-faststart的使用十分简单，其调用格式为</p><pre class=\"brush:bash;toolbar:false\">qt-faststart&nbsp;&lt;inMp4FilePath&gt;&nbsp;&lt;outMp4FilePath&gt;\r\n&lt;inMp4FilePath&gt;:表示调整前的mp4文件路径\r\n&lt;outMp4FilePath&gt;:表示调整后的输出mp4文件路径</pre><p>mp4文件路径可以是绝对或者相对路径。</p><h2>补充说明</h2><p>mp4文件也可以替换为mov文件，因为这个工具其实最开始是为QuickTime格式视频文件编写的</p><p>mp4/mov 文件中的moov atom数据必须是非压缩的才能利用这个工具。</p><h2>windows编译好的程序</h2><p>在本站存了一份，供大家下载：http://www.az1314.cn/uploads/qt-faststart.rar</p><p>下载后解压 运行命令&nbsp;qt-faststart.exe d:/1.mp4 d:/2.mp4 &nbsp;2.MP4就可以边下边播了！</p>',1517817298,1536618730),(69,29,1,'GO语言map类型interface{}转换踩坑小记','GO,map类型转换','最近在学Go语言，在使用map的时候遇到一个小坑，记录一下','http://7xviiw.com1.z0.glb.clouddn.com/20180705184019605.jpg',0,1,255,387,'<p>最近在学Go语言，在使用map的时候遇到一个小坑，记录一下</p><pre style=\"background-color: rgb(255, 255, 255); font-family: Monaco; font-size: 10.5pt;\" class=\"brush:php;toolbar:false;\">mapA&nbsp;:=&nbsp;make([string]interface{})\r\n\r\nmapB&nbsp;:=&nbsp;make([string]interface{})\r\n\r\nmapA[&quot;name&quot;]&nbsp;=&nbsp;&quot;小文&quot;&nbsp;\r\n\r\nmapA[&quot;age&quot;]&nbsp;&nbsp;=&nbsp;25\r\n\r\nmapB[&quot;mapA&quot;]&nbsp;=&nbsp;mapA\r\n\r\nfor&nbsp;k,&nbsp;v&nbsp;:=&nbsp;range&nbsp;mapB&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;(k&nbsp;==&nbsp;)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;_,&nbsp;v1&nbsp;:=&nbsp;range&nbsp;v{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fmt.Println(v1)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;\r\n}\r\n//cannot&nbsp;range&nbsp;over&nbsp;v&nbsp;(type&nbsp;interface&nbsp;{})&nbsp;&nbsp;不能对一个空接口进行range\r\n\r\n//所以再来看看下&nbsp;上面发生了什么\r\n\r\n//mapA[&quot;name&quot;]&nbsp;=&nbsp;&quot;xiaowen&quot;&nbsp;//字符串被强转成interface{}\r\n\r\n//mapA[&quot;ege&quot;]&nbsp;&nbsp;=&nbsp;25&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//int被强转成interface{}\r\n\r\n//mapB[&quot;mapA&quot;]&nbsp;=&nbsp;mapA&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//mapA被转成interface{}了&nbsp;取出可以强转成&nbsp;&nbsp;map[string]interface{}\r\n\r\nfor&nbsp;k,&nbsp;v&nbsp;:=&nbsp;range&nbsp;mapB&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;if&nbsp;(k&nbsp;==&nbsp;&quot;mapA&quot;)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;_,&nbsp;v1&nbsp;:=&nbsp;range&nbsp;v.(map[string]interface{}){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fmt.Println(v1)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;\r\n}\r\n\r\n//这里把v再转成mapA的类型即可\r\n\r\n//强类型语言要时刻记着类型的转换奥！</pre>',1530064775,1536725376),(70,11,1,'Docker常用命令总结','docker,docker命令','Docker常用命令总结','http://7xviiw.com1.z0.glb.clouddn.com/20180705090824452.jpg',0,1,255,164,'<h2 id=\"toc_0\">查看</h2><pre class=\"brush:bash;toolbar:false\">docker&nbsp;images&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;列出所有镜像(images)\r\ndocker&nbsp;ps&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;列出正在运行的容器(containers)\r\ndocker&nbsp;ps&nbsp;-a&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;列出所有的容器\r\ndocker&nbsp;pull&nbsp;centos&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;下载centos镜像\r\ndocker&nbsp;top&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;查看容器内部运行程序</pre><h2 id=\"toc_1\">容器</h2><pre class=\"brush:bash;toolbar:false\">docker&nbsp;stop&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;停止一个正在运行的容器，可以是容器ID或名称docker&nbsp;start#&nbsp;启动一个已经停止的容器docker&nbsp;restart#&nbsp;重启容器docker&nbsp;rm#&nbsp;删除容器\r\ndocker&nbsp;run&nbsp;-i&nbsp;-t&nbsp;-p&nbsp;:80&nbsp;LAMP&nbsp;/bin/bash&nbsp;&nbsp;&nbsp;#&nbsp;运行容器并做http端口转发docker&nbsp;exec&nbsp;-it/bin/bash&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;进入ubuntu类容器的bashdocker&nbsp;exec&nbsp;-it/bin/sh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;进入alpine类容器的sh\r\ndocker&nbsp;rm&nbsp;docker&nbsp;ps&nbsp;-a&nbsp;-q&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;删除所有已经停止的容器FOR&nbsp;/f&nbsp;&quot;tokens=*&quot;&nbsp;%i&nbsp;IN&nbsp;(&#39;docker&nbsp;ps&nbsp;-a&nbsp;-q&#39;)&nbsp;DO&nbsp;docker&nbsp;rm&nbsp;%i&nbsp;&nbsp;#&nbsp;windows系统，用上面的命令会出错：unknown&nbsp;shorthand&nbsp;flag:&nbsp;&#39;a&#39;&nbsp;in&nbsp;-a&nbsp;docker&nbsp;kill&nbsp;\\((docker&nbsp;ps&nbsp;-a&nbsp;-q)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;杀死所有正在运行的容器，\\)()功能同</pre><h2 id=\"toc_2\">提交/导出<br/></h2><pre class=\"brush:bash;toolbar:false\">docker&nbsp;build&nbsp;--rm=true&nbsp;-t&nbsp;hjue/lamp&nbsp;.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;建立映像文件。–rm&nbsp;选项是告诉Docker，在构建完成后删除临时的Container，Dockerfile的每一行指令都会创建一个临时的Container，一般这些临时生成的Container是不需要的docker&nbsp;commit&nbsp;3a09b2588478&nbsp;mynewimage&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;提交你的变更，并且把容器保存成镜像，命名为mynewimage，3a09b2588478为容器的ID\r\ndocker&nbsp;save&nbsp;mynewimage&nbsp;|&nbsp;bzip2&nbsp;-9&nbsp;-c&gt;&nbsp;/home/save.tar.bz2&nbsp;&nbsp;#&nbsp;把&nbsp;mynewimage&nbsp;镜像保存成&nbsp;tar&nbsp;文件bzip2&nbsp;-d&nbsp;-c&nbsp;&lt;&nbsp;/home/save.tar.bz2&nbsp;|&nbsp;docker&nbsp;load&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;加载&nbsp;mynewimage&nbsp;镜像\r\ndocker&nbsp;export&gt;&nbsp;/home/export.tar&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;导出Imagecat&nbsp;/home/export.tar&nbsp;|&nbsp;sudo&nbsp;docker&nbsp;import&nbsp;-&nbsp;mynewimage&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;导入Image镜像</pre><h2 id=\"toc_3\">镜像</h2><pre class=\"brush:bash;toolbar:false\">docker&nbsp;run&nbsp;-i&nbsp;-t&nbsp;centos&nbsp;/bin/bash&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;运行centos镜像docker&nbsp;run&nbsp;-d&nbsp;-p&nbsp;80:80&nbsp;hjue/centos-lamp&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;运行centos-lamp镜像\r\ndocker&nbsp;rmi&nbsp;[image-id]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;删除镜像docker&nbsp;rmi&nbsp;$(docker&nbsp;images&nbsp;-q)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;删除所有镜像</pre><h2 id=\"toc_4\">帮助</h2><pre class=\"brush:bash;toolbar:false\">docker&nbsp;run&nbsp;--help</pre>',1530753108,1536626049),(71,11,1,'利用Docker快速安装lnmp+swoole开发环境','docker,lnmp','安装git、docker和docker-compose。mac和windows用户安装docker便集成了docker-compose,类unix用户需要单独安装docker-compose。','http://7xviiw.com1.z0.glb.clouddn.com/20180705111949885.jpg',1,2,2,532,'<h2 id=\"toc_0\">基础安装</h2><p>安装git、docker和docker-compose。mac和windows用户安装docker便集成了docker-compose,类unix用户需要单独安装docker-compose。</p><h2 id=\"toc_1\">下载dnmp docker-compose源代码</h2><p>使用git clone即可，也可以直接进去下压缩包<br/></p><pre class=\"brush:bash;toolbar:false\">git&nbsp;clone&nbsp;https://github.com/yeszao/dnmp.git&nbsp;dnmp</pre><h2 id=\"toc_2\">修改php文件夹下Dockerfile以支持swoole</h2><pre class=\"brush:bash;toolbar:false\">cd&nbsp;dnmp/php/这里有多个php安装包，选php72/</pre><p>编辑Dockerfile,结尾添加<br/></p><pre class=\"brush:bash;toolbar:false\">&amp;&amp;pecl&nbsp;install&nbsp;-o&nbsp;-f&nbsp;swoole&nbsp;\\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#用pecl方式快捷安装，大家可以换成源码安装，原理一样\r\n&amp;&amp;&nbsp;docker-php-ext-enable&nbsp;swoole&nbsp;&nbsp;&nbsp;#利用镜像本身的命令开启swoole</pre><h2 id=\"toc_3\">启动容器</h2><pre class=\"brush:bash;toolbar:false\">docker-compose&nbsp;up&nbsp;-d&nbsp;#-d后台运行</pre><p>等待四个镜像dnmp-mysql,dnmp-nginx,dnmp-redis,dnmp-php启动完毕打开浏览器localhost测试是否成功<br/></p><h2 id=\"toc_4\">代码位置</h2><p>源代码在:dnmp/www/site1/ 目录下。</p><h2 id=\"toc_5\">环境调整</h2><p>上面的目录是可以配置的，可以具体修改docker-compose.yml volumes的映射，配合映射到主机的nginx配置文件去修改，注意需要保证Nginx和PHP-FPM都挂载了Host的文件目录，并且都挂载在容器的：/var/www/html。<br/>注意如果容器已经启动，编辑之后需要停止并删除掉之前的容器<br/></p><pre class=\"brush:bash;toolbar:false\">docker-compose&nbsp;stop&nbsp;&amp;&amp;&nbsp;docker-compose&nbsp;rm</pre><p>重新build<br/></p><pre class=\"brush:bash;toolbar:false\">docker-compose&nbsp;up&nbsp;-d&nbsp;--build</pre><p>其他的修改也应如此，具体可以看docker-compose说明。<br/></p><h2 id=\"toc_6\">问题总结</h2><p>1、根据上述步骤下来，就会得到一个运行在docker上的lnmp+swoole的环境，如果使用到了swoole的话，你可能还需要修改nginx配置进行转发处理。<br/>2、连接数据库主机名一定要127.0.0.1，因为MySQL客户端默认使用unix socket方式连接，应该直接用本地IP。<br/>3、客户端登录的时候可能会报2509的连接错误，这个错误出现的原因是这个镜像默认使用mysql最新版，在mysql8之前的版本中加密规则为mysql_native_password，而在mysql8以后的加密规则为caching_sha2_password。<br/>解决此问题有三种方法，一种是更新navicat驱动来解决此问题，二种是将mysql用户登录的加密规则修改为mysql_native_password，三是将mysql版本降级，修改docker-compose.yml去指定mysql版本。<br/>本着开发环境用新不用旧，本文采用第二种办法：<br/></p><pre class=\"brush:bash;toolbar:false\">docker&nbsp;exec&nbsp;-it&nbsp;dnmp-mysql&nbsp;/bin/bash；#进入mysql&nbsp;bash\r\nmysql&nbsp;-uroot&nbsp;-p123456;\r\nuse&nbsp;mysql;\r\nGRANT&nbsp;ALL&nbsp;ON&nbsp;*.*&nbsp;TO&nbsp;&#39;root&#39;@&#39;%&#39;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#授权&nbsp;root&nbsp;用户的所有权限并设置远程访问\r\nflush&nbsp;privileges;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#刷新权限\r\nALTER&nbsp;USER&nbsp;&#39;root&#39;@&#39;localhost&#39;&nbsp;IDENTIFIED&nbsp;BY&nbsp;&#39;你的密码&#39;&nbsp;PASSWORD&nbsp;EXPIRE&nbsp;NEVER;#修改加密规则\r\nALTER&nbsp;USER&nbsp;&#39;root&#39;@&#39;%&#39;&nbsp;IDENTIFIED&nbsp;WITH&nbsp;mysql_native_password&nbsp;BY&nbsp;&#39;你的密码&#39;;&nbsp;&nbsp;&nbsp;#设置新密码\r\nflush&nbsp;privileges;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#刷新权限</pre><p><br/></p>',1530760805,1536693273),(72,23,1,'使用yum提示Error: rpmdb open failed解决办法','yum,rpmdb open failed','在centos系统上，在使用yum命令安装软件包时候报错：Error: rpmdb open failed 原因是RPM数据库被破坏','http://7xviiw.com1.z0.glb.clouddn.com/20180705123803205.jpg',0,1,255,194,'<p>在centos系统上，在使用yum命令安装软件包时候报错：</p><pre class=\"brush:bash;toolbar:false\">error:&nbsp;rpmdb:&nbsp;BDB0113&nbsp;Thread/process&nbsp;2229/140657048729600&nbsp;failed:&nbsp;BDB1507&nbsp;Thread&nbsp;died&nbsp;in&nbsp;Berkeley&nbsp;DB&nbsp;library\r\nerror:&nbsp;db5&nbsp;error(-30973)&nbsp;from&nbsp;dbenv-&gt;failchk:&nbsp;BDB0087&nbsp;DB_RUNRECOVERY:&nbsp;Fatal&nbsp;error,&nbsp;run&nbsp;database&nbsp;recovery\r\nerror:&nbsp;cannot&nbsp;open&nbsp;Packages&nbsp;index&nbsp;using&nbsp;db5&nbsp;-&nbsp;&nbsp;(-30973)\r\nerror:&nbsp;cannot&nbsp;open&nbsp;Packages&nbsp;database&nbsp;in&nbsp;/var/lib/rpm\r\nCRITICAL:yum.main:\r\n\r\nError:&nbsp;rpmdb&nbsp;open&nbsp;failed</pre><p>原因是RPM数据库被破坏</p><p>重建数据库后恢复正常：</p><pre class=\"brush:bash;toolbar:false\">cd&nbsp;/var/lib/rpm/\r\nfor&nbsp;i&nbsp;in&nbsp;`ls&nbsp;|&nbsp;grep&nbsp;&#39;db.&#39;`;do&nbsp;mv&nbsp;$i&nbsp;$i.bak;done\r\nrpm&nbsp;--rebuilddb\r\nyum&nbsp;clean&nbsp;all</pre>',1530765592,1536674985),(73,10,1,'总结SAPI、Module、CGI、FastCGI和PHP-FPM关系','php','SAPI提供了一个和外部通信的接口，有点类似于socket，使得PHP可以和其他应用进行交互数据（apache，nginx等）。php默认提供了很多种SAPI，常见的提供给apache和nginx的php5_module、CGI、FastCGI，给IIS的ISAPI，以及Shell的CLI。','http://7xviiw.com1.z0.glb.clouddn.com/20180706095932560.jpeg',0,1,255,156,'<h2 id=\"toc_0\">SAPI</h2><p>SAPI提供了一个和外部通信的接口，有点类似于socket，使得PHP可以和其他应用进行交互数据（apache，nginx等）。php默认提供了很多种SAPI，常见的提供给apache和nginx的php5_module、CGI、FastCGI，给IIS的ISAPI，以及Shell的CLI。</p><h2 id=\"toc_1\">Module</h2><p>这种模式将php模块安装到apache中，所以每一次apache结束请求，都会产生一条进程，这个进程就完整的包括php的各种运算计算等操作。<br/>apache每接收一个请求，都会产生一个进程来连接php通过sapi来完成请求，可想而知，如果一旦用户过多，并发数过多，服务器就会承受不住了。而且，把mod_php编进apache时，出问题时很难定位是php的问题还是apache的问题。</p><h2 id=\"toc_2\">CGI</h2><p>CGI是一个web server与cgi应用程序之间进行数据传输的协议，保证了传递的是标准数据。CGI可以用任何一种语言编写，只要这种语言具有标准输入、输出和环境变量。如php、perl、tcl等。<br/>缺点是每一次web请求都会有启动和退出过程，也就是最为人诟病的fork-and-execute模式，这样一在大规模并发下，就死翘翘了。</p><h2 id=\"toc_3\">FastCGI</h2><p>从根本上来说，FastCGI是用来提高CGI程序性能的。类似于CGI，FastCGI也可以说是一种协议。<br/>FastCGI像是一个常驻(long-live)型的CGI，它可以一直执行着，只要激活后，不会每次都要花费时间去fork一次。它还支持分布式的运算, 即 FastCGI 程序可以在网站服务器以外的主机上执行，并且接受来自其它网站服务器来的请求。<br/>FastCGI是语言无关的、可伸缩架构的CGI开放扩展，其主要行为是将CGI解释器进程保持在内存中，并因此获得较高的性能。众所周知，CGI解释器的反复加载是CGI性能低下的主要原因，如果CGI解释器保持在内存中，并接受FastCGI进程管理器调度，则可以提供良好的性能、伸缩性、Fail- Over特性等等。</p><h2 id=\"toc_4\">PHP-CGI</h2><p>PHP-CGI就是PHP实现的自带的FastCGI管理器。虽然是php官方出品，但是这丫的却一点也不给力，性能太差，而且也很麻烦不人性化，主要体现在：<br/>1、php-cgi变更php.ini配置后，需重启php-cgi才能让新的php-ini生效，不可以平滑重启。<br/>2、直接杀死php-cgi进程，php就不能运行了。</p><h2 id=\"toc_5\">PHP-FPM</h2><p>PHP-CGI的问题，一直让很多人病垢了很久，所以很多人一直还是在用 Module 方式，也就是apache那样，将php解释器作为模块加载。 直到 2004年一个叫 Andrei Nigmatulin的屌丝发明了PHP-FPM ，这神器的出现就彻底打破了这种局面，这是一个PHP专用的 fastcgi 管理器，它很爽的克服了上面2个问题，而且，还表现在其他方面更表现强劲。<br/>也就是说，PHP-FPM 是对于 FastCGI 协议的具体实现，他负责管理一个进程池，来处理来自Web服务器的请求。目前，PHP5.3版本之后，PHP-FPM是内置于PHP的。<br/>因为PHP-CGI只是个CGI程序，他自己本身只能解析请求，返回结果，不会进程管理。所以就出现了一些能够调度 php-cgi 进程的程序，比如说由lighthttpd分离出来的spawn-fcgi。同样，PHP-FPM也是用于调度管理PHP解析器php-cgi的管理程序。<br/>PHP-FPM通过生成新的子进程可以实现php.ini修改后的平滑重启。</p><h2 id=\"toc_6\">总结</h2><p>CGI：是 Web Server 与 Web Application 之间数据交换的一种协议。<br/>FastCGI：同 CGI，是一种通信协议，但比 CGI 在效率上做了一些优化。同样，SCGI 协议与 FastCGI 类似。<br/>PHP-CGI：是 PHP （Web Application）对 Web Server 提供的 CGI 协议的接口程序。<br/>PHP-FPM：是 PHP（Web Application）对 Web Server 提供的 FastCGI 协议的接口程序，额外还提供了相对智能一些任务管理。</p>',1530842436,1536550298),(74,12,1,'PHP修改文件但是不生效，可能是opcache的问题','opcache,php','开发中，有时候更新文件，但是可能会发现没有效果更新。应该先检查是否有代码逻辑层的缓存和框架的缓存，如果都没有，重启下php-fpm试试，如果发现更新了，那就是opcache的问题了。','http://7xviiw.com1.z0.glb.clouddn.com/20180708173951171.png',0,1,255,279,'<p>开发中，有时候更新文件，但是可能会发现没有效果更新。应该先检查是否有代码逻辑层的缓存和框架的缓存，如果都没有，重启下php-fpm试试，如果发现更新了，那就是opcache的问题了。</p><h2>查找php.ini文件的位置</h2><pre class=\"brush:bash;toolbar:false\">find&nbsp;/&nbsp;-name&nbsp;&#39;php.ini&#39;;\r\n/usr/local/php/etc/php.ini</pre><h2>打开文件地址</h2><p>vi /usr/local/php/etc/php.ini</p><h2>注释opcache配置</h2><pre class=\"brush:bash;toolbar:false\">[Zend&nbsp;Opcache]\r\n;zend_extension=opcache.so\r\n;opcache.memory_consumption=128\r\n;opcache.interned_strings_buffer=8\r\n;opcache.max_accelerated_files=4000\r\n;opcache.revalidate_freq=60\r\n;opcache.fast_shutdown=1\r\n;opcache.enable_cli=1</pre><h2>重启php-fpm</h2><pre class=\"brush:bash;toolbar:false\">serivice/systemctl&nbsp;php-fpm&nbsp;reload</pre><p><br/></p>',1531042918,1536667970),(75,29,1,'简单总结下并发编程模式','并发编程,GO','并发是指多个程序在一段时间内同时运行，而并行是指多个程序在某一时刻同时运行。所以并行也可以看做并行的特殊实例。并行也只能发生于多核计算机或者分布式系统中，试想，如果单台机器只有cpu只有单核，如何同一时刻运行多个程序呢？','http://7xviiw.com1.z0.glb.clouddn.com/20180710094329575.jpg',0,1,255,137,'<h2 id=\"toc_0\">并发与并行</h2><p>并发是指多个程序在一段时间内同时运行，而并行是指多个程序在某一时刻同时运行。所以并行也可以看做并行的特殊实例。并行也只能发生于多核计算机或者分布式系统中，试想，如果单台机器只有cpu只有单核，如何同一时刻运行多个程序呢？<br/>接下来，总结下常见的并发编程模式。</p><h2 id=\"toc_1\">多进程</h2><p>进程是Unix衍生操作系统的根本，因为所有的代码都是在进程中执行的。也可以说一个程序的执行称为一个进程。<br/>一个进程可以使用系统调用fork创建若干个新的进程，也称为子进程，因此，这个进程就是新创建进程的父进程。每个子进程都是父进程的一个副本，每一个副本都是独立的，也就是说，在fork调用之前都会被复制到各个子进程副本内，而副本内的操作对其兄弟进程和父进程是不可见的。这也就是多进程的进程隔离性，正是因其隔离性，可以尽量减少线程加锁/解锁的影响，极大提高性能。但是多进程之间通信比较复杂，需要利用管道，信号，消息队列等进行通信，并且调度开销比较大。</p><h2 id=\"toc_2\">多线程</h2><p>线程其实就是进程的一个控制流，每个进程都至少包含一个线程，这个线程也被称为主线程。一个进程内的所有线程是共享资源的，创建线程的代价比进程要小很多，apache使用的便是多线程并发处理。由于资源是共享的，所以不可避免的带来加锁解锁的复杂度，业务逻辑代码也因此变得复杂，同时，加锁解锁是非常消耗资源的。</p><h2 id=\"toc_3\">协程</h2><p>协程，也称用户态线程，线程的调度不经过系统内核，减少了大量的IO操作，所以性能很高。协程一般都是由语言层面进行支持，比如swoole支持协程。其原理就是多个用户线程和一个内核线程进行绑定，通过yeild进行切换上下文。协程的缺点就是如果某段程序堵塞，其他代码也就得不到执行。另外，由于协程都是语言第三方库进行实现的，在兼容性上稍弱，稳定性不高。</p><h2 id=\"toc_4\">Go程</h2><p>GO语言的Goroutine,它是结合线程和协程的产物。简单来说，就是多个Go程绑定多个线程，也称为两极态线程，内部其实很复杂，GO程逻辑关联对应多个P而每个个P又唯一关联一个线程，通过调度器来切换执行GO程。GO程是通过chanel通信的，chanel类似于消息队列，保证了并发的安全性。GO语言直接从语言层面对类似于协程的支持进行并发编程。</p><h2 id=\"toc_5\">异步回调</h2><p>典型的node语言，通过单线程异步事件回调无阻塞，本质就是不断在事件队列中添加事件，不断循环这个事件队列进行事件处理，性能非常高。但是缺点是，如果某个事件堵塞掉了，整个程序就完了，因为它是单线程的。还有就是回调编程不断的callback，嵌套层级过深(可以利用promise进行流程控制减少回调嵌套)。还有一点就是node程序受制于V8的效能。</p>',1531187104,1536542603),(76,12,1,'git分支合并的正确姿势','git','git分支合并的正确姿势','http://7xviiw.com1.z0.glb.clouddn.com/20180711194727426.jpg',0,1,255,96,'<pre class=\"brush:bash;toolbar:false\">git&nbsp;pull\r\ngit&nbsp;checkout&nbsp;-b&nbsp;test\r\n#coding......\r\ngit&nbsp;commit&nbsp;-a&nbsp;-m&nbsp;&quot;自觉带上提交信息&quot;\r\n#此时需要和主分支合并,先切换回主分支\r\ngit&nbsp;checkout&nbsp;master\r\n#拉下远端代码\r\ngit&nbsp;pull\r\n#此时看看主分支状态，如果没有更新，直接去merge刚才的新分支，\r\ngit&nbsp;merge&nbsp;test&nbsp;#放心大胆的merge肯定不会有冲突\r\n#如果有更新，你也可以直接merge，但是如果有冲突的话，你只能在主分支去解决冲突，一种更安全的方式是在分支中解决冲突\r\ngit&nbsp;checkout&nbsp;test\r\ngit&nbsp;rebase&nbsp;master&nbsp;#如果过程有冲突要去解决冲突\r\ngit&nbsp;checkout&nbsp;master\r\ngit&nbsp;merge&nbsp;test&nbsp;#冲突已经在分支中解决过了，绝逼不会再有冲突了\r\n#push到远程\r\ngit&nbsp;push&nbsp;origin&nbsp;master\r\n#删除掉分支即可\r\ngit&nbsp;branch&nbsp;-d&nbsp;test\r\n#OK&nbsp;完美！</pre><p><br/></p>',1531309831,1536677377),(77,12,1,'笛卡尔乘积-电商网站商品sku组合算法应用','php,笛卡尔乘积,sku组合','笛卡尔乘积是指在数学中，两个集合X和Y的笛卡尓积（Cartesian product），又称直积，表示为X × Y，第一个对象是X的成员而第二个对象是Y的所有可能有序对的其中一个成员。','http://7xviiw.com1.z0.glb.clouddn.com/20180712111127958.jpg',0,1,255,293,'<p>笛卡尔乘积是指在数学中，两个集合X和Y的笛卡尓积（Cartesian product），又称直积，表示为X × Y，第一个对象是X的成员而第二个对象是Y的所有可能有序对的其中一个成员。<br/>利用笛卡尔乘积算法很方便的应用在电商网站商品sku组合上面，应用实例如下：</p><pre class=\"brush:php;toolbar:false;\">$data&nbsp;=&nbsp;[\r\n&nbsp;&nbsp;&nbsp;&nbsp;[&#39;红色&#39;,&#39;黄色&#39;,&#39;黑色&#39;],\r\n&nbsp;&nbsp;&nbsp;&nbsp;[&#39;8G&#39;,&#39;12G&#39;,&#39;64G&#39;],\r\n&nbsp;&nbsp;&nbsp;&nbsp;[&#39;标准&#39;,&#39;套餐1&#39;,&#39;套餐2&#39;],\r\n&nbsp;&nbsp;&nbsp;&nbsp;//...\r\n];\r\nfunction&nbsp;getCartesian(array&nbsp;$data)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;$count&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;count&nbsp;($data);\r\n&nbsp;&nbsp;&nbsp;&nbsp;//初始化笛卡尔集合\r\n&nbsp;&nbsp;&nbsp;&nbsp;$cartesian&nbsp;=&nbsp;$data[0];\r\n&nbsp;&nbsp;&nbsp;&nbsp;//依次用这个集合和data数组的下一个集合去做两两组合\r\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;($i&nbsp;=&nbsp;1;&nbsp;$i&nbsp;&lt;&nbsp;$count;&nbsp;$i++)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$temp&nbsp;=&nbsp;[];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;($cartesian&nbsp;as&nbsp;$v1)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;($data[$i]&nbsp;as&nbsp;$v2)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$temp[]&nbsp;=&nbsp;$v1&nbsp;.&nbsp;&#39;|&#39;&nbsp;.&nbsp;$v2;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//组合完后覆盖笛卡尔集合\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$cartesian&nbsp;=&nbsp;$temp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$cartesian;\r\n}\r\nvar_dump(getCartesian($data));\r\n/*\r\n[\r\n&nbsp;&nbsp;&nbsp;&nbsp;&#39;红色|8G|标准&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&#39;红色|8G|套餐1&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;...\r\n]*/</pre>',1531365262,1536677339),(78,23,1,'Linux远程拷贝神器-scp','linux','scp是 secure copy的缩写, scp是linux系统下基于ssh登陆进行安全的远程文件拷贝命令。linux的scp命令可以在linux服务器之间复制文件和目录。','http://7xviiw.com1.z0.glb.clouddn.com/20180712144454464.jpg',0,1,255,152,'<p>scp是 secure copy的缩写, scp是linux系统下基于ssh登陆进行安全的远程文件拷贝命令。linux的scp命令可以在linux服务器之间复制文件和目录。</p><h2>命令格式</h2><pre class=\"brush:bash;toolbar:false\">scp&nbsp;[参数]&nbsp;[原路径]&nbsp;[目标路径]</pre><h2>使用实例</h2><p>从本地复制到远程</p><pre class=\"brush:bash;toolbar:false\">#本地文件复制到远程目录，命令执行后输入密码&nbsp;scp&nbsp;local_file&nbsp;remote_username@remote_ip:remote_folder\r\nscp&nbsp;/home/xiaowen/1.txt&nbsp;root@www.az1314.cn:/home/xiaowen&nbsp;\r\n#本地文件复制到远程目录并指定文件名，命令执行后输入密码&nbsp;scp&nbsp;local_file&nbsp;remote_username@remote_ip:remote_file\r\nscp&nbsp;/home/xiaowen/1.txt&nbsp;root@www.az1314.cn:/home/xiaowen/2.txt\r\n#本地文件复制到远程目录，命令执行后需要输入用户名和密码&nbsp;scp&nbsp;local_file&nbsp;remote_ip:remote_folder&nbsp;\r\nscp&nbsp;/home/xiaowen/1.txt&nbsp;www.az1314.cn:/home/xiaowen\r\n#本地文件复制到远程目录并指定文件名，命令执行后需要输入用户名和密码&nbsp;scp&nbsp;local_file&nbsp;remote_ip:remote_file\r\nscp&nbsp;/home/xiaowen/1.txt&nbsp;www.az1314.cn:/home/xiaowen/2.txt&nbsp;\r\n#复制目录&nbsp;加参数-r\r\n#scp&nbsp;-r&nbsp;local_folder&nbsp;remote_username@remote_ip:remote_folder\r\nscp&nbsp;-r&nbsp;/home/xiaowen/&nbsp;root@www.az1314.cn:/home/xiaowen/&nbsp;&nbsp;\r\n#scp&nbsp;-r&nbsp;local_folder&nbsp;remote_ip:remote_folder&nbsp;\r\nscp&nbsp;-r&nbsp;/home/xiaowen/&nbsp;www.az1314.cn:/home/xiaowen/</pre><p>&nbsp;从远程复制到本地，只要将从本地复制到远程的命令的后2个参数调换顺序即可</p><pre class=\"brush:bash;toolbar:false\">scp&nbsp;root@www.az1314.cn:/home/xiaowen/1.txt&nbsp;/home/xiaowen/&nbsp;\r\nscp&nbsp;-r&nbsp;root@www.az1314.cn:/home/xiaowen/&nbsp;/home/xiaowen</pre><h2>&nbsp;注意事项</h2><p>&nbsp;1、如果远程服务器防火墙有为scp命令设置了指定的端口，我们需要使用 -P 参数来设置命令的端口号，命令格式如下：</p><pre class=\"brush:bash;toolbar:false\">#scp&nbsp;命令使用端口号&nbsp;4588\r\nscp&nbsp;-P&nbsp;4588&nbsp;root@www.az1314.cn:/usr/local/sin.sh&nbsp;/home/administrator</pre><p>2、使用scp命令要确保使用的用户具有可读取远程服务器相应文件的权限，否则scp命令是无法起作用的。</p><h2>参数说明</h2><pre class=\"brush:bash;toolbar:false\">-1：强制scp命令使用协议ssh1\r\n-2：强制scp命令使用协议ssh2\r\n-4：强制scp命令只使用IPv4寻址\r\n-6：强制scp命令只使用IPv6寻址\r\n-B：使用批处理模式（传输过程中不询问传输口令或短语）\r\n-C：允许压缩。（将-C标志传递给ssh，从而打开压缩功能）\r\n-p：保留原文件的修改时间，访问时间和访问权限。\r\n-q：不显示传输进度条。\r\n-r：递归复制整个目录。\r\n-v：详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。\r\n-c&nbsp;cipher：&nbsp;以cipher将数据传输进行加密，这个选项将直接传递给ssh。\r\n-F&nbsp;ssh_config：&nbsp;指定一个替代的ssh配置文件，此参数直接传递给ssh。\r\n-i&nbsp;identity_file：&nbsp;从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。\r\n-l&nbsp;limit：&nbsp;限定用户所能使用的带宽，以Kbit/s为单位。\r\n-o&nbsp;ssh_option：&nbsp;如果习惯于使用ssh_config(5)中的参数传递方式，\r\n-P&nbsp;port：注意是大写的P,&nbsp;port是指定数据传输用到的端口号\r\n-S&nbsp;program：&nbsp;指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。</pre><p><br/></p>',1531378079,1536706700),(79,23,1,'lrzsz在linux里可代替ftp上传和下载','linux','windows 需要向centos服务器上传文件，可直接在centos上执行命令yum -y install lrzsz 程序会自动安装好，然后如你要下载者sz [找到你要下载的文件] 如果你要上传，者rz 浏览找到你本机要上传的文件。','http://7xviiw.com1.z0.glb.clouddn.com/20180716092442613.jpg',0,1,255,188,'<p>lrzsz 官网入口：<a href=\"http://freecode.com/projects/lrzsz/\" target=\"_blank\">http://freecode.com/projects/lrzsz/</a>&nbsp;</p><p>lrzsz是一个unix通信套件提供的X，Y，和ZModem文件传输协议</p><p>windows 需要向centos服务器上传文件，可直接在centos上执行命令yum -y install lrzsz 程序会自动安装好，然后如你要下载者sz [找到你要下载的文件] 如果你要上传，者rz 浏览找到你本机要上传的文件。需要注意的事这个命令无法在putty界面使用哦！</p><pre class=\"brush:bash;toolbar:false\">//&nbsp;首先安装lrzsz&nbsp;\r\nyum&nbsp;-y&nbsp;install&nbsp;lrzsz&nbsp;\r\n//&nbsp;上传文件，执行命令rz，会跳出文件选择窗口，选择好文件，点击确认即可。\r\nrz\r\n//&nbsp;下载文件，执行命令sz\r\nsz</pre><p><br/></p>',1531704288,1536693274),(80,22,1,'git忽略而不提交文件的3种情形','git','从未提交过的文件可以用.gitignore 也就是添加之后从来没有提交（commit）过的文件，可以使用.gitignore忽略该文件 ','http://7xviiw.com1.z0.glb.clouddn.com/20180717091831547.jpeg',0,1,255,201,'<h2>未提交过忽略</h2><p>从未提交过的文件可以用.gitignore 也就是添加之后从来没有提交（commit）过的文件，可以使用.gitignore忽略该文件 该文件只能作用于未跟踪的文件（Untracked Files），也就是那些从来没有被 git 记录过的文件 比如，忽略log/下的日志文件，可以在.gitignore中写 log/*</p><h2>已在远程忽略</h2><p>已经推送（push）过的文件，想从git远程库中删除，并在以后的提交中忽略，但是却还想在本地保留这个文件 执行命令</p><pre class=\"brush:bash;toolbar:false\">git&nbsp;rm&nbsp;--cached&nbsp;app/config.js</pre><p>后面的 app/config.js 是要从远程库中删除的文件的路径，支持通配符* 比如，不小心提交到git上的一些log日志文件，想从远程库删除，可以用这个命令</p><h2>已在远程想保留</h2><p>已经推送（push）过的文件，想在以后的提交时忽略此文件，即使本地已经修改过，而且不删除git远程库中相应文件 执行命令&nbsp;</p><pre class=\"brush:bash;toolbar:false\">git&nbsp;update-index&nbsp;--assume-unchanged&nbsp;app/config.js&nbsp;#后面的app/config.js是要忽略的文件的路径</pre><p>如果要忽略一个目录，打开 git bash，cd到 目标目录下，执行：&nbsp;</p><pre class=\"brush:bash;toolbar:false\">git&nbsp;update-index&nbsp;--assume-unchanged&nbsp;$(git&nbsp;ls-files&nbsp;|&nbsp;tr&nbsp;&#39;\\n&#39;&nbsp;&#39;&nbsp;&#39;)</pre><p>比如有一个配置文件记录数据库的链接信息，每个人的链接信息肯定不一样，但是又要提供一个标准的模板，用来告知如何填写链接信息，那么就需要在git远程库上有一个标准配置文件，然后每个人根据自己的具体情况，修改一份链接信息自用，而且不会将该配置文件提交到库</p><p>恢复git跟踪</p><pre class=\"brush:bash;toolbar:false\">git&nbsp;update-index&nbsp;--no-assume-unchanged&nbsp;app/config.js</pre><p><br/></p>',1531790455,1536725026),(81,24,1,'IT技术开发教程视频书籍合集','web技术博客,php教程','IT技术开发教程视频书籍合集','http://7xviiw.com1.z0.glb.clouddn.com/20180717155607126.jpg',1,2,2,303,'<h2>声明<br/></h2><p>资源不定期发布中...</p><h2>GO</h2><pre class=\"brush:bash;toolbar:false\">#GO&nbsp;编程基础一\r\n链接:https://pan.baidu.com/s/1KJ7FV2ajHjX_oxud-T_lnQ&nbsp;&nbsp;密码:lc70\r\n#GO&nbsp;编程基础二\r\n链接:https://pan.baidu.com/s/1cbowsJjPLc22C2UHfiYamA&nbsp;&nbsp;密码:x4gb\r\n#GO&nbsp;名库讲解\r\n链接:https://pan.baidu.com/s/14fTMLZm__-e8Suv5ESbWsg&nbsp;&nbsp;密码:l9f3\r\n#GO&nbsp;WEB基础\r\n链接:https://pan.baidu.com/s/1ry04dZ_kCDKo2j1chm059w&nbsp;&nbsp;密码:7o2e\r\n#Google资深工程师深度讲解\r\n链接:https://pan.baidu.com/s/1cqwQnfXdc0DsgFVCnV4UfQ&nbsp;&nbsp;密码:hr4y\r\n#220小时快速入门go语言视频\r\n链接:https://pan.baidu.com/s/1b0i26bwTNYCg9bMLB51LIA&nbsp;&nbsp;密码:vmb0\r\n#老男孩教育Go语言第一期\r\n链接:https://pan.baidu.com/s/1CbSYuZWTBd78D0CXImAqnQ&nbsp;&nbsp;密码:0zk2\r\n#基于Golang协程实现流量统计系统\r\n链接:https://pan.baidu.com/s/15rdpjxaskkN8cHRqXYdjoQ&nbsp;&nbsp;密码:1bdl\r\n#北风网Go语言重入门到实战视频教程\r\n链接:https://pan.baidu.com/s/194O_B5g7bKk_ur4BfzFFXg&nbsp;&nbsp;密码:crk2\r\n#Go&nbsp;语言打造区块链\r\n链接:https://pan.baidu.com/s/1sPNBek__pXClPou6zX4riA&nbsp;&nbsp;密码:u3yt\r\n#GO&nbsp;电子书&amp;PPT\r\n链接:https://pan.baidu.com/s/1p4YiQtyYe_KVvO7skaADNg&nbsp;&nbsp;密码:btsf</pre>',1531814267,1536693275),(82,16,1,'js深拷贝和浅拷贝','javascript','在使用JavaScript对数组进行操作的时候，我们经常需要将数组进行备份，事实证明如果只是简单的将它赋予其他变量，那么我们只要更改其中的任何一个，然后其他的也会跟着改变，这就导致了问题的发生。','http://7xviiw.com1.z0.glb.clouddn.com/20180727150714403.jpg',0,2,255,293,'<h2>数组的深浅拷贝</h2><p>在使用JavaScript对数组进行操作的时候，我们经常需要将数组进行备份，事实证明如果只是简单的将它赋予其他变量，那么我们只要更改其中的任何一个，然后其他的也会跟着改变，这就导致了问题的发生。</p><pre class=\"brush:js;toolbar:false\">var&nbsp;arr&nbsp;=&nbsp;[&quot;One&quot;,&quot;Two&quot;,&quot;Three&quot;];\r\nvar&nbsp;_arr&nbsp;=&nbsp;arr;\r\n_arr[1]&nbsp;=&nbsp;&quot;2&quot;;\r\nconsole.log(arr);//One,2,Three\r\nconsole.log(_arr);//One,2,Three</pre><p>像上面的这种直接赋值的方式就是浅拷贝，也就是arr和_arr引用的还是同一个数组。</p><pre class=\"brush:js;toolbar:false\">//slice\r\nvar&nbsp;arr&nbsp;=&nbsp;[&quot;One&quot;,&quot;Two&quot;,&quot;Three&quot;];\r\nvar&nbsp;_arr&nbsp;=&nbsp;arr.slice(0);\r\n_arr[1]&nbsp;=&nbsp;&quot;2&quot;;\r\nconsole.log(arr);//One,Two,Three\r\nconsole.log(_arr);//One,2,Three\r\n//concat\r\nvar&nbsp;arr&nbsp;=&nbsp;[&quot;One&quot;,&quot;Two&quot;,&quot;Three&quot;];\r\nvar&nbsp;_arr&nbsp;=&nbsp;arr.concat();\r\n_arr[1]&nbsp;=&nbsp;&quot;2&quot;;\r\nconsole.log(arr);//One,Two,Three\r\nconsole.log(_arr);//One,2,Three</pre><h2>对象的深浅拷贝</h2><pre class=\"brush:js;toolbar:false\">var&nbsp;a={name:&#39;yy&#39;,age:26};\r\nvar&nbsp;b=a;\r\na.name=&#39;xx&#39;;\r\nconsole.log(b);//{&nbsp;name=&quot;xx&quot;,&nbsp;age=26}\r\nconsole.log(a);//{&nbsp;name=&quot;xx&quot;,&nbsp;age=26}</pre><p>上面的这种原理一样，解决就是重新声明一个对象进行赋值</p><pre class=\"brush:js;toolbar:false\">var&nbsp;a={name:&#39;yy&#39;,age:26};\r\nvar&nbsp;b=new&nbsp;Object();\r\nb.name=a.name;\r\nb.age=a.age;\r\na.name=&#39;xx&#39;;\r\nconsole.log(b);//{&nbsp;name=&quot;yy&quot;,&nbsp;age=26}\r\nconsole.log(a);//{&nbsp;name=&quot;xx&quot;,&nbsp;age=26}\r\n//json对象深层迭代,写个函数\r\nvar&nbsp;deepCopy=&nbsp;function(source)&nbsp;{&nbsp;\r\nvar&nbsp;result={};\r\nfor&nbsp;(var&nbsp;key&nbsp;in&nbsp;source)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result[key]&nbsp;=&nbsp;typeof&nbsp;source[key]===’object’?&nbsp;deepCoyp(source[key]):&nbsp;source[key];\r\n&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;return&nbsp;result;&nbsp;\r\n}</pre><p><br/></p>',1532675338,1536712913),(83,11,1,'通过php代码去了解IOC/DI依赖注入和控制反转','php,依赖注入,ioc,di','控制反转（Inversion of Control，缩写为IoC），是面向对象编程中的一种设计原则。其中**最常见的方式叫做依赖注入（Dependency Injection，简称DI），还有一种方式叫“依赖查找”（Dependency Lookup）。通过控制反转，对象在被创建的时候，由一个调控系统内所有对象的外界实体，将其所依赖的对象的引用传递给它。也可以说，依赖被注入到对象中。','http://7xviiw.com1.z0.glb.clouddn.com/20180730153032600.jpg',0,1,255,268,'<h2>IOC容器</h2><pre class=\"brush:php;toolbar:false\">class&nbsp;IOC{\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;绑定&nbsp;全局单例对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@var&nbsp;array&nbsp;&nbsp;&nbsp;[&#39;class_name&#39;&nbsp;=&gt;&nbsp;obj]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;$single&nbsp;&nbsp;&nbsp;=&nbsp;[];\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;绑定&nbsp;非单例对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@var&nbsp;array&nbsp;&nbsp;[&#39;class_name&#39;&nbsp;=&gt;&nbsp;class_name]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;static&nbsp;$nosingle&nbsp;=&nbsp;[];\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;注册全局单例对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;$name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class_name&nbsp;类名::class\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;$obj&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;class_name&nbsp;&nbsp;obj\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@throws&nbsp;Exception\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;function&nbsp;singleton($name,&nbsp;$obj){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!is_object($obj))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;Exception(&#39;method&nbsp;singleton&nbsp;args&nbsp;$obj&nbsp;must&nbsp;be&nbsp;object&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static::$single[$name]&nbsp;=&nbsp;$obj;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;注册非单例对象，运行时候需要参数自动实例化\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;这里name可能是顶层接口，也有可能是类名\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;$name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name&nbsp;类名::class\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;$class_name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class_name&nbsp;类名::class\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;function&nbsp;nosingleton($name,&nbsp;$class_name){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static::$nosingle[$name]&nbsp;=&nbsp;$class_name;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;通过IOC容器获取对象实例\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;$name&nbsp;&nbsp;&nbsp;class::name\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;object\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@throws&nbsp;ReflectionException\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;function&nbsp;getInstance($name)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//用反射查看该类实例化需要的参数，也就是构造函数参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$param&nbsp;=&nbsp;static::getParams($name);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$param[&#39;param&#39;]&nbsp;?&nbsp;(new&nbsp;ReflectionClass($name))-&gt;newInstanceArgs($param[&#39;param&#39;])&nbsp;:&nbsp;(new&nbsp;ReflectionClass($name))-&gt;newInstance();\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;获取参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;$name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;类名\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;string&nbsp;$method&nbsp;&nbsp;方法\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;mixed\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@throws&nbsp;ReflectionException\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;function&nbsp;getParams($name,&nbsp;$method&nbsp;=&nbsp;&#39;__construct&#39;)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$param[&#39;param&#39;]&nbsp;&nbsp;=&nbsp;[];&nbsp;&nbsp;//参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$param[&#39;value&#39;]&nbsp;&nbsp;=&nbsp;[];&nbsp;&nbsp;//默认值\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//如果没有构造函数&nbsp;则返回空\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($method&nbsp;==&nbsp;&#39;__construct&#39;)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rf&nbsp;&nbsp;=&nbsp;new&nbsp;ReflectionClass($name);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!$rf-&gt;hasMethod($method))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$param;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//反射方法&nbsp;获取参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$rf_method&nbsp;=&nbsp;new&nbsp;ReflectionMethod($name,&nbsp;$method);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$params&nbsp;=&nbsp;$rf_method-&gt;getParameters();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!empty($params))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;($params&nbsp;as&nbsp;$k&nbsp;=&gt;&nbsp;$v)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($v_class&nbsp;=&nbsp;$v-&gt;getClass())&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//如果这个参数是对象，则获取对象类名，查看容器内是否有对应的设置\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$v_class_name&nbsp;=&nbsp;$v_class-&gt;getName();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(array_key_exists($v_class_name,&nbsp;static::$single))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//单例对象&nbsp;直接返回\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$param[&#39;param&#39;][]&nbsp;=&nbsp;static::$single[$v_class_name];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;elseif&nbsp;(array_key_exists($v_class_name,&nbsp;static::$nosingle))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//非单例对象，通过name去实例化对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$param[&#39;param&#39;][]&nbsp;=&nbsp;static::getInstance(static::$nosingle[$v_class_name]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//容器内没有这个,直接调用getInstance\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$param[&#39;param&#39;][]&nbsp;=&nbsp;static::getInstance($v_class_name);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//非对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$param_name&nbsp;=&nbsp;$v-&gt;getName();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($v-&gt;isDefaultValueAvailable())&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;是否包含默认值\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$param_default_value&nbsp;=&nbsp;$v-&gt;getDefaultValue();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$param[&#39;value&#39;][$param_name]&nbsp;=&nbsp;$param_default_value;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$param[&#39;param&#39;][]&nbsp;=&nbsp;$param_name;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$param;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;/**\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;容器的运行入口&nbsp;主要负责加载类方法，并将运行所需的标量参数做映射和默认值处理\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;类名\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$method&nbsp;&nbsp;&nbsp;方法\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@param&nbsp;array&nbsp;$params&nbsp;&nbsp;&nbsp;参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@return&nbsp;mixed\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@throws&nbsp;ReflectionException\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;function&nbsp;run($name,&nbsp;$method,&nbsp;array&nbsp;$params&nbsp;=&nbsp;array())\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!class_exists($name))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;Exception($name&nbsp;.&nbsp;&quot;not&nbsp;found!&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!method_exists($name,&nbsp;$method))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;Exception($name&nbsp;.&nbsp;&quot;::&quot;&nbsp;.&nbsp;$method&nbsp;.&nbsp;&quot;&nbsp;not&nbsp;found!&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//调用getInstance&nbsp;通过ioc容器获取类对象\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$instance&nbsp;=&nbsp;static::getInstance($name);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取此方法需要的参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$param&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;static::getParams($name,&nbsp;$method);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//通过param&nbsp;&nbsp;和&nbsp;传入的$params&nbsp;&nbsp;合并&nbsp;方法运行参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$_param&nbsp;=&nbsp;array_map(function&nbsp;($v)&nbsp;use&nbsp;($param,&nbsp;$params)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;对象参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(is_object($v))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$v;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;传入的运行参数&nbsp;有对应的设置\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(array_key_exists($v,&nbsp;$params))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$params[$v];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;使用默认值\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(array_key_exists($v,&nbsp;$param[&#39;value&#39;]))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$param[&#39;value&#39;][$v];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;没有匹配到任何值&nbsp;报出异常\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;Exception($v&nbsp;.&nbsp;&#39;&nbsp;args&nbsp;error&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},&nbsp;$param[&#39;param&#39;]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;运行\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;call_user_func_array([$instance,&nbsp;$method],&nbsp;$_param);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><h2>相关依赖</h2><pre class=\"brush:php;toolbar:false\">//&nbsp;它将被以单例模式注入&nbsp;全局的所有注入点都使用的同一实例\r\nclass&nbsp;singleton\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;$name&nbsp;=&nbsp;&#39;singleton&#39;;\r\n}\r\n//&nbsp;它将以普通依赖模式注入&nbsp;各注入点会分别获取一个实例\r\nclass&nbsp;noSingleton\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;$name&nbsp;=&nbsp;&#39;noSingleton&#39;;\r\n}\r\n//&nbsp;接口注入\r\ninterface&nbsp;Animal\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;fly();\r\n}\r\n//&nbsp;接口实现\r\nclass&nbsp;Cat&nbsp;implements&nbsp;Animal\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;fly()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;Cat&nbsp;fly&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\n//&nbsp;接口实现\r\nclass&nbsp;Dog&nbsp;implements&nbsp;Animal\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;fly()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;Dog&nbsp;fly&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><h2>测试运行</h2><pre class=\"brush:php;toolbar:false\">//&nbsp;具体的运行类\r\nclass&nbsp;TestController\r\n{\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;$singleton;\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;$noSingleton;\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;这里自动注入一次\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;__construct(singleton&nbsp;$singleton,&nbsp;noSingleton&nbsp;$noSingleton)\r\n&nbsp;&nbsp;&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;singleton&nbsp;&nbsp;&nbsp;=&nbsp;$singleton;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$this-&gt;noSingleton&nbsp;=&nbsp;$noSingleton;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;这里的&nbsp;singleton&nbsp;和&nbsp;noSingleton&nbsp;和&nbsp;Animal&nbsp;会再次注入一次\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;function&nbsp;show(singleton&nbsp;$singleton1,&nbsp;singleton&nbsp;$singleton2,&nbsp;noSingleton&nbsp;$noSingleton1,&nbsp;noSingleton&nbsp;$noSingleton2,$name,&nbsp;Animal&nbsp;$animal,&nbsp;$age&nbsp;=&nbsp;25)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//是否单例传入\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var_dump($singleton1&nbsp;===&nbsp;$singleton2);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;&lt;br&gt;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//是否非单例传入\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var_dump($noSingleton1&nbsp;===&nbsp;$noSingleton2);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;&lt;br&gt;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//是否实现接口\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$animal-&gt;fly();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;&lt;br&gt;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//其他标量参数\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var_dump($name);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;&lt;br&gt;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var_dump($age);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;&lt;br&gt;&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}\r\ntry{\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;依赖的单例注册\r\n&nbsp;&nbsp;&nbsp;&nbsp;IOC::singleton(singleton::class,&nbsp;new&nbsp;singleton());\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;依赖的非单例注册\r\n&nbsp;&nbsp;&nbsp;&nbsp;IOC::nosingleton(noSingleton::class,&nbsp;noSingleton::class);\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;接口的注册&nbsp;Animal&nbsp;注册关联具体的实现类&nbsp;cat&nbsp;dog&nbsp;这里绑定一只猫\r\n&nbsp;&nbsp;&nbsp;&nbsp;IOC::nosingleton(Animal::class,&nbsp;Cat::class);\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;运行\r\n&nbsp;&nbsp;&nbsp;&nbsp;IOC::run(TestController::class,&nbsp;&#39;show&#39;,&nbsp;[&#39;name&#39;&nbsp;=&gt;&nbsp;&#39;小文blog&#39;]);\r\n}&nbsp;catch&nbsp;(Exception&nbsp;$e)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$e-&gt;getMessage();\r\n}\r\n//bool(true)\r\n//bool(false)\r\n//Cat&nbsp;fly\r\n//string(10)&nbsp;&quot;小文blog&quot;\r\n//int(25)</pre><h2>思考</h2><p>这么麻烦干嘛，我为何不能需要什么对象就new一下</p><p>当然不能，ioc/di最大好处就是解耦，比如&nbsp; 我show方法 的第一个参数需要改变成另一个对象，那我直接修改依赖即可，如果我的animal的想让dog fly 那我注册的时候 就把dog注册上即可， 类里面不需要任何改变</p><p>这个就是所谓的面向接口编程，接口可以理解为一个规范、一个约束。高层模块不直接依赖于低层模块，它们都应该依赖于抽象（指接口）。</p><h2>总结IOC/DI</h2><p>控制反转（Inversion of Control，缩写为IoC），是面向对象编程中的一种设计原则。其中**最常见的方式叫做依赖注入（Dependency Injection，简称DI），还有一种方式叫“依赖查找”（Dependency Lookup）。通过控制反转，对象在被创建的时候，由一个调控系统内所有对象的外界实体，将其所依赖的对象的引用传递给它。也可以说，依赖被注入到对象中。</p><p>依赖注入是个花俏的名词，事实上是指：类的依赖通过构造器或在某些情况下通过「setter」方法「注入」</p><p>使用依赖注入，最重要的一点好处就是有效的分离了对象和它所需要的外部资源，使得它们松散耦合，有利于功能复用，更重要的是使得程序的整个体系结构变得非常灵活。</p><p>其实DI和IOC说的是一个事情，IOC就是要控制反转，而DI是实现IOC的方式!</p>',1532936429,1536724944),(84,11,1,'PHP-SSO单点登录思路','php,sso,单点登录','不同父域名下的多个子站实现一站登录，全站登录。主要通过p3p技术。','http://7xviiw.com1.z0.glb.clouddn.com/20180731093155127.png',0,3,255,178,'<h2>准备工作</h2><p>有以下三个网站a.com b.com c.com等多个不同域名的子站，和公共的sso.com登录服务器</p><p>a.com b.com c.com需要在本域下分别暴露一个设置登录成功的cookie脚本和获取cookie的脚本。</p><pre class=\"brush:bash;toolbar:false\">#a.com/set_cookie.php&nbsp;b.com/set_cookie.php&nbsp;c.com/set_cookie.php\r\n#a.com/get_cookie.php&nbsp;b.com/get_cookie.php&nbsp;c.com/get_cookie.php</pre><p>sso.com则需要设置白名单和子站set_cookie的地址</p><h2>主要思路</h2><p>&nbsp; &nbsp; 用户登入网站，不管在a.com,b.com,c.com哪个域名下，如果需要登录，都重定向到sso.com登录服务器，</p><pre class=\"brush:bash;toolbar:false\">0.登录a.com，异步请求a.com/get_cookie.php，如果没有则未登录，如需登录则跳转至sso.com登录服务器\r\n1.sso.com登录服务器记录refer并检查是否在白名单内\r\n2.检查sso.com域名下是否存在登录cookie\r\n3.没有检查到登录cookie，展示登录表单，待用户输入账号密码\r\n4.sso.com验证用户账号密码信息正确，生成唯一token，存入cookie，token写入redis对应好用户和token的关系\r\n5.将token进行rsa对称加密传输，这里可以为其他加密方法，保证传输的安全不被窃取，通过script或iframe的加载a.com的set_ookie脚本，就是html页面加入一段script或iframe标签进行跨域访问\r\n6.a.com的set_cookie脚本验证token.并将token写入cookie（重点：这里需要P3P头设置，设置方法在文章末尾）\r\n7.此时，sso.com可以重定向到a.com此时a.com已经写入cookie成功，所以登录成功\r\n8.从a.com登录b.com，同步骤0\r\n9.此时sso.com已有cookie,继续验证token是否在redis存在，如果有，则进行步骤6\r\n10.同6，设置cookie\r\n11.同7，重定向已设置好cookie的b.com显示登录成功</pre><p>这里主要是一个思路，安全性有待商榷，主要需要防止Cookie伪造和窃取。</p><h2>p3p头设置</h2><pre class=\"brush:php;toolbar:false\">//验证略过\r\n//主要下面这个p3p头的设置，可以跨域读取cookie\r\nheader(&#39;P3P:&nbsp;CP=&quot;CURa&nbsp;ADMa&nbsp;DEVa&nbsp;PSAo&nbsp;PSDo&nbsp;OUR&nbsp;BUS&nbsp;UNI&nbsp;PUR&nbsp;INT&nbsp;DEM&nbsp;STA&nbsp;PRE&nbsp;COM&nbsp;NAV&nbsp;OTC&nbsp;NOI&nbsp;DSP&nbsp;COR&quot;&#39;);\r\nsetcookie(&quot;ticket&quot;,&nbsp;$token,&nbsp;$expire_at,&nbsp;&quot;/&quot;,&nbsp;&quot;.&quot;);</pre><h2>后记</h2><p>也可以在步骤7直接跳转set_cookie，让写入cookie脚本进行重定向，这样就不需要加p3p头和跨域访问了。</p><p>如果是同父域名就不需要这么麻烦，比如a.xx.com、b.xx.com，直接设置cookie的时候设置domain为父域下的所有子域即可，登录态用session，如果分布式系统，则考虑session第三方存储，如redis或memcached</p><p><br/></p>',1533000989,1536712913),(85,29,1,'golang的编译命令总结','go','golang的编译命令总结','http://7xviiw.com1.z0.glb.clouddn.com/20180813112416428.jpg',0,2,255,119,'<h2>理解 Go 的环境变量</h2><p>GOROOT:Go语言的当前安装目录</p><p>GOPATH:Go语言的工作区的集合，工作区就是我们平时写代码的地方，每个工作区用:隔开(windows是;)</p><p>GOBIN:Go程序的可执行文件的目录</p><p>PATH:系统环境变量，为了方便使用 Go 语言命令和 Go 程序的可执行文件，需要添加其值</p><h2>Go的源码分类</h2><p>命令源码文件:声明main包并有mian函数的源码文件</p><p>库源码文件:代码包的普通源码文件</p><p>测试源码文件:名称以 _test.go 为后缀的代码文件，并且必须包含 Test 或者 Benchmark 名称前缀的函数</p><h2>go run</h2><p>专门用来运行命令源码文件的命令，注意，这个命令不是用来运行所有 Go 的源码文件的</p><p>go run 命令只能接受一个命令源码文件以及若干个库源码文件（必须同属于 main 包）作为文件参数，且不能接受测试源码文件。它在执行时会检查源码文件的类型。如果参数中有多个或者没有命令源码文件，那么 go run 命令就只会打印错误提示信息并退出，而不会继续执行。</p><p>go run会生成归档文件和可执行文件，并自动执行可执行文件。</p><h2>go build</h2><p>go build 用于编译我们指定的源码文件或代码包以及它们的依赖包。但是注意如果用来编译非命令源码文件，即库源码文件，go build 执行完是不会产生任何结果的。这种情况下，go build 命令只是检查库源码文件的有效性，只会做检查性的编译，而不会输出任何结果文件。</p><p>go build对命令源码文件使用会生成可执行文件。可执行文件生成在当前目录</p><h2>go install</h2><p>go install 用于编译并安装指定的代码包及它们的依赖包。当指定的代码包的依赖包还没有被编译和安装时，该命令会先去处理依赖包。与 go build 命令一样，传给 go install 命令的代码包参数应该以导入路径的形式提供。并且，go build 命令的绝大多数标记也都可以用于&nbsp;</p><p>go install 命令。实际上，go install 命令只比 go build 命令多做了一件事，即：安装编译后的结果文件到指定目录。</p><p>安装代码包会在当前工作区的 pkg 的平台相关目录下生成归档文件（即 .a 文件）。 安装命令源码文件会在当前工作区的 bin 目录（如果 GOPATH 下有多个工作区，就会放在 GOBIN 目录下）生成可执行文件。</p><p><br/></p>',1534130711,1536693278),(86,16,1,'LinuxCentos系统下puppeteer使用问题','node,puppeteer,centos','puppeteer是谷歌官方出品并维护的无头浏览器node库。使用发现本地一顿操作甚是爽但部署线上时候傻眼，各种报错。','http://7xviiw.com1.z0.glb.clouddn.com/20180829093739291.gif',0,1,255,77,'<p>puppeteer是谷歌官方出品并维护的无头浏览器node库。使用发现本地一顿操作甚是爽但部署线上时候傻眼，各种报错。</p><p>原来puppeteer虽然帮你下了一个Chromium，但并没有帮你把依赖都装好。于是你要自己把那些so都装好。</p><p>官方给的是Ubuntu版本的各个so包的apt-get安装方式，centos版本居然没有放！</p><p>最后在这个<a href=\"https://github.com/GoogleChrome/puppeteer/issues/560#issuecomment-325224766\" target=\"_blank\" title=\"issue\">issue</a>里找到了解决方案。</p><h2>依赖安装</h2><pre class=\"brush:bash;toolbar:false\">#依赖库\r\nyum&nbsp;install&nbsp;pango.x86_64&nbsp;libXcomposite.x86_64&nbsp;libXcursor.x86_64&nbsp;libXdamage.x86_64&nbsp;libXext.x86_64&nbsp;libXi.x86_64&nbsp;libXtst.x86_64&nbsp;cups-libs.x86_64&nbsp;libXScrnSaver.x86_64&nbsp;libXrandr.x86_64&nbsp;GConf2.x86_64&nbsp;alsa-lib.x86_64&nbsp;atk.x86_64&nbsp;gtk3.x86_64&nbsp;-y\r\n&nbsp;#字体\r\nyum&nbsp;install&nbsp;ipa-gothic-fonts&nbsp;xorg-x11-fonts-100dpi&nbsp;xorg-x11-fonts-75dpi&nbsp;xorg-x11-utils&nbsp;xorg-x11-fonts-cyrillic&nbsp;xorg-x11-fonts-Type1&nbsp;xorg-x11-fonts-misc&nbsp;-y</pre><h2>sandbox去沙箱</h2><p>启动参数里加args,--no-sandbox,--disable-setuid-sandbox</p><pre class=\"brush:js;toolbar:false\">const&nbsp;puppeteer&nbsp;=&nbsp;require(&#39;puppeteer&#39;);\r\n(async&nbsp;()&nbsp;=&gt;&nbsp;{\r\n&nbsp;&nbsp;const&nbsp;browser&nbsp;=&nbsp;await&nbsp;puppeteer.launch({args:&nbsp;[&#39;--no-sandbox&#39;,&nbsp;&#39;--disable-setuid-sandbox&#39;]});\r\n&nbsp;&nbsp;const&nbsp;page&nbsp;=&nbsp;await&nbsp;browser.newPage();\r\n&nbsp;&nbsp;await&nbsp;page.goto(&#39;https://example.com&#39;);\r\n&nbsp;&nbsp;await&nbsp;page.screenshot({path:&nbsp;&#39;example.png&#39;});\r\n&nbsp;&nbsp;await&nbsp;browser.close();\r\n})();</pre><p>ok，可以run了。</p>',1535506863,1536711189);
/*!40000 ALTER TABLE `wen_article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wen_category`
--

DROP TABLE IF EXISTS `wen_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wen_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL COMMENT '//分类名称',
  `seo_title` varchar(100) NOT NULL COMMENT '//SEO标题',
  `seo_key` varchar(100) NOT NULL COMMENT '//SEO关键词',
  `seo_desc` varchar(255) NOT NULL COMMENT '//SEO描述',
  `hits` int(11) NOT NULL DEFAULT '0' COMMENT '//点击量',
  `sort` int(11) NOT NULL DEFAULT '0' COMMENT '//排序',
  `pid` int(11) NOT NULL DEFAULT '0' COMMENT '//顶级分类',
  `created_at` int(11) NOT NULL COMMENT '//创建于',
  `updated_at` int(11) NOT NULL COMMENT '//修改于',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=30 DEFAULT CHARSET=utf8 COMMENT='//文章分类表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wen_category`
--

LOCK TABLES `wen_category` WRITE;
/*!40000 ALTER TABLE `wen_category` DISABLE KEYS */;
INSERT INTO `wen_category` VALUES (10,'php基础','php基础_php教程 - 小文博客','','',0,0,7,1465640791,1466432418),(7,'PHP学习','php学习_php基础教程_php心得  - 小文博客','php学习,php基础,php教程,php心得','欢迎来到小文博客，这里是php学习爱好者的基地，每天分享最新最热php技术教程，学习PHP从这里开始。',0,0,0,1465312267,1466432192),(11,'php进阶','php进阶_php面向对象  - 小文博客','','',0,1,7,1466256629,1466432435),(12,'php心得','php心得_php分享 - 小文博客','','',0,2,7,1466256736,1466432405),(13,'前端技术','前端技术_html_css_js_jq  - 小文博客','前端技术,html,css,js,jq学习分享','欢迎来到小文博客，这里是php学习爱好者的基地，每天分享最新最热php技术教程，学习PHP从这里开始。',0,1,0,1466256855,1466432569),(14,'html+css','html_css - 小文博客','','',0,0,13,1466256921,1466432587),(15,'JQuery','JQuery_jq - 小文博客','','',0,1,13,1466257021,1466432607),(16,'javascript','javascript_js - 小文博客','','',0,2,13,1466257045,1466432630),(17,'数据库','数据库_mysql_nosql数据库 - 小文博客','数据库学习,mysql,缓存数据库,nosql数据库','欢迎来到小文博客，这里是php学习爱好者的基地，每天分享最新最热php技术教程，学习PHP从这里开始。',0,2,0,1466257078,1466432716),(18,'mysql','mysql_数据库管理 - 小文博客','','',0,0,17,1466257158,1466432741),(19,'服务器','服务器_linux学习_linux教程_web服务器 - 小文博客','服务器,linux学习,linux教程,web服务器,ngnix,apache','欢迎来到小文博客，这里是php学习爱好者的基地，每天分享最新最热php技术教程，学习PHP从这里开始。',0,3,0,1466257194,1466432809),(20,'SEO优化','SEO优化_SEO教程_搜索引擎优化_SEM竞价 - 小文博客','seo优化,搜索引擎优化,seo竞价,seo教程,seo学习','欢迎来到小文博客，这里是php学习爱好者的基地，每天分享最新最热php技术教程，学习PHP从这里开始。',0,4,0,1466257230,1466432901),(21,'热门话题','热门话题_热门资讯_技术大爆炸 - 小文博客','热门话题,热门资讯,php技术,web技术','欢迎来到小文博客，这里是php学习爱好者的基地，每天分享最新最热php技术教程，学习PHP从这里开始。',0,5,0,1466257260,1466432958),(22,'管理工具','管理工具_GIT_Composer - 小文博客','','',0,5,7,1466343232,1466432358),(23,'Linux','Linux_linux学习_linux教程_web服务器 - 小文博客','','',0,0,19,1466774455,1466774455),(24,'seo优化','SEO优化_SEO教程_搜索引擎优化 - 小文博客','','',0,0,20,1467205483,1467205483),(25,'设计模式','php设计模式_php教程 - 小文博客','','',0,3,7,1480381039,1480381130),(26,'JAVA学习','JAVA学习','JAVA学习 从入门到精通 JAVA学习笔记','JAVA学习 从入门到精通 JAVA学习笔记',0,0,0,1493109707,1493109707),(27,'JAVA基础','JAVA基础','JAVA基础 JAVA基础笔记','JAVA基础 JAVA基础笔记',0,0,26,1493109772,1493109772),(28,'GO学习','Go学习_Go基础教程_Go心得  - 小文博客','Go学习_Go基础教程_Go心得  - 小文博客','欢迎来到小文博客，这里是Go学习爱好者的基地，每天分享最新最热Go技术教程，学习Go从这里开始。',0,0,0,1530238137,1530238137),(29,'Go笔记','','','',0,0,28,1530238182,1530238182);
/*!40000 ALTER TABLE `wen_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wen_config`
--

DROP TABLE IF EXISTS `wen_config`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wen_config` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(50) NOT NULL DEFAULT '' COMMENT '//标题',
  `name` varchar(50) NOT NULL DEFAULT '' COMMENT '//变量名',
  `content` text NOT NULL COMMENT '//变量值',
  `sort` smallint(6) NOT NULL DEFAULT '255' COMMENT '//排序',
  `tips` varchar(255) NOT NULL DEFAULT '' COMMENT '//描述',
  `field_type` varchar(50) NOT NULL DEFAULT '' COMMENT '//字段类型',
  `field_value` varchar(255) NOT NULL DEFAULT '' COMMENT '//类型值',
  `created_at` int(255) NOT NULL,
  `updated_at` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wen_config`
--

LOCK TABLES `wen_config` WRITE;
/*!40000 ALTER TABLE `wen_config` DISABLE KEYS */;
INSERT INTO `wen_config` VALUES (1,'网站标题','title','小文|专注于WEB后端技术分享的programmer - 小文blog',1,'网站标题哦','input','',1465736972,1536549021),(2,'备案信息','beian','豫ICP备16004541号-1',10,'备案信息','input','',1465737029,1536549021),(3,'网站状态','sattus','1',0,'xxx','radio','1|开启,0|关闭',1465737050,1536549021),(5,'网站关键词','keywords','php教程,php学习,后端技术,web技术blog,小文blog',2,'网站关键词','input','',1466258183,1536549021),(6,'网站描述','description','欢迎来到小文blog，这里是web开发学习爱好者的基地，每天分享最新最热web技术教程，学习web技术从这里开始。',3,'网站描述','textarea','',1466258219,1536549021),(7,'百度统计','baidu','<script>\r\nvar _hmt = _hmt || [];\r\n(function() {\r\n  var hm = document.createElement(\"script\");\r\n  hm.src = \"//hm.baidu.com/hm.js?0134090688165c59ff88b336901fdce5\";\r\n  var s = document.getElementsByTagName(\"script\")[0]; \r\n  s.parentNode.insertBefore(hm, s);\r\n})();\r\n(function(){\r\n    var bp = document.createElement(\'script\');\r\n    var curProtocol = window.location.protocol.split(\':\')[0];\r\n    if (curProtocol === \'https\') {\r\n        bp.src = \'https://zz.bdstatic.com/linksubmit/push.js\';        \r\n    }\r\n    else {\r\n        bp.src = \'http://push.zhanzhang.baidu.com/push.js\';\r\n    }\r\n    var s = document.getElementsByTagName(\"script\")[0];\r\n    s.parentNode.insertBefore(bp, s);\r\n})();\r\n</script>',4,'百度统计代码','textarea','',1466382892,1536549021),(8,'网易云音乐','music','//music.163.com/outchain/player?type=0&id=411024638&auto=1&height=430',5,'音乐代码','input','',1467122962,1536549021);
/*!40000 ALTER TABLE `wen_config` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wen_links`
--

DROP TABLE IF EXISTS `wen_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wen_links` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8_unicode_ci NOT NULL DEFAULT '' COMMENT '//名称',
  `title` varchar(255) COLLATE utf8_unicode_ci NOT NULL DEFAULT '' COMMENT '//标题',
  `url` varchar(255) COLLATE utf8_unicode_ci NOT NULL DEFAULT '' COMMENT '//链接',
  `sort` int(11) NOT NULL DEFAULT '255' COMMENT '//排序',
  `created_at` int(11) NOT NULL,
  `updated_at` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wen_links`
--

LOCK TABLES `wen_links` WRITE;
/*!40000 ALTER TABLE `wen_links` DISABLE KEYS */;
INSERT INTO `wen_links` VALUES (12,'云天河','云天河博客','http://www.hlzblog.top/',255,1498798822,1498798882),(6,'何智政','何智政博客','http://www.hezhizheng.com/',1,1466755117,1498798897),(9,'六阿哥','六阿哥博客','https://blog.6ag.cn/ ',255,1470963954,1498798875),(10,'朱凯个人站','朱凯个人站','http://p700.cn/',1,1476254926,1476254926);
/*!40000 ALTER TABLE `wen_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wen_nav`
--

DROP TABLE IF EXISTS `wen_nav`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wen_nav` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL COMMENT '//名称',
  `alias` varchar(50) NOT NULL DEFAULT '' COMMENT '//别名',
  `pid` int(11) NOT NULL DEFAULT '0',
  `url` varchar(255) NOT NULL DEFAULT '' COMMENT '//url',
  `sort` int(11) NOT NULL DEFAULT '255' COMMENT '//排序',
  `created_at` int(11) NOT NULL,
  `updated_at` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=33 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wen_nav`
--

LOCK TABLES `wen_nav` WRITE;
/*!40000 ALTER TABLE `wen_nav` DISABLE KEYS */;
INSERT INTO `wen_nav` VALUES (1,'前端技术','前端分享',0,'http://www.az1314.cn/cat/13',2,1465735414,1466257419),(3,'PHP','玩转php',31,'http://www.az1314.cn/cat/7',0,1465911225,1530237840),(4,'服务器','服务器知识',0,'http://www.az1314.cn/cat/19',4,1465911235,1466257536),(6,'HTML','html+css',1,'http://www.az1314.cn/cat/14',0,1465911261,1530237911),(7,'php基础','php基础',3,'http://www.az1314.cn/cat/10',0,1465911273,1466257336),(8,'数据库','数据库管理',0,'http://www.az1314.cn/cat/17',3,1466257479,1466257492),(21,'团队项目','MyWork',0,'javascript:;',6,1496626767,1530764167),(10,'php进阶','php进阶',3,'http://www.az1314.cn/cat/11',1,1466257640,1466257640),(11,'php心得','php心得',3,'http://www.az1314.cn/cat/12',2,1466257666,1466257666),(12,'JQuery','jQuery',1,'http://www.az1314.cn/cat/15',1,1466257717,1466257717),(13,'JavaScript','javascript',1,'http://www.az1314.cn/cat/16',2,1466257743,1530237934),(14,'MySql','mysql',8,'http://www.az1314.cn/cat/18',0,1466257809,1530237955),(15,'留言板','留言板',0,'http://www.az1314.cn/liuyan',10,1466326889,1466326889),(16,'管理工具','管理工具',3,'http://www.az1314.cn/cat/22',5,1466343271,1466343271),(17,'Linux','Linux',4,'http://www.az1314.cn/cat/23',0,1466774517,1466774517),(18,'设计模式','设计模式',3,'http://www.az1314.cn/cat/25',3,1480381145,1480381172),(19,'Java','JAVA笔记',31,'http://www.az1314.cn/cat/26',1,1493109927,1530237833),(20,'JavaSE','JavaSE',19,'http://www.az1314.cn/cat/27',0,1493110008,1496711606),(26,'微学教室','微学教室',21,'http://live.vxue360.com',0,1521076488,1521076488),(25,'消防视频wap','消防wap站',21,'http://www.rzdf119.com/mobile/',5,1517539949,1521081578),(24,'消防视频','消防视频网站',21,'http://www.rzdf119.com',4,1496627049,1521077235),(27,'微学习圈wap','微学wap',21,'http://m.vxue360.com/index.php?s=wap',2,1521076569,1521081568),(28,'微学习圈','微学习圈',21,'http://www.vxue360.com',1,1521077259,1521077293),(29,'微学商城','微学商城',21,'http://shop.vxue360.com',3,1521077277,1521077302),(30,'微学教室wap','直播wap',21,'http://live.vxue360.com/wap',0,1521081174,1521081535),(31,'后端技术','爱上后端',0,'http://www.az1314.cn',0,1530237744,1530237744),(32,'Go','Go',31,'http://www.az1314.cn/cat/28',2,1530238241,1530238248);
/*!40000 ALTER TABLE `wen_nav` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wen_tags`
--

DROP TABLE IF EXISTS `wen_tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wen_tags` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `article_num` int(11) NOT NULL DEFAULT '0',
  `created_at` int(11) NOT NULL,
  `updated_at` int(11) NOT NULL,
  PRIMARY KEY (`id`,`name`,`article_num`)
) ENGINE=InnoDB AUTO_INCREMENT=195 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wen_tags`
--

LOCK TABLES `wen_tags` WRITE;
/*!40000 ALTER TABLE `wen_tags` DISABLE KEYS */;
INSERT INTO `wen_tags` VALUES (3,'php',33,1466260088,1533000989),(5,'信息',0,1466260695,1466344520),(6,'版本管理',-3,1466343983,1466778065),(7,'git',-1,1466343984,1531880384),(8,'php基础',1,1466422465,1466427372),(9,'代码规范',1,1466422465,1466427372),(10,'mysql排序',1,1466488662,1466488662),(11,'mysql',2,1466489608,1500356667),(12,'mysql命令',1,1466489608,1466489936),(13,'mysql操作',1,1466489608,1466489936),(14,'图片懒加载',0,1466497167,1530787406),(15,'序列化',1,1466772606,1466772633),(16,'laravel',1,1466774303,1478828117),(17,'linux',5,1466775993,1531704288),(18,'lnmp',2,1466775993,1531187216),(19,'版本管理',-2,1466777120,1466778065),(20,'git',0,1466777120,1531880384),(21,'版本管理',-1,1466777802,1466778065),(22,'git',1,1466777802,1531880384),(23,'版本管理',0,1466777946,1466778065),(24,'git',2,1466777946,1531880384),(25,'版本管理',1,1466778065,1466778065),(26,'git',3,1466778065,1531880384),(27,'图片懒加载',1,1467188463,1530787406),(28,'pjax',0,1467201896,1467203599),(29,'ajax',0,1467201896,1467203599),(30,'pjax',1,1467203599,1467203599),(31,'ajax',1,1467203599,1467203599),(32,'seo优化',1,1467205814,1473667420),(33,'css初始化',1,1467860242,1467860242),(34,'htmlcss',1,1467860242,1467860242),(35,'mysqli',1,1468378005,1468378611),(36,'sql注入',1,1468378005,1468378611),(37,'phpExcel',1,1468378164,1468378164),(38,'http状态码',1,1468378363,1468378524),(39,'php中奖',1,1468462297,1468462297),(40,'php抽奖',1,1468462297,1468462297),(41,'nginx压缩',1,1468462590,1468462590),(42,'gzip压缩',1,1468462590,1468462590),(43,'php生成订单号',1,1468463101,1468554236),(44,'DIRECTORY_SEPARATOR',1,1468463248,1468463248),(45,'正则',1,1469778602,1478586005),(46,'jquery',1,1470125933,1470125933),(47,'php命名空间',1,1470205003,1470205098),(48,'php采集',0,1472545494,1472545539),(50,'php采集',1,1472545539,1472545539),(54,'php时间函数',1,1473129676,1473129676),(55,'php获取时间',1,1473129676,1473129676),(56,'session',0,1473130445,1473130538),(57,'php session共享',0,1473130445,1473130539),(58,'session',1,1473130539,1473130539),(59,'php session共享',1,1473130539,1473130539),(60,'thinkphp',0,1473142706,1473142752),(62,'thinkphp',1,1473142752,1473142752),(63,'关键词',-1,1473667350,1473667420),(64,'seo优化',0,1473667403,1473667420),(65,'关键词',0,1473667403,1473667420),(66,'seo优化',1,1473667420,1473667420),(67,'关键词',1,1473667420,1473667420),(68,'微信支付',1,1476157288,1476157288),(69,'商城秒杀',1,1477443290,1477443290),(70,'图片下载',1,1478221161,1478221161),(71,'php下载',1,1478221161,1478221161),(72,'php正则',0,1478585915,1478586005),(73,'正则表达式子模式',0,1478585915,1478586005),(74,'php正则',1,1478586005,1478586005),(75,'正则表达式子模式',1,1478586005,1478586005),(76,'正则',1,1478586005,1478586005),(77,'php缓存技术',1,1478586886,1478586886),(78,'php常用缓存',1,1478586886,1478586886),(79,'memcache缓存',1,1478586886,1478586886),(80,'',1,1478586886,1478586886),(82,'laravel',1,1478828117,1478828117),(83,'linux端口占用',1,1480045245,1530614518),(84,'设计模式',-3,1480309809,1480386888),(85,'php设计模式',-3,1480309809,1480386888),(86,'解释器',-4,1480309809,1480381203),(87,'设计模式',-2,1480309885,1480386888),(88,'php设计模式',-2,1480309885,1480386888),(89,'解释器',-3,1480309885,1480381203),(90,'设计模式',-1,1480309919,1480386888),(91,'php设计模式',-1,1480309919,1480386888),(92,'解释器',-2,1480309919,1480381203),(93,'设计模式',0,1480309952,1480386888),(94,'php设计模式',0,1480309952,1480386888),(95,'解释器',-1,1480309952,1480381203),(96,'设计模式',1,1480309982,1480386888),(97,'php设计模式',1,1480309982,1480386888),(98,'解释器',0,1480309982,1480381203),(99,'工厂模式',0,1480380768,1480381195),(100,'简单工厂模式',0,1480380768,1480381195),(101,'php设计模式',1,1480381195,1480386888),(102,'工厂模式',1,1480381195,1480381195),(103,'简单工厂模式',1,1480381195,1480381195),(104,'设计模式',2,1480381203,1480386888),(105,'php设计模式',2,1480381203,1480386888),(106,'解释器',1,1480381203,1480381203),(107,'php外观模式',1,1480386888,1480386888),(108,'java基础',7,1493261207,1530840340),(109,'计算机基础知识',1,1493261207,1530840340),(110,'Java语言概述',0,1493261518,1530840328),(111,'Java数据类型和变量知识',-2,1493261750,1530840317),(113,'Java语言概述',1,1493261933,1530840328),(115,'Java数据类型和变量知识',-1,1493261947,1530840317),(117,'Java数据类型和变量知识',0,1493262008,1530840317),(119,'Java数据类型和变量知识',1,1493262031,1530840317),(120,'Java运算符',0,1493343701,1530840306),(121,'流程控制',1,1493343701,1530840306),(122,'条件语句',0,1493343701,1530840306),(123,'循环语句',1,1493343987,1530840295),(124,'方法概述',1,1493343987,1530840295),(126,'Java运算符',1,1493344007,1530840306),(127,'流程控制',1,1493344007,1530840306),(128,'条件语句',1,1493344007,1530840306),(129,'unicode',-1,1494471574,1496629127),(130,'ascii',-1,1494471574,1496629127),(131,'utf-8',-1,1494471574,1496629127),(132,'unicode',0,1494471610,1496629127),(133,'ascii',0,1494471610,1496629127),(134,'utf-8',0,1494471610,1496629127),(135,'unicode',1,1496629127,1496629127),(136,'ascii',1,1496629127,1496629127),(137,'utf-8',1,1496629127,1496629127),(138,'Java数组概述',1,1496629445,1530840283),(139,'Java面向对象',2,1496629681,1530840272),(140,'Java类与对象',2,1496629681,1530840272),(141,'token设计',1,1500347158,1500347158),(142,'mysql优化',1,1500356667,1500356667),(143,'git命令',0,1501126827,1501555324),(144,'git总结',0,1501126827,1501555324),(145,'git',3,1501555324,1531880384),(146,'git命令',1,1501555324,1501555324),(147,'git总结',1,1501555324,1501555324),(148,'dedecms漏洞',-2,1502069123,1531101268),(149,'织梦漏洞',-2,1502069123,1531101268),(150,'dedecms漏洞',-1,1502069272,1531101268),(151,'织梦漏洞',-1,1502069272,1531101268),(152,'dedecms漏洞',0,1502069310,1531101268),(153,'织梦漏洞',0,1502069310,1531101268),(154,'dedecms漏洞',1,1502069357,1531101268),(155,'织梦漏洞',1,1502069357,1531101268),(156,'敏感词过滤',0,1517475313,1517992073),(157,'trie-filter',0,1517475313,1517992073),(158,'composer',1,1517533455,1517533455),(159,'自动加载',1,1517533455,1517533455),(160,'swoole',1,1517533883,1517533883),(161,'php异步多进程',1,1517533883,1517533883),(162,'消息队列',1,1517534503,1517534503),(163,'定时任务',1,1517534503,1517534503),(164,'多进程',1,1517538858,1517538905),(165,'mp4视频无法播放',1,1517817298,1517817463),(166,'视频插件',1,1517817298,1517817463),(167,'敏感词过滤',1,1517992073,1517992073),(168,'trie-filter',1,1517992073,1517992073),(169,'phpstrom ftp sftp 代码自动提交',0,1528182945,1528183013),(170,'GO',2,1530064775,1531187230),(171,'map类型转换',1,1530064775,1531187230),(172,'docker',1,1530753108,1531187216),(173,'docker命令',1,1530753108,1530753108),(174,'docker',1,1530762217,1531187216),(175,'lnmp',1,1530762217,1531187216),(176,'yum',1,1530765591,1531187200),(177,'rpmdb open failed',1,1530765592,1531187200),(178,'Java基础',1,1530840256,1530840340),(179,'opcache',1,1531042918,1531187146),(180,'并发编程',1,1531187104,1531187104),(181,'笛卡尔乘积',1,1531365262,1531365505),(182,'sku组合',1,1531365262,1531365505),(183,'web技术博客',1,1531814267,1531815243),(184,'php教程',1,1531814267,1531815243),(185,'javascript',1,1532675338,1532675338),(186,'依赖注入',1,1532936429,1532936429),(187,'ioc',1,1532936429,1532936429),(188,'di',1,1532936429,1532936429),(189,'sso',1,1533000989,1533000989),(190,'单点登录',1,1533000989,1533000989),(191,'go',1,1534130711,1534130711),(192,'node',1,1535506863,1535506863),(193,'puppeteer',1,1535506863,1535506863),(194,'centos',1,1535506863,1535506863);
/*!40000 ALTER TABLE `wen_tags` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-09-12 12:20:53
